MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.6                                                    *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013         ;  директивы  типа  контроллера,  под-
                      00014         ;ключения  заголовочного  файла  и  вы-
                      00015         ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ; директивы, позволяющие заменять в
                      00019         ;теле  ПО  команды,  указанные  после
                      00020         ;этой  директивы  (bcf  ,  bsf)  –  метками
                      00021         ;bank0, bank1. Обратную замену произ-
                      00022         ;водит компилятор
  00000020            00023 WAIT                equ     0x20
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30
  00000031            00027 TIME_HH2            equ     0x31
  00000032            00028 TIME_MM1            equ     0x32
  00000033            00029 TIME_MM2            equ     0x33
  00000034            00030 TIME_SS1            equ     0x34
  00000035            00031 TIME_SS2            equ     0x35
  00000036            00032 DAY                 equ     0x36
  00000037            00033 ALARM_HH1           equ     0x37
  00000038            00034 ALARM_HH2           equ     0x38
  00000039            00035 ALARM_MM1           equ     0x39
  0000003A            00036 ALARM_MM2           equ     0x3A
  0000003B            00037 Key1                equ     0x3B
  0000003C            00038 Key2                equ     0x3C
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key9                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Blink               equ     0x40
  00000041            00043 Cnt                 equ     0x41
  00000042            00044 Blink_Alarm         equ     0x42
  00000043            00045 NumPressKey         equ     0x43
  00000044            00046 fCOUNTER1           equ     0x44
  00000045            00047 TEMP_TIME_HH1       equ     0x45
  00000046            00048 TEMP_TIME_HH2       equ     0x46
  00000047            00049 TEMP_TIME_MM1       equ     0x47
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumAlarmBit         equ     0x50
                      00059     
                      00060 wait  macro     time
                      00061     movlw    (time/5)-1
                      00062     movwf    WAIT
                      00063     call    wait5u
                      00064     endm
                      00065         ;макрос паузы с именем wait. Особен-
                      00066         ;ность этого макроса состоит в том, что
                      00067         ;у  него  имеется  параметр  –  time.  При
                      00068         ;вызове  макроса  значение  параметра
                      00069         ;указывается  после  имени  макроса  в
                      00070         ;виде  целого  десятичного  числа  крат-
                      00071         ;ного  5  (в  данном  примере).  В  теле
                      00072         ;макроса  это  число  подставляется  в
                      00073         ;«переменную» time и далее использу-
                      00074         ;ется вычисленное значение (которое в
                      00075         ;данном случае  выступает  в  роли  кон-
                      00076         ;станты, записываемой в W). Вместе с
                      00077         ;процедурой  wait5u  длительность  за-
                      00078         ;держки,  обеспечиваемая  макросом
                      00079         ;равна time микросекунд
                      00080 
                      00081     org 0x0000
0000   0183           00082     clrf STATUS
0001   3000           00083     movlw 0x00
0002   008A           00084     movwf PCLATH
0003   2???           00085     goto begin
                      00086         ;выбор нулевой страницы памяти ко-
                      00087         ;манд и размещение на ней откомпили-
                      00088         ;рованного кода
                      00089 
0004                  00090 begin
0004   1683           00091     bank1  ; выбор первого банка памяти. Для вы-
                      00092         ;зова используется метка bank1, объяв-
                      00093         ;ленная выше директивой #define
0005   308F           00094     movlw 0x8F
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   0081           00095     movwf OPTION_REG
0007   0064           00096     clrwdt
                      00097         ;установка  максимального  времени
                      00098         ;срабатывания  сторожевого  таймера  и
                      00099         ;его сброс
0008   018B           00100     clrf INTCON
0009   018C           00101     clrf PIE1
000A   018D           00102     clrf PIE2
                      00103         ;отключение  прерываний  и  их  обработки
000B   3000           00104     movlw .0
000C   0086           00105     movwf TRISB
000D   0087           00106     movwf TRISC
000E   0089           00107     movwf TRISE
                      00108         ; конфигурирование  портов  В, С, Е
000F   30F8           00109     movlw b'11111000' 
0010   0085           00110     movwf TRISA 
0011   3000           00111     movlw b'00000000'
0012   0088           00112     movwf TRISD
0013   300F           00113     movlw b'00001111'
0014   0081           00114     movwf OPTION_REG
                      00115         ;конфигурирование  RD0  как  входа
                      00116         ;для  установки  на  нем  «1»  в  качестве
                      00117         ;исходного  состояния  интерфейса  «1-Wire»
0015   019F           00118     clrf ADCON1 
0016   149F           00119     bsf ADCON1,0x01 
0017   151F           00120     bsf ADCON1,0x02 
0018   1283           00121     bank0
0019   01BB           00122     clrf Key1    
001A   01BC           00123     clrf Key2       
001B   01BD           00124     clrf Key3       
001C   01BE           00125     clrf Key4              
001D   01BF           00126     clrf Key9               
001E   01C1           00127     clrf Cnt                
001F   0187           00128     clrf PORTC
0020   0188           00129     clrf PORTD
                      00130 ; подготовка к передаче команд на контроллер
                      00131 ;HD путем установки RC0=0
0021   3001           00132     movlw 0x01
0022   2???           00133     call write
0023   300F           00134     movlw 0x0f
0024   2???           00135     call delay
                      00136 ; передача команды Clear  Display для очистки
                      00137 ;дисплея и установки счетчика адреса видеопа-
                      00138 ;мяти  на  нулевой  адрес  (первое  знакоместо  в
                      00139 ;верхней строке), с необходимой задержкой
0025   0064           00140     clrwdt
0026   3038           00141     movlw 0x38
0027   2???           00142     call write
0028   300F           00143     movlw 0x0f
0029   2???           00144     call delay
                      00145 
                      00146 ; передача команды Function Set для установки
                      00147 ;режима  2-х  строчного  индикатора,  размера
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ;знакоместа 5х7 и 8 разрядной шины данных
002A   3006           00149     movlw 0x06
002B   2???           00150     call write
002C   300F           00151     movlw 0x0f
002D   2???           00152     call delay
                      00153 ;передача  команды  Entry  Mode  Set  для  уста-
                      00154 ;новки режима увеличения счетчика адреса ви-
                      00155 ;деопамяти, после каждой записи символа в нее,
                      00156 ;при неподвижности видеопамяти относительно
                      00157 ;индикатора
002E   300C           00158     movlw 0x0c
002F   2???           00159     call write
0030   300F           00160     movlw 0x0f
0031   2???           00161     call delay
                      00162 ;  передача  команды  Display  ON/OFF  control
                      00163 ;для включения дисплея с отключенным курсо-
                      00164 ;ром.  На  этом  этап инициализации дисплея за-
                      00165 ;кончен.
0032   3030           00166     movlw       0x30
0033   00B0           00167     movwf       TIME_HH1
0034   00B1           00168     movwf       TIME_HH2
0035   00B2           00169     movwf       TIME_MM1
0036   00B3           00170     movwf       TIME_MM2
0037   00B4           00171     movwf       TIME_SS1
0038   00B5           00172     movwf       TIME_SS2
0039   00B7           00173     movwf       ALARM_HH1
003A   00B8           00174     movwf       ALARM_HH2
003B   00B9           00175     movwf       ALARM_MM1
003C   00BA           00176     movwf       ALARM_MM2
003D   3000           00177     movlw       .0
003E   00B6           00178     movwf       DAY
003F   00C2           00179     movwf       Blink_Alarm
0040   00D0           00180     movwf       NumAlarmBit
0041   3000           00181     movlw       b'00000000'
0042   00C0           00182     movwf       Blink
                      00183 
0043                  00184 START
0043   3000           00185     movlw .0
0044   00C2           00186     movwf Blink_Alarm
0045   0831           00187     movfw TIME_HH2              ; записываем значения постоянныx переменных в  временныe 
0046   00C6           00188     movwf TEMP_TIME_HH2         
0047   0830           00189     movfw TIME_HH1              
0048   00C5           00190     movwf TEMP_TIME_HH1
0049   0833           00191     movfw TIME_MM2              
004A   00C8           00192     movwf TEMP_TIME_MM2
004B   0832           00193     movfw TIME_MM1              
004C   00C7           00194     movwf TEMP_TIME_MM1
004D   0835           00195     movfw TIME_SS2              
004E   00CA           00196     movwf TEMP_TIME_SS2
004F   0834           00197     movfw TIME_SS1              
0050   00C9           00198     movwf TEMP_TIME_SS1
0051   0836           00199     movfw DAY
0052   00CB           00200     movwf TEMP_DAY
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0053   3000           00201     movlw 0x00
0054   00C3           00202     movwf NumPressKey           ; NPK каждый раз устанавливаем в начальное значение
0055   0837           00203     movfw ALARM_HH1
0056   00CC           00204     movwf TEMP_ALARM_HH1
0057   0838           00205     movfw ALARM_HH2
0058   00CD           00206     movwf TEMP_ALARM_HH2
0059   0839           00207     movfw ALARM_MM1
005A   00CE           00208     movwf TEMP_ALARM_MM1
005B   083A           00209     movfw ALARM_MM2
005C   00CF           00210     movwf TEMP_ALARM_MM2
                      00211     
005D   2???           00212     call Keyboard               ; читаем клавиатуру
005E   183B           00213     btfsc Key1,0                ; проверка нажатия клавиши "1",  если нажата, то переходим 
005F   2???           00214     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
0060   183C           00215     btfsc Key2,0                ; проверка нажатия клавиши "2",  если нажата, то переходим 
0061   2???           00216     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
0062   183D           00217     btfsc Key3,0                ; проверка нажатия клавиши "3",  если нажата, то переходим 
0063   2???           00218     call alarm_plus_blink               ; к изменению будильника, нет - тогда едем дальше
                      00219         
0064   2???           00220     call LCD_one                ;Отрисовка первой строки                
                      00221 
                      00222         ;Счет десятков секунд (0-6) - TIME_SS1
0065   0AB4           00223     incf TIME_SS1,1
0066   303A           00224     movlw 0x3A                  ; if !=10
0067   0634           00225     xorwf TIME_SS1, w;
0068   1D03           00226     btfss STATUS, 0x02
0069   2???           00227     goto end_clock
                      00228         ;обнуление TIME_MM1
006A   3030           00229     movlw 0x30
006B   00B4           00230     movwf       TIME_SS1
                      00231 
                      00232         ;Счет десятков секунд (0-6) - TIME_SS2
006C   0AB5           00233     incf TIME_SS2,1
006D   3036           00234     movlw 0x36                  ; if !=6
006E   0635           00235     xorwf TIME_SS2, w;
006F   1D03           00236     btfss STATUS, 0x02
0070   2???           00237     goto end_clock
                      00238         ;обнуление TIME_MM2
0071   3030           00239     movlw 0x30
0072   00B5           00240     movwf       TIME_SS2
                      00241         
                      00242         ;Счет десятков минут (0-6) - TIME_MM1
0073   0AB2           00243     incf TIME_MM1,1
0074   303A           00244     movlw 0x3A                  ; if !=10
0075   0632           00245     xorwf TIME_MM1, w;
0076   1D03           00246     btfss STATUS, 0x02
0077   2???           00247     goto end_clock
                      00248         ;обнуление TIME_MM1
0078   3030           00249     movlw 0x30
0079   00B2           00250     movwf       TIME_MM1
                      00251 
                      00252         ;Счет десятков минут (0-6) - TIME_MM2
007A   0AB3           00253     incf TIME_MM2,1
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007B   3036           00254     movlw 0x36                  ; if !=6
007C   0633           00255     xorwf TIME_MM2, w;
007D   1D03           00256     btfss STATUS, 0x02
007E   2???           00257     goto end_clock
                      00258         ;обнуление TIME_MM2
007F   3030           00259     movlw 0x30
0080   00B3           00260     movwf       TIME_MM2
                      00261 
                      00262         ;Счет десятков единиц часов - TIME_НН2, TIME_НН1
0081   0AB0           00263     incf TIME_HH1,1
0082   3034           00264     movlw 0x34                  ; if !=4
0083   0630           00265     xorwf TIME_HH1, w;
0084   1D03           00266     btfss STATUS, 0x02
0085   2???           00267     goto ten_clock
0086   3032           00268     movlw 0x32                  ; if !=2
0087   0631           00269     xorwf TIME_HH2, w;
0088   1D03           00270     btfss STATUS, 0x02
0089   2???           00271     goto ten_clock
008A   3030           00272     movlw 0x30
008B   00B0           00273     movwf       TIME_HH1
008C   00B1           00274     movwf       TIME_HH2
008D   0AB6           00275     incf    DAY,1
008E   3007           00276     movlw       .7                      ; inc переменной День
008F   0636           00277     xorwf DAY, w;
0090   1D03           00278     btfss STATUS, 0x02                  ; Обнуление переменной при достижении воскресенья, 
0091   2???           00279     goto end_clock                      ; что бы при 00:00:00 перейти в понедельник
0092   3000           00280     movlw       .0
0093   00B6           00281     movwf       DAY
                      00282 
                      00283         
0094                  00284 ten_clock
0094   303A           00285     movlw 0x3A                  ; if !=10 
0095   0630           00286     xorwf TIME_HH1, w;          ; подпрограмма для работы с форматом 24 часа
0096   1D03           00287     btfss STATUS, 0x02          ; т.к. 18 часов может быть, а 28 нет, то надо
0097   2???           00288     goto end_clock              ; ограничить единицы при десятках = 2
Message[305]: Using default destination of 1 (file).
0098   0AB1           00289     incf    TIME_HH2
0099   3030           00290     movlw 0x30
009A   00B0           00291     movwf       TIME_HH1
                      00292         
009B                  00293 end_clock
009B   0064           00294     clrwdt
                      00295     
                      00296     ;ОБРАБОТКА БУДИЛЬНИКА
009C   0831           00297     movfw TIME_HH2              
009D   0638           00298     xorwf ALARM_HH2, w;         ; подпрограмма для работы с форматом 24 часа
009E   1903           00299     btfsc STATUS, 0x02
009F   2???           00300     goto if_T_AT_H1
00A0   2???           00301     goto if_A_ON
                      00302     
00A1                  00303 if_T_AT_H1    
00A1   0830           00304     movfw TIME_HH1              
00A2   0637           00305     xorwf ALARM_HH1, w;         ; подпрограмма для работы с форматом 24 часа
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A3   1903           00306     btfsc STATUS, 0x02
00A4   2???           00307     goto if_T_AT_M2
00A5   2???           00308     goto if_A_ON
                      00309     
00A6                  00310 if_T_AT_M2    
00A6   0833           00311     movfw TIME_MM2              
00A7   063A           00312     xorwf ALARM_MM2, w;         ; подпрограмма для работы с форматом 24 часа
00A8   1903           00313     btfsc STATUS, 0x02
00A9   2???           00314     goto if_T_AT_M1
00AA   2???           00315     goto if_A_ON
                      00316     
00AB                  00317 if_T_AT_M1    
00AB   0832           00318     movfw TIME_MM1              
00AC   0639           00319     xorwf ALARM_MM1, w;         ; подпрограмма для работы с форматом 24 часа
00AD   1903           00320     btfsc STATUS, 0x02
00AE   2???           00321     goto inc_BA
00AF   2???           00322     goto if_A_ON
                      00323     
00B0                  00324 inc_BA
00B0   3001           00325     movlw .1
00B1   00C2           00326     movwf Blink_Alarm
00B2   2???           00327     goto blinkON
                      00328     
00B3                  00329 if_A_ON 
00B3   3001           00330     movlw .1
00B4   0650           00331     xorwf NumAlarmBit, w
00B5   1903           00332     btfsc STATUS, 0x02
00B6   2???           00333     goto blinkON
00B7   2???           00334     goto end_ALARM
                      00335     
00B8                  00336 NULL_BA_NAB
00B8   3000           00337     movlw .0
00B9   00D0           00338     movwf NumAlarmBit
00BA   00C2           00339     movwf Blink_Alarm
00BB   2???           00340     goto end_ALARM
                      00341     
00BC                  00342 blinkON
                      00343     ; SOUND ON
00BC   2???           00344     call Keyboard           ; спрашиваем клавиатуру
00BD   183F           00345     btfsc Key9,0
00BE   2???           00346     goto NULL_BA_NAB        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
00BF   3001           00347     movlw .1
00C0   00D0           00348     movwf NumAlarmBit
00C1                  00349 end_ALARM
00C1   2???           00350     call LCD_two                ;Отрисовка второй строки
00C2   30FF           00351     movlw 0xff
00C3   2???           00352     call delay ;задержка крч
00C4   30FF           00353     movlw 0xff
00C5   2???           00354     call delay ;задержка крч
00C6   30FF           00355     movlw 0xff
00C7   2???           00356     call delay ;задержка крч
00C8   2???           00357     goto START          ; конец основного цикла (должен быть = 1сек)
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00358 
                      00359     ;--------------------------------------------------------
                      00360     ;--------------------------------------------------------
                      00361     
                      00362      ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
00C9   0782           00363 DEC addwf PCL
00CA   2???           00364     goto monday
00CB   2???           00365     goto tuesday
00CC   2???           00366     goto wednesday      
00CD   2???           00367     goto thursday    
00CE   2???           00368     goto friday         
00CF   2???           00369     goto saturday               
00D0   2???           00370     goto sunday         
00D1   0008           00371     return
                      00372 ;Отрисовка дней недели
00D2                  00373 monday                      ;понедельник
00D2   304D           00374     movlw 'M'
00D3   2???           00375     call write
00D4   304F           00376     movlw 'O'
00D5   2???           00377     call write
00D6   304E           00378     movlw 'N'
00D7   2???           00379     call write
00D8   2???           00380     goto exday
00D9                  00381 tuesday                     ;вторник
00D9   3054           00382     movlw 'T'
00DA   2???           00383     call write
00DB   3055           00384     movlw 'U'
00DC   2???           00385     call write
00DD   3045           00386     movlw 'E'
00DE   2???           00387     call write
00DF   2???           00388     goto exday
00E0                  00389 wednesday                   ;среда
00E0   3057           00390     movlw 'W'
00E1   2???           00391     call write
00E2   3045           00392     movlw 'E'
00E3   2???           00393     call write
00E4   3044           00394     movlw 'D'
00E5   2???           00395     call write
00E6   2???           00396     goto exday
00E7                  00397 thursday                    ;четверг
00E7   3054           00398     movlw 'T'
00E8   2???           00399     call write
00E9   3048           00400     movlw 'H'
00EA   2???           00401     call write
00EB   3055           00402     movlw 'U'
00EC   2???           00403     call write
00ED   2???           00404     goto exday
00EE                  00405 friday                      ;пятница
00EE   3046           00406     movlw 'F'
00EF   2???           00407     call write
00F0   3052           00408     movlw 'R'
00F1   2???           00409     call write
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F2   3049           00410     movlw 'I'
00F3   2???           00411     call write
00F4   2???           00412     goto exday
00F5                  00413 saturday                    ;суббота
00F5   3053           00414     movlw 'S'
00F6   2???           00415     call write
00F7   3041           00416     movlw 'A'
00F8   2???           00417     call write
00F9   3054           00418     movlw 'T'
00FA   2???           00419     call write
00FB   2???           00420     goto exday
00FC                  00421 sunday                      ;воскресенье
00FC   3053           00422     movlw 'S'
00FD   2???           00423     call write
00FE   3055           00424     movlw 'U'
00FF   2???           00425     call write
0100   304E           00426     movlw 'N'
0101   2???           00427     call write
0102                  00428 exday
0102   0008           00429     return
                      00430 
                      00431     ;--------------------------------------------------------
                      00432     
0103                  00433 time_plus_blink                 ; инкремент переменной выбора и переход к изменению времени
0103   30FF           00434     movlw 0xff                          
0104   2???           00435     call delay                          ;задержка крч
0105   2???           00436     call Keyboard                       ;опрос клавиатуры что бы выяснить
0106   08C1           00437     movf Cnt,1                          ;отжата клавиша или нет
0107   1D03           00438     btfss STATUS,Z                      ;если нет, то циклим
0108   2???           00439     goto time_plus_blink
0109   0AC3           00440     incf NumPressKey,1
010A   2???           00441     goto change_time
010B   0008           00442     return
                      00443     
010C                  00444 day_plus_blink                  ; инкремент переменной выбора и переход к изменению времени
010C   30FF           00445     movlw 0xff                          
010D   2???           00446     call delay                          ;задержка крч
010E   2???           00447     call Keyboard                       ;опрос клавиатуры что бы выяснить
010F   08C1           00448     movf Cnt,1                          ;отжата клавиша или нет
0110   1D03           00449     btfss STATUS,Z                      ;если нет, то циклим
0111   2???           00450     goto day_plus_blink
0112   3008           00451     movlw 0x8
0113   00C3           00452     movwf NumPressKey
0114   2???           00453     goto change_day
0115   0008           00454     return
                      00455     
0116                  00456 alarm_plus_blink                        ; инкремент переменной выбора и переход к изменению времени
0116   30FF           00457     movlw 0xff                          
0117   2???           00458     call delay                          ;задержка крч
0118   2???           00459     call Keyboard                       ;опрос клавиатуры что бы выяснить
0119   08C1           00460     movf Cnt,1                          ;отжата клавиша или нет
011A   1D03           00461     btfss STATUS,Z                      ;если нет, то циклим
011B   2???           00462     goto alarm_plus_blink
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011C   3009           00463     movlw 0x9
011D   00C3           00464     movwf NumPressKey
011E   2???           00465     goto change_alarm
011F   0008           00466     return
                      00467     ;--------------------------------------------------------
                      00468     
0120                  00469 write    ; процедура записи байта к контроллер HD
0120   1303           00470     bcf STATUS, RP1
0121   1283           00471     bcf STATUS, RP0
0122   0086           00472     movwf PORTB
0123   1507           00473     bsf PORTC, 2
0124   3001           00474     movlw 0x01
0125   2???           00475     call delay
0126   1107           00476     bcf PORTC, 2
0127   0008           00477     return
                      00478     
                      00479         ; перед вызовом этой процедуры в W помеща-
                      00480         ;ется байт, который надо записать в HD. Далее
                      00481         ;он передается в PORTB и формируется отрица-
                      00482         ;тельный перепад на RC2, путем предваритель-
                      00483         ;ной  его  установки  в  «1»,  удержания  этого
                      00484         ;уровня в течение некоторого времени (опреде-
                      00485         ;ляемого временем задержки delay  при  W=1) и
                      00486         ;сброса его в «0».
                      00487 
                      00488         ;  процедура  задержки,  время  которой  можно
                      00489         ;регулировать, задавая число в W
0128                  00490 delay
0128   1303           00491     bcf   STATUS, RP1
0129   1283           00492     bcf   STATUS, RP0
012A   00A7           00493     movwf   fCOUNTER2
012B   01A6           00494     clrf    fCOUNTER
                      00495     
012C                  00496 BD_Loop
012C   0064           00497     clrwdt
012D   0BA6           00498     decfsz  fCOUNTER, f
012E   2???           00499     goto    BD_Loop
012F   0BA7           00500     decfsz  fCOUNTER2, f
0130   2???           00501     goto    BD_Loop
0131   0008           00502     return
                      00503 
                      00504     ;==========================================
                      00505     
0132                  00506 LCD_one
0132   1007           00507     bcf PORTC, 0
0133   3080           00508     movlw b'10000000'   ; установка адреса
0134   2???           00509     call write
0135   1407           00510     bsf PORTC,0
                      00511     ;Отрисовка первой строки
                      00512     ; Отрисовка Н2
0136   2???           00513     call paintH2
                      00514     ; Отрисовка Н1
0137   2???           00515     call paintH1
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0138   303A           00516     movlw ':'
0139   2???           00517     call write
                      00518     ; Отрисовка М2
013A   2???           00519     call paintM2
                      00520     ; Отрисовка М1
013B   2???           00521     call paintM1
013C   303A           00522     movlw ':'
013D   2???           00523     call write
                      00524     ; Отрисовка S2
013E   2???           00525     call paintS2
                      00526     ; Отрисовка S1
013F   2???           00527     call paintS1
0140   3020           00528     movlw ' '
0141   2???           00529     call write
0142   3020           00530     movlw ' '
0143   2???           00531     call write
0144   2???           00532     call printDay
                      00533 
0145   0008           00534     return
                      00535     
                      00536     ;==========================================
                      00537     
                      00538     ; Собственно механизм последовательного моргания при настройке времени
0146                  00539 paintH2
0146   3001           00540     movlw 0x1                   ; если NumPressKey = 0, то вызываем
0147   0643           00541     xorwf NumPressKey, w;       
0148   1D03           00542     btfss STATUS, 0x02          
0149   2???           00543     goto blink_on_H2
014A   0AC0           00544     incf Blink,1
014B   1C40           00545     btfss Blink, 0
014C   2???           00546     goto blink_on_H2
014D   2???           00547     goto blink_off_H2
014E                  00548 blink_off_H2
014E   3020           00549     movlw ' '
014F   2???           00550     call write
0150   2???           00551     goto return_H2
0151                  00552 blink_on_H2
0151   0831           00553     movfw TIME_HH2
0152   2???           00554     call write
0153                  00555 return_H2    
0153   0008           00556     return
                      00557     ;-----------
0154                  00558 paintH1
0154   3002           00559     movlw 0x2                   ; если NumPressKey = 0, то вызываем
0155   0643           00560     xorwf NumPressKey, w;       
0156   1D03           00561     btfss STATUS, 0x02          
0157   2???           00562     goto blink_on_H1
0158   0AC0           00563     incf Blink,1
0159   1C40           00564     btfss Blink, 0
015A   2???           00565     goto blink_on_H1
015B   2???           00566     goto blink_off_H1
015C                  00567 blink_off_H1
015C   3020           00568     movlw ' '
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015D   2???           00569     call write
015E   2???           00570     goto return_H1
015F                  00571 blink_on_H1
015F   0830           00572     movfw TIME_HH1
0160   2???           00573     call write
0161                  00574 return_H1
0161   0008           00575     return
                      00576     ;------------
0162                  00577 paintM2
0162   3003           00578     movlw 0x3                   ; если NumPressKey = 0, то вызываем
0163   0643           00579     xorwf NumPressKey, w;       
0164   1D03           00580     btfss STATUS, 0x02          
0165   2???           00581     goto blink_on_M2
0166   0AC0           00582     incf Blink,1
0167   1C40           00583     btfss Blink, 0
0168   2???           00584     goto blink_on_M2
0169   2???           00585     goto blink_off_M2
016A                  00586 blink_off_M2
016A   3020           00587     movlw ' '
016B   2???           00588     call write
016C   2???           00589     goto return_M2
016D                  00590 blink_on_M2
016D   0833           00591     movfw TIME_MM2
016E   2???           00592     call write
016F                  00593 return_M2
016F   0008           00594     return
                      00595     ;------------
0170                  00596 paintM1
0170   3004           00597     movlw 0x4                   ; если NumPressKey = 0, то вызываем
0171   0643           00598     xorwf NumPressKey, w;       
0172   1D03           00599     btfss STATUS, 0x02          
0173   2???           00600     goto blink_on_M1
0174   0AC0           00601     incf Blink,1
0175   1C40           00602     btfss Blink, 0
0176   2???           00603     goto blink_on_M1
0177   2???           00604     goto blink_off_M1
0178                  00605 blink_off_M1
0178   3020           00606     movlw ' '
0179   2???           00607     call write
017A   2???           00608     goto return_M1
017B                  00609 blink_on_M1
017B   0832           00610     movfw TIME_MM1
017C   2???           00611     call write
017D                  00612 return_M1
017D   0008           00613     return
                      00614     ;------------
017E                  00615 paintS2
017E   3005           00616     movlw 0x5                   ; если NumPressKey = 0, то вызываем
017F   0643           00617     xorwf NumPressKey, w;       
0180   1D03           00618     btfss STATUS, 0x02          
0181   2???           00619     goto blink_on_S2
0182   0AC0           00620     incf Blink,1
0183   1C40           00621     btfss Blink, 0
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0184   2???           00622     goto blink_on_S2
0185   2???           00623     goto blink_off_S2
0186                  00624 blink_off_S2
0186   3020           00625     movlw ' '
0187   2???           00626     call write
0188   2???           00627     goto return_S2
0189                  00628 blink_on_S2
0189   0835           00629     movfw TIME_SS2
018A   2???           00630     call write
018B                  00631 return_S2
018B   0008           00632     return
                      00633     ;------------
018C                  00634 paintS1
018C   3006           00635     movlw 0x6                   ; если NumPressKey = 0, то вызываем
018D   0643           00636     xorwf NumPressKey, w;       
018E   1D03           00637     btfss STATUS, 0x02          
018F   2???           00638     goto blink_on_S1
0190   0AC0           00639     incf Blink,1
0191   1C40           00640     btfss Blink, 0
0192   2???           00641     goto blink_on_S1
0193   2???           00642     goto blink_off_S1
0194                  00643 blink_off_S1
0194   3020           00644     movlw ' '
0195   2???           00645     call write
0196   2???           00646     goto return_S1
0197                  00647 blink_on_S1
0197   0834           00648     movfw TIME_SS1
0198   2???           00649     call write
0199                  00650 return_S1
0199   0008           00651     return
                      00652     ;-----------
019A                  00653 printDay
019A   3008           00654     movlw 0x8                   ; если NumPressKey = 0, то вызываем
019B   0643           00655     xorwf NumPressKey, w;       
019C   1D03           00656     btfss STATUS, 0x02          
019D   2???           00657     goto blink_on_day
019E   0AC0           00658     incf Blink,1
019F   1C40           00659     btfss Blink, 0
01A0   2???           00660     goto blink_on_day
01A1   2???           00661     goto blink_off_day
01A2                  00662 blink_off_day
01A2   3020           00663     movlw ' '
01A3   2???           00664     call write
01A4   3020           00665     movlw ' '
01A5   2???           00666     call write
01A6   3020           00667     movlw ' '
01A7   2???           00668     call write
01A8   2???           00669     goto return_DAY
01A9                  00670 blink_on_day
01A9   0836           00671     movfw DAY                           
01AA   2???           00672     call DEC
01AB                  00673 return_DAY
01AB   0008           00674     return
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00675     ;==========================================   
                      00676     
01AC                  00677 LCD_two
01AC   1007           00678     bcf PORTC, 0
01AD   30C4           00679     movlw b'11000100'
01AE   2???           00680     call write
                      00681 ; Установка RC0=0, для последующей передачи
                      00682 ;команды  на  контроллер  HD.  Передается  ко-
                      00683 ;манда Set DDRAM address,  устанавливающая
                      00684 ;счетчик  адреса  видеопамяти  на  начало  2-ой
                      00685 ;строки:  ячейку  с  адресом  (0х40  =  0100  0000).
                      00686 ;Это  необходимо  для  вывода  фразы  «TEM-
                      00687 ;PERATURA =» на второй строке индикатора.
                      00688 
01AF   1407           00689     bsf PORTC,0  ; установка RC0=1, для последующей передачи
                      00690 ;кодов символов второй строки на дисплей. Об-
                      00691 ;ратите внимание на то, что нигде не требуется
                      00692 ;изменения  банков  памяти: т.к. все регистры, с
                      00693 ;которыми работает ПО, находятся в 0-ом бан-
                      00694 ;ке.
01B0   2???           00695     call paint_ALARM
                      00696     
01B1   3020           00697     movlw ' '
01B2   2???           00698     call write
01B3   3020           00699     movlw ' '
01B4   2???           00700     call write
                      00701     
01B5   2???           00702     call paintH2_A
01B6   2???           00703     call paintH1_A
01B7   303A           00704     movlw ':'
01B8   2???           00705     call write
01B9   2???           00706     call paintM2_A
01BA   2???           00707     call paintM1_A
01BB   0008           00708     return
                      00709  
                      00710     ;------------------------------------------
01BC                  00711 paintH2_A
01BC   3009           00712     movlw 0x9                   ; если NumPressKey = 0, то вызываем
01BD   0643           00713     xorwf NumPressKey, w;       
01BE   1D03           00714     btfss STATUS, 0x02          
01BF   2???           00715     goto blink_on_H2_A
01C0   0AC0           00716     incf Blink,1
01C1   1C40           00717     btfss Blink, 0
01C2   2???           00718     goto blink_on_H2_A
01C3   2???           00719     goto blink_off_H2_A
01C4                  00720 blink_off_H2_A
01C4   3020           00721     movlw ' '
01C5   2???           00722     call write
01C6   2???           00723     goto return_A_H2
01C7                  00724 blink_on_H2_A
01C7   0838           00725     movfw ALARM_HH2
01C8   2???           00726     call write
01C9                  00727 return_A_H2
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C9   0008           00728     return
                      00729     ;-----------
01CA                  00730 paintH1_A
01CA   300A           00731     movlw 0xa                   ; если NumPressKey = 0, то вызываем
01CB   0643           00732     xorwf NumPressKey, w;       
01CC   1D03           00733     btfss STATUS, 0x02          
01CD   2???           00734     goto blink_on_H1_A
01CE   0AC0           00735     incf Blink,1
01CF   1C40           00736     btfss Blink, 0
01D0   2???           00737     goto blink_on_H1_A
01D1   2???           00738     goto blink_off_H1_A
01D2                  00739 blink_off_H1_A
01D2   3020           00740     movlw ' '
01D3   2???           00741     call write
01D4   2???           00742     goto return_A_H1
01D5                  00743 blink_on_H1_A
01D5   0837           00744     movfw ALARM_HH1
01D6   2???           00745     call write
01D7                  00746 return_A_H1
01D7   0008           00747     return
                      00748     ;------------
01D8                  00749 paintM2_A
01D8   300B           00750     movlw 0xb                   ; если NumPressKey = 0, то вызываем
01D9   0643           00751     xorwf NumPressKey, w;       
01DA   1D03           00752     btfss STATUS, 0x02          
01DB   2???           00753     goto blink_on_M2_A
01DC   0AC0           00754     incf Blink,1
01DD   1C40           00755     btfss Blink, 0
01DE   2???           00756     goto blink_on_M2_A
01DF   2???           00757     goto blink_off_M2_A
01E0                  00758 blink_off_M2_A
01E0   3020           00759     movlw ' '
01E1   2???           00760     call write
01E2   2???           00761     goto return_A_M2
01E3                  00762 blink_on_M2_A
01E3   083A           00763     movfw ALARM_MM2
01E4   2???           00764     call write
01E5                  00765 return_A_M2
01E5   0008           00766     return
                      00767     ;------------
01E6                  00768 paintM1_A
01E6   300C           00769     movlw 0xc                   ; если NumPressKey = 0, то вызываем
01E7   0643           00770     xorwf NumPressKey, w;       
01E8   1D03           00771     btfss STATUS, 0x02          
01E9   2???           00772     goto blink_on_M1_A
01EA   0AC0           00773     incf Blink,1
01EB   1C40           00774     btfss Blink, 0
01EC   2???           00775     goto blink_on_M1_A
01ED   2???           00776     goto blink_off_M1_A
01EE                  00777 blink_off_M1_A
01EE   3020           00778     movlw ' '
01EF   2???           00779     call write
01F0   2???           00780     goto return_A_M1
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F1                  00781 blink_on_M1_A
01F1   0839           00782     movfw ALARM_MM1
01F2   2???           00783     call write
01F3                  00784 return_A_M1
01F3   0008           00785     return
                      00786     ;----------
01F4                  00787 paint_ALARM
01F4   3001           00788     movlw .1                    ; если NumPressKey = 0, то вызываем
01F5   0642           00789     xorwf Blink_Alarm, w;       
01F6   1D03           00790     btfss STATUS, 0x02          
01F7   2???           00791     goto blink_on_ALARM
01F8   0AC0           00792     incf Blink,1
01F9   1C40           00793     btfss Blink, 0
01FA   2???           00794     goto blink_on_ALARM
01FB   2???           00795     goto blink_off_ALARM
01FC                  00796 blink_off_ALARM
01FC   3020           00797     movlw ' '
01FD   2???           00798     call write
01FE   3020           00799     movlw ' '
01FF   2???           00800     call write
0200   3020           00801     movlw ' '
0201   2???           00802     call write
0202   3020           00803     movlw ' '
0203   2???           00804     call write
0204   3020           00805     movlw ' '
0205   2???           00806     call write
0206   2???           00807     goto return_ALARM
0207                  00808 blink_on_ALARM
0207   3041           00809     movlw 'A'
0208   2???           00810     call write
0209   304C           00811     movlw 'L'
020A   2???           00812     call write
020B   3041           00813     movlw 'A'
020C   2???           00814     call write
020D   3052           00815     movlw 'R'
020E   2???           00816     call write
020F   304D           00817     movlw 'M'
0210   2???           00818     call write
0211                  00819 return_ALARM
0211   0008           00820     return
                      00821     ;-----------
                      00822     
                      00823     ;==========================================
                      00824      
                      00825     
0212                  00826 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
0212   1283           00827     bank0                   ; переход в нулевой банк, для нормального вызова функции из тела программы
0213   1303           00828     bcf STATUS, RP1
0214   01BB           00829     clrf Key1               ; обнуление кодов клавиш
0215   01BC           00830     clrf Key2 
0216   01BD           00831     clrf Key3
0217   01BE           00832     clrf Key4  
0218   01BF           00833     clrf Key9  
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0219   01C1           00834     clrf Cnt  
021A                  00835 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
021A   1405           00836     bsf PORTA,0             ; подача питания
021B   1085           00837     bcf PORTA,1
021C   1105           00838     bcf PORTA,2 
                      00839     ;movlw .24
                      00840     ;call small_delay
021D   0805           00841     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
021E   3938           00842     andlw 0x38
021F   1903           00843     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
0220   2???           00844     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00845     ;movlw .250
                      00846     ;call small_delay  
0221   1985           00847     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
0222   0ABB           00848     incf Key1,F
0223   1A05           00849     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
0224   0ABE           00850     incf Key4,F
                      00851     
0225                  00852 col2                        ; сканируем второй столбец, где нам нужна клавиша 2
0225   1005           00853     bcf PORTA,0             ; подача питания
0226   1485           00854     bsf PORTA,1
0227   1105           00855     bcf PORTA,2 
                      00856     ;movlw .24
                      00857     ;sd
0228   0805           00858     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0229   3938           00859     andlw 0x38
022A   1903           00860     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
022B   2???           00861     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00862     ;movlw .250
                      00863     ;sd
022C   1985           00864     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
022D   0ABC           00865     incf Key2,F
022E                  00866 col3                ; сканируем третий столбец, где нам нужна клавиша 3
022E   1005           00867     bcf PORTA,0             ; подача питания
022F   1085           00868     bcf PORTA,1
0230   1505           00869     bsf PORTA,2
                      00870     ;movlw .24
                      00871     ;sd
0231   0805           00872     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0232   3938           00873     andlw 0x38
0233   1903           00874     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
0234   2???           00875     goto end_keyb           ; если Z=0, то пропускаем строку
                      00876     ;movlw .250
                      00877     ;sd
0235   1985           00878     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
0236   0ABD           00879     incf Key3,F
0237   1A85           00880     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
0238   0ABF           00881     incf Key9,F
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00882  
0239                  00883 end_keyb 
0239   183B           00884     btfsc Key1,0
023A   0AC1           00885     incf Cnt,F
023B   183C           00886     btfsc Key2,0
023C   0AC1           00887     incf Cnt,F
023D   183D           00888     btfsc Key3,0
023E   0AC1           00889     incf Cnt,F
023F   183E           00890     btfsc Key4,0
0240   0AC1           00891     incf Cnt,F
0241   183F           00892     btfsc Key9,0
0242   0AC1           00893     incf Cnt,F
0243   0008           00894     return                  ; выход из функции
                      00895     
                      00896 ;==============================================
                      00897 
0244                  00898 change_time                 ; функция изменения времени
0244   2???           00899     call Keyboard           ; спрашиваем клавиатуру
0245   183B           00900     btfsc Key1,0
0246   2???           00901     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0247   183C           00902     btfsc Key2,0
0248   2???           00903     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0249   183D           00904     btfsc Key3,0
024A   2???           00905     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
024B   183E           00906     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
024C   2???           00907     goto change_HMS
                      00908     
024D   2???           00909     call LCD_one
024E   2???           00910     goto change_time
                      00911     
                      00912     ;----------------------------------------
024F                  00913 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
024F   30FF           00914     movlw 0xff                          
0250   2???           00915     call delay                          ;задержка крч
0251   2???           00916     call Keyboard                       ;опрос клавиатуры что бы выяснить
0252   08C1           00917     movf Cnt,1                          ;отжата клавиша или нет
0253   1D03           00918     btfss STATUS,Z                      ;если нет, то циклим
0254   2???           00919     goto correct_T_plus             
0255   3001           00920     movlw 0x1                   ; если NumPressKey = 0, то вызываем
0256   0643           00921     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0257   1903           00922     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0258   2???           00923     call correct_H2
                      00924     
0259   3002           00925     movlw 0x2                   ; если NumPressKey = 1, то вызываем
025A   0643           00926     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
025B   1903           00927     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
025C   2???           00928     call correct_H1
                      00929 
025D   3003           00930     movlw 0x3                   ; если NumPressKey = 2, то вызываем
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025E   0643           00931     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
025F   1903           00932     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0260   2???           00933     call correct_M2
                      00934     
0261   3004           00935     movlw 0x4                   ; если NumPressKey = 3, то вызываем
0262   0643           00936     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0263   1903           00937     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0264   2???           00938     call correct_M1
                      00939     
0265   3005           00940     movlw 0x5                   ; если NumPressKey = 4, то вызываем
0266   0643           00941     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0267   1903           00942     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0268   2???           00943     call correct_S2
                      00944     
0269   3006           00945     movlw 0x6                   ; если NumPressKey = 5, то вызываем
026A   0643           00946     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
026B   1903           00947     btfsc STATUS, 0x02          ; если нет, выходим из функции
026C   2???           00948     call correct_S1
                      00949     
026D   0008           00950     return
                      00951     
                      00952     ;----------------------------------------
                      00953     
026E                  00954 correct_H2                      ; функцию коррекции переменной H2.
026E   0AB1           00955     incf TIME_HH2,1     ; инкремент временной переменной для Н2
026F   3033           00956     movlw 0x33                  ; if !=3, переходим обратно в функцию
0270   0631           00957     xorwf TIME_HH2, w   ; correct_T_plus и проверяем там следующее условие
0271   1D03           00958     btfss STATUS, 0x02
0272   2???           00959     goto return_COR_H2
0273   3030           00960     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
0274   00B1           00961     movwf       TIME_HH2
0275                  00962 return_COR_H2
0275   0008           00963     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00964     
0276                  00965 correct_H1                      ; функцию коррекции переменной H1.
0276   0AB0           00966     incf TIME_HH1,1     ; инкремент временной переменной для Н1
0277   3032           00967     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
0278   0631           00968     xorwf TIME_HH2, w   ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00969                                 ; ограничить единицы при десятках = 2   
0279   1903           00970     btfsc STATUS, 0x02
027A   2???           00971     goto three_H1                       
027B   303A           00972     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
027C   0630           00973 t1  xorwf TIME_HH1, w   
027D   1D03           00974     btfss STATUS, 0x02
027E   2???           00975     goto return_COR_H1
027F   3030           00976     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
0280   00B0           00977     movwf       TIME_HH1
0281                  00978 return_COR_H1
0281   0008           00979     return
                      00980     
0282                  00981 three_H1
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0282   3034           00982     movlw 0x34                  ; предел для обнуления при переменной = 2
0283   2???           00983     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00984     
0284                  00985 correct_M2                      ; функцию коррекции переменной M2.
0284   0AB3           00986     incf TIME_MM2,1
0285   3036           00987     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
0286   0633           00988     xorwf TIME_MM2, w;
0287   1D03           00989     btfss STATUS, 0x02
0288   2???           00990     goto return_COR_M2
0289   3030           00991     movlw       0x30
028A   00B3           00992     movwf       TIME_MM2
028B                  00993 return_COR_M2
028B   0008           00994     return
                      00995     
028C                  00996 correct_M1                      ; функцию коррекции переменной M1.
028C   0AB2           00997     incf TIME_MM1,1
028D   303A           00998     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
028E   0632           00999     xorwf TIME_MM1, w;
028F   1D03           01000     btfss STATUS, 0x02
0290   2???           01001     goto return_COR_M1
0291   3030           01002     movlw       0x30
0292   00B2           01003     movwf       TIME_MM1
0293                  01004 return_COR_M1
0293   0008           01005     return
                      01006     
0294                  01007 correct_S2                      ; функцию коррекции переменной S2.
0294   0AB5           01008     incf TIME_SS2,1
0295   3036           01009     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
0296   0635           01010     xorwf TIME_SS2, w;
0297   1D03           01011     btfss STATUS, 0x02
0298   2???           01012     goto return_COR_S2
0299   3030           01013     movlw       0x30
029A   00B5           01014     movwf       TIME_SS2
029B                  01015 return_COR_S2
029B   0008           01016     return
                      01017     
029C                  01018 correct_S1                      ; функцию коррекции переменной S1.
029C   0AB4           01019     incf TIME_SS1,1
029D   303A           01020     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
029E   0634           01021     xorwf TIME_SS1, w;
029F   1D03           01022     btfss STATUS, 0x02
02A0   2???           01023     goto return_COR_S1
02A1   3030           01024     movlw       0x30
02A2   00B4           01025     movwf       TIME_SS1
02A3                  01026 return_COR_S1
02A3   0008           01027     return
                      01028     
                      01029     ;----------------------------------------
                      01030     
02A4                  01031 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
02A4   30FF           01032     movlw 0xff                          
02A5   2???           01033     call delay                          ;задержка крч
02A6   2???           01034     call Keyboard                       ;опрос клавиатуры что бы выяснить
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A7   08C1           01035     movf Cnt,1                          ;отжата клавиша или нет
02A8   1D03           01036     btfss STATUS,Z                      ;если нет, то циклим
02A9   2???           01037     goto correct_T_minus                  
02AA   3001           01038     movlw 0x1                   ; если NumPressKey = 0, то вызываем
02AB   0643           01039     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
02AC   1903           01040     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02AD   2???           01041     call correct_H2_minus
                      01042     
02AE   3002           01043     movlw 0x2                   ; если NumPressKey = 1, то вызываем
02AF   0643           01044     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
02B0   1903           01045     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B1   2???           01046     call correct_H1_minus
                      01047 
02B2   3003           01048     movlw 0x3                   ; если NumPressKey = 2, то вызываем
02B3   0643           01049     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
02B4   1903           01050     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B5   2???           01051     call correct_M2_minus
                      01052     
02B6   3004           01053     movlw 0x4                   ; если NumPressKey = 3, то вызываем
02B7   0643           01054     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
02B8   1903           01055     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B9   2???           01056     call correct_M1_minus
                      01057     
02BA   3005           01058     movlw 0x5                   ; если NumPressKey = 4, то вызываем
02BB   0643           01059     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
02BC   1903           01060     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02BD   2???           01061     call correct_S2_minus
                      01062     
02BE   3006           01063     movlw 0x6                   ; если NumPressKey = 5, то вызываем
02BF   0643           01064     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
02C0   1903           01065     btfsc STATUS, 0x02          ; если нет, выходим из функции
02C1   2???           01066     call correct_S1_minus
                      01067     
02C2   0008           01068     return
                      01069     
                      01070     ;----------------------------------------
                      01071     
02C3                  01072 correct_H2_minus                ; функцию коррекции переменной H2.
02C3   03B1           01073     decf TIME_HH2,1     ; декремент временной переменной для Н2
02C4   302F           01074     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
02C5   0631           01075     xorwf TIME_HH2, w   ; correct_T_ и проверяем там следующее условие
02C6   1D03           01076     btfss STATUS, 0x02
02C7   2???           01077     goto return_COR_H2_MIN
02C8   3032           01078     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
02C9   00B1           01079     movwf       TIME_HH2
02CA                  01080 return_COR_H2_MIN
02CA   0008           01081     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01082     
02CB                  01083 correct_H1_minus                ; функцию коррекции переменной H1.
02CB   03B0           01084     decf TIME_HH1,1     ; декремент временной переменной для Н1
02CC   302F           01085     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
02CD   0630           01086     xorwf TIME_HH1, w   ; correct_T_ и проверяем там следующее условие
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01087                                         
02CE   1D03           01088     btfss STATUS, 0x02
02CF   2???           01089     goto return_COR_H1_MIN              
02D0   3032           01090     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
02D1   0631           01091     xorwf TIME_HH2, w   
02D2   1903           01092     btfsc STATUS, 0x02
02D3   2???           01093     goto three_H1_minus
02D4   3039           01094     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
02D5   00B0           01095 t2  movwf       TIME_HH1
02D6                  01096 return_COR_H1_MIN
02D6   0008           01097     return
                      01098     
02D7                  01099 three_H1_minus
02D7   3033           01100     movlw 0x33                  ; значение для присваивания при Н2 = 2.
02D8   2???           01101     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      01102     
02D9                  01103 correct_M2_minus                        ; функцию коррекции переменной M2.
02D9   03B3           01104     decf TIME_MM2,1
02DA   302F           01105     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
02DB   0633           01106     xorwf TIME_MM2, w;
02DC   1D03           01107     btfss STATUS, 0x02
02DD   2???           01108     goto return_COR_M2_MIN
02DE   3035           01109     movlw       0x35
02DF   00B3           01110     movwf       TIME_MM2
02E0                  01111 return_COR_M2_MIN
02E0   0008           01112     return
                      01113     
02E1                  01114 correct_M1_minus                        ; функцию коррекции переменной M1.
02E1   03B2           01115     decf TIME_MM1,1
02E2   302F           01116     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
02E3   0632           01117     xorwf TIME_MM1, w;
02E4   1D03           01118     btfss STATUS, 0x02
02E5   2???           01119     goto return_COR_M1_MIN
02E6   3039           01120     movlw       0x39
02E7   00B2           01121     movwf       TIME_MM1
02E8                  01122 return_COR_M1_MIN
02E8   0008           01123     return
                      01124     
02E9                  01125 correct_S2_minus                        ; функцию коррекции переменной S2.
02E9   03B5           01126     decf TIME_SS2,1
02EA   302F           01127     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
02EB   0635           01128     xorwf TIME_SS2, w;
02EC   1D03           01129     btfss STATUS, 0x02
02ED   2???           01130     goto return_COR_S2_MIN
02EE   3035           01131     movlw       0x35
02EF   00B5           01132     movwf       TIME_SS2
02F0                  01133 return_COR_S2_MIN
02F0   0008           01134     return
                      01135     
02F1                  01136 correct_S1_minus                        ; функцию коррекции переменной S1.
02F1   03B4           01137     decf TIME_SS1,1
02F2   302F           01138     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
02F3   0634           01139     xorwf TIME_SS1, w;
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F4   1D03           01140     btfss STATUS, 0x02
02F5   2???           01141     goto return_COR_S1_MIN
02F6   3039           01142     movlw       0x39
02F7   00B4           01143     movwf       TIME_SS1
02F8                  01144 return_COR_S1_MIN
02F8   0008           01145     return
                      01146     
                      01147     ;==============================================
                      01148     
02F9                  01149 save_T                          ; функция проверки и сохранения времени
02F9   30FF           01150     movlw 0xff                          
02FA   2???           01151     call delay                          ;задержка крч
02FB   2???           01152     call Keyboard                       ;опрос клавиатуры что бы выяснить
02FC   08C1           01153     movf Cnt,1                          ;отжата клавиша или нет
02FD   1D03           01154     btfss STATUS,Z                      ;если нет, то циклим
02FE   2???           01155     goto save_T
02FF   3006           01156     movlw 0x6                   ; если происходит переполнение NumPressKey
0300   0643           01157     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
0301   1903           01158     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
0302   2???           01159     goto START                  ; в постоянные
0303   0AC3           01160     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
0304   2???           01161     goto change_time            ; его и возвращаемся в функцию изменения времени
                      01162     
0305                  01163 change_HMS
0305   30FF           01164     movlw 0xff                          
0306   2???           01165     call delay                          ;задержка крч
0307   2???           01166     call Keyboard                       ;опрос клавиатуры что бы выяснить
0308   08C1           01167     movf Cnt,1                          ;отжата клавиша или нет
0309   1D03           01168     btfss STATUS,Z                      ;если нет, то циклим
030A   2???           01169     goto change_HMS
030B   0846           01170     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
030C   00B1           01171     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
030D   0845           01172     movfw TEMP_TIME_HH1         ; значение)
030E   00B0           01173     movwf TIME_HH1
030F   0848           01174     movfw TEMP_TIME_MM2         
0310   00B3           01175     movwf TIME_MM2
0311   0847           01176     movfw TEMP_TIME_MM1         
0312   00B2           01177     movwf TIME_MM1
0313   084A           01178     movfw TEMP_TIME_SS2         
0314   00B5           01179     movwf TIME_SS2
0315   0849           01180     movfw TEMP_TIME_SS1         
0316   00B4           01181     movwf TIME_SS1
0317   2???           01182     goto START                  ; возврат в основной цикл
                      01183     
                      01184     ;==============================================
                      01185     ;==============================================
                      01186     ;==============================================
                      01187     
0318                  01188 change_day                  ; функция изменения дня недели
0318   2???           01189     call Keyboard
0319   183B           01190     btfsc Key1,0
031A   2???           01191     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031B   183C           01192     btfsc Key2,0
031C   2???           01193     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
031D   183D           01194     btfsc Key3,0            ; выход из настройки времени в основной цикл без сохранения результата
031E   2???           01195     goto save_end_day
031F   183E           01196     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0320   2???           01197     goto save_day_ch
                      01198     
0321   2???           01199     call LCD_one
                      01200     
0322   2???           01201     goto change_day
                      01202     
0323                  01203 plus_day_ch
0323   30FF           01204     movlw 0xff                          
0324   2???           01205     call delay                          ;задержка крч
0325   2???           01206     call Keyboard                       ;опрос клавиатуры что бы выяснить
0326   08C1           01207     movf Cnt,1                          ;отжата клавиша или нет
0327   1D03           01208     btfss STATUS,Z                      ;если нет, то циклим
0328   2???           01209     goto plus_day_ch
0329   0AB6           01210     incf DAY,1
032A   3007           01211     movlw .7                    ; inc переменной День
032B   0636           01212     xorwf DAY, w;
032C   1D03           01213     btfss STATUS, 0x02          ; is not working 
032D   2???           01214     goto change_day                     ; 
032E   3000           01215     movlw .0
032F   00B6           01216     movwf DAY
0330   2???           01217     goto change_day
                      01218     
0331                  01219 minus_day_ch
0331   30FF           01220     movlw 0xff                          
0332   2???           01221     call delay                          ;задержка крч
0333   2???           01222     call Keyboard                       ;опрос клавиатуры что бы выяснить
0334   08C1           01223     movf Cnt,1                          ;отжата клавиша или нет
0335   1D03           01224     btfss STATUS,Z                      ;если нет, то циклим
0336   2???           01225     goto minus_day_ch
0337   03B6           01226     decf DAY,1
0338   30FF           01227     movlw .255                  ; inc переменной День
0339   0636           01228     xorwf DAY, w;
033A   1D03           01229     btfss STATUS, 0x02          ; is not working 
033B   2???           01230     goto change_day                     
033C   3006           01231     movlw .6
033D   00B6           01232     movwf DAY
033E   2???           01233     goto change_day
                      01234     
033F                  01235 save_day_ch
033F   30FF           01236     movlw 0xff                          
0340   2???           01237     call delay                          ;задержка крч
0341   2???           01238     call Keyboard                       ;опрос клавиатуры что бы выяснить
0342   08C1           01239     movf Cnt,1                          ;отжата клавиша или нет
0343   1D03           01240     btfss STATUS,Z                      ;если нет, то циклим
0344   2???           01241     goto save_day_ch
0345   084B           01242     movfw TEMP_DAY
0346   00B6           01243     movwf DAY
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0347   2???           01244     goto START
                      01245     
0348                  01246 save_end_day
0348   30FF           01247     movlw 0xff                          
0349   2???           01248     call delay                          ;задержка крч
034A   2???           01249     call Keyboard                       ;опрос клавиатуры что бы выяснить
034B   08C1           01250     movf Cnt,1                          ;отжата клавиша или нет
034C   1D03           01251     btfss STATUS,Z                      ;если нет, то циклим
034D   2???           01252     goto save_end_day
034E   2???           01253     goto START
                      01254     ;==============================================
                      01255     ;==============================================
                      01256     ;==============================================
                      01257     
                      01258     ;==============================================
034F                  01259 change_alarm                
034F   2???           01260     call Keyboard           ; спрашиваем клавиатуру
0350   183B           01261     btfsc Key1,0
0351   2???           01262     call correct_A_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0352   183C           01263     btfsc Key2,0
0353   2???           01264     call correct_A_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0354   183D           01265     btfsc Key3,0
0355   2???           01266     goto save_A             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
0356   183E           01267     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0357   2???           01268     goto change_AHMS
                      01269     
0358   2???           01270     call LCD_two
0359   2???           01271     goto change_alarm
                      01272     
                      01273     ;----------------------------------------
                      01274     
035A                  01275 correct_A_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
035A   30FF           01276     movlw 0xff                          
035B   2???           01277     call delay                          ;задержка крч
035C   2???           01278     call Keyboard                       ;опрос клавиатуры что бы выяснить
035D   08C1           01279     movf Cnt,1                          ;отжата клавиша или нет
035E   1D03           01280     btfss STATUS,Z                      ;если нет, то циклим
035F   2???           01281     goto correct_A_plus                     
0360   3009           01282     movlw 0x9                   ; если NumPressKey = 0, то вызываем
0361   0643           01283     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0362   1903           01284     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0363   2???           01285     call correct_H2_A
                      01286     
0364   300A           01287     movlw 0xa           ; если NumPressKey = 1, то вызываем
0365   0643           01288     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0366   1903           01289     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0367   2???           01290     call correct_H1_A
                      01291 
0368   300B           01292     movlw 0xb                   ; если NumPressKey = 2, то вызываем
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0369   0643           01293     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
036A   1903           01294     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
036B   2???           01295     call correct_M2_A
                      01296     
036C   300C           01297     movlw 0xc                   ; если NumPressKey = 3, то вызываем
036D   0643           01298     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
036E   1903           01299     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
036F   2???           01300     call correct_M1_A
                      01301     
0370   0008           01302     return
                      01303     
                      01304     ;----------------------------------------
                      01305     
0371                  01306 correct_H2_A                    ; функцию коррекции переменной H2.
0371   0AB8           01307     incf ALARM_HH2,1    ; инкремент временной переменной для Н2
0372   3033           01308     movlw 0x33                  ; if !=3, переходим обратно в функцию
0373   0638           01309     xorwf ALARM_HH2, w  ; correct_T_plus и проверяем там следующее условие
0374   1D03           01310     btfss STATUS, 0x02
0375   2???           01311     goto return_COR_H2_A
0376   3030           01312     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
0377   00B8           01313     movwf       ALARM_HH2
0378                  01314 return_COR_H2_A
0378   0008           01315     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      01316     
0379                  01317 correct_H1_A                    ; функцию коррекции переменной H1.
0379   0AB7           01318     incf ALARM_HH1,1    ; инкремент временной переменной для Н1
037A   3032           01319     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
037B   0638           01320     xorwf ALARM_HH2, w  ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01321                                 ; ограничить единицы при десятках = 2   
037C   1903           01322     btfsc STATUS, 0x02
037D   2???           01323     goto three_H1_A                     
037E   303A           01324     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
037F   0637           01325 ta1 xorwf ALARM_HH1, w  
0380   1D03           01326     btfss STATUS, 0x02
0381   2???           01327     goto return_COR_H1_A
0382   3030           01328     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
0383   00B7           01329     movwf       ALARM_HH1
0384                  01330 return_COR_H1_A
0384   0008           01331     return
                      01332     
0385                  01333 three_H1_A
0385   3034           01334     movlw 0x34                  ; предел для обнуления при переменной = 2
0386   2???           01335     goto ta1                    ; возврат к метке t1 для продолжения корректной работы
                      01336     
0387                  01337 correct_M2_A                    ; функцию коррекции переменной M2.
0387   0ABA           01338     incf ALARM_MM2,1
0388   3036           01339     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
0389   063A           01340     xorwf ALARM_MM2, w;
038A   1D03           01341     btfss STATUS, 0x02
038B   2???           01342     goto return_COR_M2_A
038C   3030           01343     movlw       0x30
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D   00BA           01344     movwf       ALARM_MM2
038E                  01345 return_COR_M2_A
038E   0008           01346     return
                      01347     
038F                  01348 correct_M1_A                    ; функцию коррекции переменной M1.
038F   0AB9           01349     incf ALARM_MM1,1
0390   303A           01350     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
0391   0639           01351     xorwf ALARM_MM1, w;
0392   1D03           01352     btfss STATUS, 0x02
0393   2???           01353     goto return_COR_M1_A
0394   3030           01354     movlw       0x30
0395   00B9           01355     movwf       ALARM_MM1
0396                  01356 return_COR_M1_A
0396   0008           01357     return
                      01358     
                      01359     ;----------------------------------------
                      01360     
0397                  01361 correct_A_minus                 ; функция типа switch для ввода отдельных символов(декремент)
0397   30FF           01362     movlw 0xff                          
0398   2???           01363     call delay                          ;задержка крч
0399   2???           01364     call Keyboard                       ;опрос клавиатуры что бы выяснить
039A   08C1           01365     movf Cnt,1                          ;отжата клавиша или нет
039B   1D03           01366     btfss STATUS,Z                      ;если нет, то циклим
039C   2???           01367     goto correct_A_minus
039D   3009           01368     movlw 0x9                   ; если NumPressKey = 0, то вызываем
039E   0643           01369     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
039F   1903           01370     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03A0   2???           01371     call correct_H2_minus_A
                      01372     
03A1   300A           01373     movlw 0xa                   ; если NumPressKey = 1, то вызываем
03A2   0643           01374     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03A3   1903           01375     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03A4   2???           01376     call correct_H1_minus_A
                      01377 
03A5   300B           01378     movlw 0xb                   ; если NumPressKey = 2, то вызываем
03A6   0643           01379     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
03A7   1903           01380     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03A8   2???           01381     call correct_M2_minus_A
                      01382     
03A9   300C           01383     movlw 0xc                   ; если NumPressKey = 3, то вызываем
03AA   0643           01384     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
03AB   1903           01385     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03AC   2???           01386     call correct_M1_minus_A
                      01387     
03AD   0008           01388     return
                      01389     
                      01390     ;----------------------------------------
                      01391     
03AE                  01392 correct_H2_minus_A              ; функцию коррекции переменной H2.
03AE   03B8           01393     decf ALARM_HH2,1    ; декремент временной переменной для Н2
03AF   302F           01394     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
03B0   0638           01395     xorwf ALARM_HH2, w  ; correct_T_ и проверяем там следующее условие
03B1   1D03           01396     btfss STATUS, 0x02
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B2   2???           01397     goto return_COR_H2_A_minus
03B3   3032           01398     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
03B4   00B8           01399     movwf       ALARM_HH2
03B5                  01400 return_COR_H2_A_minus
03B5   0008           01401     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01402     
03B6                  01403 correct_H1_minus_A              ; функцию коррекции переменной H1.
03B6   03B7           01404     decf ALARM_HH1,1    ; декремент временной переменной для Н1
03B7   302F           01405     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
03B8   0637           01406     xorwf ALARM_HH1, w  ; correct_T_ и проверяем там следующее условие
                      01407                                         
03B9   1D03           01408     btfss STATUS, 0x02
03BA   2???           01409     goto return_COR_H1_A_minus          
03BB   3032           01410     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
03BC   0638           01411     xorwf ALARM_HH2, w  
03BD   1903           01412     btfsc STATUS, 0x02
03BE   2???           01413     goto three_H1_minus_A
03BF   3039           01414     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
03C0   00B7           01415 ta2 movwf       ALARM_HH1
03C1                  01416 return_COR_H1_A_minus
03C1   0008           01417     return
                      01418     
03C2                  01419 three_H1_minus_A
03C2   3033           01420     movlw 0x33                  ; значение для присваивания при Н2 = 2.
03C3   2???           01421     goto ta2                    ; возврат к метке t2 для продолжения корректной работы
                      01422     
03C4                  01423 correct_M2_minus_A                      ; функцию коррекции переменной M2.
03C4   03BA           01424     decf ALARM_MM2,1
03C5   302F           01425     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
03C6   063A           01426     xorwf ALARM_MM2, w;
03C7   1D03           01427     btfss STATUS, 0x02
03C8   2???           01428     goto return_COR_M2_A_minus
03C9   3035           01429     movlw       0x35
03CA   00BA           01430     movwf       ALARM_MM2
03CB                  01431 return_COR_M2_A_minus
03CB   0008           01432     return
                      01433     
03CC                  01434 correct_M1_minus_A                      ; функцию коррекции переменной M1.
03CC   03B9           01435     decf ALARM_MM1,1
03CD   302F           01436     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
03CE   0639           01437     xorwf ALARM_MM1, w;
03CF   1D03           01438     btfss STATUS, 0x02
03D0   2???           01439     goto return_COR_M1_A_minus
03D1   3039           01440     movlw       0x39
03D2   00B9           01441     movwf       ALARM_MM1
03D3                  01442 return_COR_M1_A_minus
03D3   0008           01443     return
                      01444     
                      01445     ;==============================================
                      01446     
03D4                  01447 save_A                          ; функция проверки и сохранения времени
03D4   30FF           01448     movlw 0xff                          
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D5   2???           01449     call delay                          ;задержка крч
03D6   2???           01450     call Keyboard                       ;опрос клавиатуры что бы выяснить
03D7   08C1           01451     movf Cnt,1                          ;отжата клавиша или нет
03D8   1D03           01452     btfss STATUS,Z                      ;если нет, то циклим
03D9   2???           01453     goto save_A
03DA   300D           01454     movlw 0xd                   ; если происходит переполнение NumPressKey
03DB   0643           01455     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
03DC   1903           01456     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
03DD   2???           01457     goto START                  ; в постоянные
03DE   0AC3           01458     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
03DF   2???           01459     goto change_alarm           ; его и возвращаемся в функцию изменения времени
                      01460     
03E0                  01461 change_AHMS
03E0   30FF           01462     movlw 0xff                          
03E1   2???           01463     call delay                          ;задержка крч
03E2   2???           01464     call Keyboard                       ;опрос клавиатуры что бы выяснить
03E3   08C1           01465     movf Cnt,1                          ;отжата клавиша или нет
03E4   1D03           01466     btfss STATUS,Z                      ;если нет, то циклим
03E5   2???           01467     goto change_AHMS
03E6   084D           01468     movfw TEMP_ALARM_HH2                ; записываем значения временных переменных в постоянные (NPK 
03E7   00B8           01469     movwf ALARM_HH2             ; необходим для определения ячейки, в которую записываем
03E8   084C           01470     movfw TEMP_ALARM_HH1                ; значение)
03E9   00B7           01471     movwf ALARM_HH1
03EA   084F           01472     movfw TEMP_ALARM_MM2                
03EB   00BA           01473     movwf ALARM_MM2
03EC   084E           01474     movfw TEMP_ALARM_MM1                
03ED   00B9           01475     movwf ALARM_MM1
03EE   2???           01476     goto START                  ; возврат в основной цикл
                      01477     
                      01478     ;==============================================
                      01479     ;==============================================
                      01480     ;==============================================
                      01481                             
                      01482 ;small_delay:                   ; задержка для драйвера
                      01483 ;    movwf fCOUNTER1
                      01484 ;    clrwdt
                      01485 ;    decfsz fCOUNTER1,F
                      01486 ;    goto $-2
                      01487 ;    return
                      01488     
Warning[205]: Found directive in column 1. (end)
                      01489 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           0000012C
BF                                00000000
BRGH                              00000002
Blink                             00000040
Blink_Alarm                       00000042
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Cnt                               00000041
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               000000C9
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key9                              0000003F
Keyboard                          00000212
LCD_one                           00000132
LCD_two                           000001AC
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULL_BA_NAB                       000000B8
NumAlarmBit                       00000050
NumPressKey                       00000043
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000043
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
alarm_plus_blink                  00000116
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

blinkON                           000000BC
blink_off_ALARM                   000001FC
blink_off_H1                      0000015C
blink_off_H1_A                    000001D2
blink_off_H2                      0000014E
blink_off_H2_A                    000001C4
blink_off_M1                      00000178
blink_off_M1_A                    000001EE
blink_off_M2                      0000016A
blink_off_M2_A                    000001E0
blink_off_S1                      00000194
blink_off_S2                      00000186
blink_off_day                     000001A2
blink_on_ALARM                    00000207
blink_on_H1                       0000015F
blink_on_H1_A                     000001D5
blink_on_H2                       00000151
blink_on_H2_A                     000001C7
blink_on_M1                       0000017B
blink_on_M1_A                     000001F1
blink_on_M2                       0000016D
blink_on_M2_A                     000001E3
blink_on_S1                       00000197
blink_on_S2                       00000189
blink_on_day                      000001A9
change_AHMS                       000003E0
change_HMS                        00000305
change_alarm                      0000034F
change_day                        00000318
change_time                       00000244
col1                              0000021A
col2                              00000225
col3                              0000022E
correct_A_minus                   00000397
correct_A_plus                    0000035A
correct_H1                        00000276
correct_H1_A                      00000379
correct_H1_minus                  000002CB
correct_H1_minus_A                000003B6
correct_H2                        0000026E
correct_H2_A                      00000371
correct_H2_minus                  000002C3
correct_H2_minus_A                000003AE
correct_M1                        0000028C
correct_M1_A                      0000038F
correct_M1_minus                  000002E1
correct_M1_minus_A                000003CC
correct_M2                        00000284
correct_M2_A                      00000387
correct_M2_minus                  000002D9
correct_M2_minus_A                000003C4
correct_S1                        0000029C
correct_S1_minus                  000002F1
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

correct_S2                        00000294
correct_S2_minus                  000002E9
correct_T_minus                   000002A4
correct_T_plus                    0000024F
day_plus_blink                    0000010C
delay                             00000128
end_ALARM                         000000C1
end_clock                         0000009B
end_keyb                          00000239
exday                             00000102
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            000000EE
if_A_ON                           000000B3
if_T_AT_H1                        000000A1
if_T_AT_M1                        000000AB
if_T_AT_M2                        000000A6
inc_BA                            000000B0
minus_day_ch                      00000331
monday                            000000D2
paintH1                           00000154
paintH1_A                         000001CA
paintH2                           00000146
paintH2_A                         000001BC
paintM1                           00000170
paintM1_A                         000001E6
paintM2                           00000162
paintM2_A                         000001D8
paintS1                           0000018C
paintS2                           0000017E
paint_ALARM                       000001F4
plus_day_ch                       00000323
printDay                          0000019A
return_ALARM                      00000211
return_A_H1                       000001D7
return_A_H2                       000001C9
return_A_M1                       000001F3
return_A_M2                       000001E5
return_COR_H1                     00000281
return_COR_H1_A                   00000384
return_COR_H1_A_minus             000003C1
return_COR_H1_MIN                 000002D6
return_COR_H2                     00000275
return_COR_H2_A                   00000378
return_COR_H2_A_minus             000003B5
return_COR_H2_MIN                 000002CA
return_COR_M1                     00000293
return_COR_M1_A                   00000396
return_COR_M1_A_minus             000003D3
return_COR_M1_MIN                 000002E8
return_COR_M2                     0000028B
return_COR_M2_A                   0000038E
MPASM 5.75                          MAIN.ASM   10-25-2017  16:32:06         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

return_COR_M2_A_minus             000003CB
return_COR_M2_MIN                 000002E0
return_COR_S1                     000002A3
return_COR_S1_MIN                 000002F8
return_COR_S2                     0000029B
return_COR_S2_MIN                 000002F0
return_DAY                        000001AB
return_H1                         00000161
return_H2                         00000153
return_M1                         0000017D
return_M2                         0000016F
return_S1                         00000199
return_S2                         0000018B
saturday                          000000F5
save_A                            000003D4
save_T                            000002F9
save_day_ch                       0000033F
save_end_day                      00000348
sunday                            000000FC
t1                                0000027C
t2                                000002D5
ta1                               0000037F
ta2                               000003C0
ten_clock                         00000094
three_H1                          00000282
three_H1_A                        00000385
three_H1_minus                    000002D7
three_H1_minus_A                  000003C2
thursday                          000000E7
time_plus_blink                   00000103
tuesday                           000000D9
wait                              
wednesday                         000000E0
write                             00000120

Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

