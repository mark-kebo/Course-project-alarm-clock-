MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.4.2                                                     *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013         ;  директивы  типа  контроллера,  под-
                      00014         ;ключения  заголовочного  файла  и  вы-
                      00015         ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ; директивы, позволяющие заменять в
                      00019         ;теле  ПО  команды,  указанные  после
                      00020         ;этой  директивы  (bcf  ,  bsf)  –  метками
                      00021         ;bank0, bank1. Обратную замену произ-
                      00022         ;водит компилятор
  00000020            00023 WAIT                equ     0x20
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30
  00000031            00027 TIME_HH2            equ     0x31
  00000032            00028 TIME_MM1            equ     0x32
  00000033            00029 TIME_MM2            equ     0x33
  00000034            00030 TIME_SS1            equ     0x34
  00000035            00031 TIME_SS2            equ     0x35
  00000036            00032 DAY                 equ     0x36
  00000037            00033 ALARM_HH1           equ     0x37
  00000038            00034 ALARM_HH2           equ     0x38
  00000039            00035 ALARM_MM1           equ     0x39
  0000003A            00036 ALARM_MM2           equ     0x3A
  0000003B            00037 Key1                equ     0x3B
  0000003C            00038 Key2                equ     0x3C
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key5                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Key6                equ     0x40
  00000041            00043 Key7                equ     0x41
  00000042            00044 Key8                equ     0x42
  00000043            00045 Key9                equ     0x43
  00000044            00046 fCOUNTER1           equ     0x44
  00000045            00047 TEMP_TIME_HH1       equ     0x45
  00000046            00048 TEMP_TIME_HH2       equ     0x46
  00000047            00049 TEMP_TIME_MM1       equ     0x47
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumPressKey         equ     0x50
  00000051            00059 Blink               equ     0x51
                      00060     ;вспомогательные  регистры,  назначе-
                      00061         ;ние которых приведено в комментариях
  0002                00062     constant   DS = .2
  0002                00063     constant   RST = .2
                      00064         ;  директивы,  ставящие в  соответствие
                      00065         ;меткам DS  и  RST  значение  0.  Анало-
                      00066         ;гия директив equ для имен регистров.
                      00067 
                      00068 wait  macro     time
                      00069     movlw    (time/5)-1
                      00070     movwf    WAIT
                      00071     call    wait5u
                      00072     endm
                      00073         ;макрос паузы с именем wait. Особен-
                      00074         ;ность этого макроса состоит в том, что
                      00075         ;у  него  имеется  параметр  –  time.  При
                      00076         ;вызове  макроса  значение  параметра
                      00077         ;указывается  после  имени  макроса  в
                      00078         ;виде  целого  десятичного  числа  крат-
                      00079         ;ного  5  (в  данном  примере).  В  теле
                      00080         ;макроса  это  число  подставляется  в
                      00081         ;«переменную» time и далее использу-
                      00082         ;ется вычисленное значение (которое в
                      00083         ;данном случае  выступает  в  роли  кон-
                      00084         ;станты, записываемой в W). Вместе с
                      00085         ;процедурой  wait5u  длительность  за-
                      00086         ;держки,  обеспечиваемая  макросом
                      00087         ;равна time микросекунд
                      00088 
                      00089     org 0x0000
0000   0183           00090     clrf STATUS
0001   3000           00091     movlw 0x00
0002   008A           00092     movwf PCLATH
0003   2???           00093     goto begin
                      00094         ;выбор нулевой страницы памяти ко-
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095         ;манд и размещение на ней откомпили-
                      00096         ;рованного кода
                      00097 
0004                  00098 begin
0004   1683           00099     bank1  ; выбор первого банка памяти. Для вы-
                      00100         ;зова используется метка bank1, объяв-
                      00101         ;ленная выше директивой #define
0005   308F           00102     movlw 0x8F
0006   0081           00103     movwf OPTION_REG
0007   0064           00104     clrwdt
                      00105         ;установка  максимального  времени
                      00106         ;срабатывания  сторожевого  таймера  и
                      00107         ;его сброс
0008   018B           00108     clrf INTCON
0009   018C           00109     clrf PIE1
000A   018D           00110     clrf PIE2
                      00111         ;отключение  прерываний  и  их  обработки
000B   3000           00112     movlw .0
000C   0086           00113     movwf TRISB
000D   0087           00114     movwf TRISC
000E   0089           00115     movwf TRISE
                      00116         ; конфигурирование  портов  В, С, Е
000F   30F8           00117     movlw b'11111000' 
0010   0085           00118     movwf TRISA 
0011   3000           00119     movlw b'00000000'
0012   0088           00120     movwf TRISD
0013   300F           00121     movlw b'00001111'
0014   0081           00122     movwf OPTION_REG
                      00123         ;конфигурирование  RD0  как  входа
                      00124         ;для  установки  на  нем  «1»  в  качестве
                      00125         ;исходного  состояния  интерфейса  «1-Wire»
0015   019F           00126     clrf ADCON1 
0016   149F           00127     bsf ADCON1,0x01 
0017   151F           00128     bsf ADCON1,0x02 
0018   1283           00129     bank0
0019   01BB           00130     clrf Key1    
001A   01BC           00131     clrf Key2       
001B   01BD           00132     clrf Key3       
001C   01BE           00133     clrf Key4              
001D   01C3           00134     clrf Key9               
001E   0187           00135     clrf PORTC
001F   0188           00136     clrf PORTD
                      00137 ; подготовка к передаче команд на контроллер
                      00138 ;HD путем установки RC0=0
0020   3001           00139     movlw 0x01
0021   2???           00140     call write
0022   300F           00141     movlw 0x0f
0023   2???           00142     call delay
                      00143 ; передача команды Clear  Display для очистки
                      00144 ;дисплея и установки счетчика адреса видеопа-
                      00145 ;мяти  на  нулевой  адрес  (первое  знакоместо  в
                      00146 ;верхней строке), с необходимой задержкой
0024   0064           00147     clrwdt
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   3038           00148     movlw 0x38
0026   2???           00149     call write
0027   300F           00150     movlw 0x0f
0028   2???           00151     call delay
                      00152 
                      00153 ; передача команды Function Set для установки
                      00154 ;режима  2-х  строчного  индикатора,  размера
                      00155 ;знакоместа 5х7 и 8 разрядной шины данных
0029   3006           00156     movlw 0x06
002A   2???           00157     call write
002B   300F           00158     movlw 0x0f
002C   2???           00159     call delay
                      00160 ;передача  команды  Entry  Mode  Set  для  уста-
                      00161 ;новки режима увеличения счетчика адреса ви-
                      00162 ;деопамяти, после каждой записи символа в нее,
                      00163 ;при неподвижности видеопамяти относительно
                      00164 ;индикатора
002D   300C           00165     movlw 0x0c
002E   2???           00166     call write
002F   300F           00167     movlw 0x0f
0030   2???           00168     call delay
                      00169 ;  передача  команды  Display  ON/OFF  control
                      00170 ;для включения дисплея с отключенным курсо-
                      00171 ;ром.  На  этом  этап инициализации дисплея за-
                      00172 ;кончен.
0031   3030           00173     movlw       0x30
0032   00B0           00174     movwf       TIME_HH1
0033   00B1           00175     movwf       TIME_HH2
0034   00B2           00176     movwf       TIME_MM1
0035   00B3           00177     movwf       TIME_MM2
0036   00B4           00178     movwf       TIME_SS1
0037   00B5           00179     movwf       TIME_SS2
0038   00B7           00180     movwf       ALARM_HH1
0039   00B8           00181     movwf       ALARM_HH2
003A   00B9           00182     movwf       ALARM_MM1
003B   00BA           00183     movwf       ALARM_MM2
003C   3000           00184     movlw       .0
003D   00B6           00185     movwf       DAY
003E   3000           00186     movlw       b'00000000'
003F   00D1           00187     movwf       Blink
                      00188 
0040                  00189 START
0040   0831           00190     movfw TIME_HH2              ; записываем значения постоянныx переменных в  временныe 
0041   00C6           00191     movwf TEMP_TIME_HH2         
0042   0830           00192     movfw TIME_HH1              
0043   00C5           00193     movwf TEMP_TIME_HH1
0044   0833           00194     movfw TIME_MM2              
0045   00C8           00195     movwf TEMP_TIME_MM2
0046   0832           00196     movfw TIME_MM1              
0047   00C7           00197     movwf TEMP_TIME_MM1
0048   0835           00198     movfw TIME_SS2              
0049   00CA           00199     movwf TEMP_TIME_SS2
004A   0834           00200     movfw TIME_SS1              
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004B   00C9           00201     movwf TEMP_TIME_SS1
004C   0836           00202     movfw DAY
004D   00CB           00203     movwf TEMP_DAY
004E   3000           00204     movlw 0x00
004F   00D0           00205     movwf NumPressKey           ; NPK каждый раз устанавливаем в начальное значение
                      00206     
0050   2???           00207     call Keyboard               ; читаем клавиатуру
0051   183B           00208     btfsc Key1,0                ; проверка нажатия клавиши "1",  если нажата, то переходим 
0052   2???           00209     goto change_time            ; к изменению времени, нет - тогда проверяем клавишу 2
0053   183C           00210     btfsc Key2,0                ; проверка нажатия клавиши "2",  если нажата, то переходим 
0054   2???           00211     goto change_day             ; к изменению дня недели, нет - тогда проверяем клавишу 3
                      00212         
0055   2???           00213     call LCD_one                ;Отрисовка первой строки                
                      00214 
                      00215         ;Счет десятков секунд (0-6) - TIME_SS1
0056   0AB4           00216     incf TIME_SS1,1
0057   303A           00217     movlw 0x3A                  ; if !=10
0058   0634           00218     xorwf TIME_SS1, w;
0059   1D03           00219     btfss STATUS, 0x02
005A   2???           00220     goto end_clock
                      00221         ;обнуление TIME_MM1
005B   3030           00222     movlw 0x30
005C   00B4           00223     movwf       TIME_SS1
                      00224 
                      00225         ;Счет десятков секунд (0-6) - TIME_SS2
005D   0AB5           00226     incf TIME_SS2,1
005E   3036           00227     movlw 0x36                  ; if !=6
005F   0635           00228     xorwf TIME_SS2, w;
0060   1D03           00229     btfss STATUS, 0x02
0061   2???           00230     goto end_clock
                      00231         ;обнуление TIME_MM2
0062   3030           00232     movlw 0x30
0063   00B5           00233     movwf       TIME_SS2
                      00234         
                      00235         ;Счет десятков минут (0-6) - TIME_MM1
0064   0AB2           00236     incf TIME_MM1,1
0065   303A           00237     movlw 0x3A                  ; if !=10
0066   0632           00238     xorwf TIME_MM1, w;
0067   1D03           00239     btfss STATUS, 0x02
0068   2???           00240     goto end_clock
                      00241         ;обнуление TIME_MM1
0069   3030           00242     movlw 0x30
006A   00B2           00243     movwf       TIME_MM1
                      00244 
                      00245         ;Счет десятков минут (0-6) - TIME_MM2
006B   0AB3           00246     incf TIME_MM2,1
006C   3036           00247     movlw 0x36                  ; if !=6
006D   0633           00248     xorwf TIME_MM2, w;
006E   1D03           00249     btfss STATUS, 0x02
006F   2???           00250     goto end_clock
                      00251         ;обнуление TIME_MM2
0070   3030           00252     movlw 0x30
0071   00B3           00253     movwf       TIME_MM2
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00254 
                      00255         ;Счет десятков единиц часов - TIME_НН2, TIME_НН1
0072   0AB0           00256     incf TIME_HH1,1
0073   3034           00257     movlw 0x34                  ; if !=4
0074   0630           00258     xorwf TIME_HH1, w;
0075   1D03           00259     btfss STATUS, 0x02
0076   2???           00260     goto ten_clock
0077   3032           00261     movlw 0x32                  ; if !=2
0078   0631           00262     xorwf TIME_HH2, w;
0079   1D03           00263     btfss STATUS, 0x02
007A   2???           00264     goto ten_clock
007B   3030           00265     movlw 0x30
007C   00B0           00266     movwf       TIME_HH1
007D   00B1           00267     movwf       TIME_HH2
007E   0AB6           00268     incf    DAY,1
007F   3007           00269     movlw       .7                      ; inc переменной День
0080   0636           00270     xorwf DAY, w;
0081   1D03           00271     btfss STATUS, 0x02                  ; Обнуление переменной при достижении воскресенья, 
0082   2???           00272     goto end_clock                      ; что бы при 00:00:00 перейти в понедельник
0083   3000           00273     movlw       .0
0084   00B6           00274     movwf       DAY
                      00275 
                      00276         
0085                  00277 ten_clock
0085   303A           00278     movlw 0x3A                  ; if !=10 
0086   0630           00279     xorwf TIME_HH1, w;          ; подпрограмма для работы с форматом 24 часа
0087   1D03           00280     btfss STATUS, 0x02          ; т.к. 18 часов может быть, а 28 нет, то надо
0088   2???           00281     goto end_clock              ; ограничить единицы при десятках = 2
Message[305]: Using default destination of 1 (file).
0089   0AB1           00282     incf    TIME_HH2
008A   3030           00283     movlw 0x30
008B   00B0           00284     movwf       TIME_HH1
                      00285         
008C                  00286 end_clock
008C   0064           00287     clrwdt
                      00288 
008D   30FF           00289     movlw 0xff
008E   2???           00290     call delay ;задержка крч
008F   30FF           00291     movlw 0xff
0090   2???           00292     call delay ;задержка крч
0091   30FF           00293     movlw 0xff
0092   2???           00294     call delay ;задержка крч
                      00295 
0093   2???           00296     call LCD_two                ;Отрисовка второй строки
                      00297     
                      00298     ; ТУТ ОБРАБОТКА БУДИЛЬНИКА БУДЕТ
                      00299     
0094   2???           00300     goto START          ; конец основного цикла (должен быть = 1сек)
                      00301 
                      00302     ;--------------------------------------------------------
                      00303     ;--------------------------------------------------------
                      00304     ;--------------------------------------------------------
                      00305     
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095                  00306 write    ; процедура записи байта к контроллер HD
0095   1303           00307     bcf STATUS, RP1
0096   1283           00308     bcf STATUS, RP0
0097   0086           00309     movwf PORTB
0098   1507           00310     bsf PORTC, 2
0099   3001           00311     movlw 0x01
009A   2???           00312     call delay
009B   1107           00313     bcf PORTC, 2
009C   0008           00314     return
                      00315     
                      00316         ; перед вызовом этой процедуры в W помеща-
                      00317         ;ется байт, который надо записать в HD. Далее
                      00318         ;он передается в PORTB и формируется отрица-
                      00319         ;тельный перепад на RC2, путем предваритель-
                      00320         ;ной  его  установки  в  «1»,  удержания  этого
                      00321         ;уровня в течение некоторого времени (опреде-
                      00322         ;ляемого временем задержки delay  при  W=1) и
                      00323         ;сброса его в «0».
                      00324 
                      00325         ;  процедура  задержки,  время  которой  можно
                      00326         ;регулировать, задавая число в W
009D                  00327 delay
009D   1303           00328     bcf   STATUS, RP1
009E   1283           00329     bcf   STATUS, RP0
009F   00A7           00330     movwf   fCOUNTER2
00A0   01A6           00331     clrf    fCOUNTER
                      00332     
00A1                  00333 BD_Loop
00A1   0064           00334     clrwdt
00A2   0BA6           00335     decfsz  fCOUNTER, f
00A3   2???           00336     goto    BD_Loop
00A4   0BA7           00337     decfsz  fCOUNTER2, f
00A5   2???           00338     goto    BD_Loop
00A6   0008           00339     return
                      00340 
                      00341     ;==========================================
                      00342     
00A7                  00343 LCD_one
00A7   1007           00344     bcf PORTC, 0
00A8   3080           00345     movlw b'10000000'   ; установка адреса
00A9   2???           00346     call write
00AA   1407           00347     bsf PORTC,0
                      00348     ;Отрисовка первой строки
                      00349     ; Отрисовка Н2
00AB   3000           00350     movlw 0x0                   ; если NumPressKey = 0, то вызываем
00AC   0650           00351     xorwf NumPressKey, w;       
00AD   1D03           00352     btfss STATUS, 0x02          
00AE   2???           00353     goto blink_on_H2
00AF   0AD1           00354     incf Blink,1
00B0   1C51           00355     btfss Blink, 0
00B1   2???           00356     goto blink_on_H2
00B2   2???           00357     goto blink_off_H2
00B3                  00358 blink_off_H2
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B3   3020           00359     movlw ' '
00B4   2???           00360     call write
00B5   2???           00361     goto l1
00B6                  00362 blink_on_H2
00B6   0831           00363     movfw TIME_HH2
00B7   2???           00364     call write
00B8   2???           00365     goto l1
                      00366     ; Отрисовка Н1
00B9   3001           00367 l1  movlw 0x1                   ; если NumPressKey = 0, то вызываем
00BA   0650           00368     xorwf NumPressKey, w;       
00BB   1D03           00369     btfss STATUS, 0x02          
00BC   2???           00370     goto blink_on_H1
00BD   0AD1           00371     incf Blink,1
00BE   1C51           00372     btfss Blink, 0
00BF   2???           00373     goto blink_on_H1
00C0   2???           00374     goto blink_off_H1
00C1                  00375 blink_off_H1
00C1   3020           00376     movlw ' '
00C2   2???           00377     call write
00C3   2???           00378     goto l2
00C4                  00379 blink_on_H1
00C4   0830           00380     movfw TIME_HH1
00C5   2???           00381     call write
00C6   2???           00382     goto l2
                      00383     
00C7   303A           00384 l2  movlw ':'
00C8   2???           00385     call write
                      00386     
                      00387     ; Отрисовка М2
00C9   3002           00388     movlw 0x2                   ; если NumPressKey = 0, то вызываем
00CA   0650           00389     xorwf NumPressKey, w;       
00CB   1D03           00390     btfss STATUS, 0x02          
00CC   2???           00391     goto blink_on_M2
00CD   0AD1           00392     incf Blink,1
00CE   1C51           00393     btfss Blink, 0
00CF   2???           00394     goto blink_on_M2
00D0   2???           00395     goto blink_off_M2
00D1                  00396 blink_off_M2
00D1   3020           00397     movlw ' '
                      00398     
00D2   2???           00399     goto l3
00D3                  00400 blink_on_M2
00D3   0833           00401     movfw TIME_MM2
                      00402  
00D4   2???           00403     goto l3
                      00404     
                      00405     ; Отрисовка М1
00D5   2???           00406 l3  call write
00D6   0832           00407     movfw TIME_MM1
00D7   2???           00408     call write
                      00409     
00D8   303A           00410     movlw ':'
00D9   2???           00411     call write
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00412     
                      00413     ; Отрисовка S2
00DA   0835           00414     movfw TIME_SS2
00DB   2???           00415     call write
                      00416     
                      00417     ; Отрисовка S1
00DC   0834           00418     movfw TIME_SS1
00DD   2???           00419     call write
                      00420 
00DE   3020           00421     movlw ' '
00DF   2???           00422     call write
00E0   3020           00423     movlw ' '
00E1   2???           00424     call write
00E2   0836           00425     movfw       DAY                             
00E3   2???           00426     call        DEC
00E4   0008           00427     return
                      00428     
                      00429     ;==========================================   
                      00430     
00E5                  00431 LCD_two
00E5   1007           00432     bcf PORTC, 0
00E6   30C4           00433     movlw b'11000100'
00E7   2???           00434     call write
                      00435 ; Установка RC0=0, для последующей передачи
                      00436 ;команды  на  контроллер  HD.  Передается  ко-
                      00437 ;манда Set DDRAM address,  устанавливающая
                      00438 ;счетчик  адреса  видеопамяти  на  начало  2-ой
                      00439 ;строки:  ячейку  с  адресом  (0х40  =  0100  0000).
                      00440 ;Это  необходимо  для  вывода  фразы  «TEM-
                      00441 ;PERATURA =» на второй строке индикатора.
                      00442 
00E8   1407           00443     bsf PORTC,0  ; установка RC0=1, для последующей передачи
                      00444 ;кодов символов второй строки на дисплей. Об-
                      00445 ;ратите внимание на то, что нигде не требуется
                      00446 ;изменения  банков  памяти: т.к. все регистры, с
                      00447 ;которыми работает ПО, находятся в 0-ом бан-
                      00448 ;ке.
00E9   3041           00449     movlw 'A'
00EA   2???           00450     call write
00EB   304C           00451     movlw 'L'
00EC   2???           00452     call write
00ED   3041           00453     movlw 'A'
00EE   2???           00454     call write
00EF   3052           00455     movlw 'R'
00F0   2???           00456     call write
00F1   304D           00457     movlw 'M'
00F2   2???           00458     call write
00F3   3020           00459     movlw ' '
00F4   2???           00460     call write
00F5   3020           00461     movlw ' '
00F6   2???           00462     call write
00F7   0838           00463     movfw ALARM_HH2
00F8   2???           00464     call write
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F9   0837           00465     movfw ALARM_HH1
00FA   2???           00466     call write
00FB   303A           00467     movlw ':'
00FC   2???           00468     call write
00FD   083A           00469     movfw ALARM_MM2
00FE   2???           00470     call write
00FF   0839           00471     movfw ALARM_MM1
0100   2???           00472     call write
0101   0008           00473     return
                      00474  
                      00475      ;==========================================
                      00476      
                      00477      ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
0102   0782           00478 DEC addwf PCL
0103   2???           00479     goto monday
0104   2???           00480     goto tuesday
0105   2???           00481     goto wednesday      
0106   2???           00482     goto thursday    
0107   2???           00483     goto friday         
0108   2???           00484     goto saturday               
0109   2???           00485     goto sunday         
010A   0008           00486     return
                      00487 ;Отрисовка дней недели
010B                  00488 monday                      ;понедельник
010B   304D           00489     movlw 'M'
010C   2???           00490     call write
010D   304F           00491     movlw 'O'
010E   2???           00492     call write
010F   304E           00493     movlw 'N'
0110   2???           00494     call write
0111   2???           00495     goto exday
0112                  00496 tuesday                     ;вторник
0112   3054           00497     movlw 'T'
0113   2???           00498     call write
0114   3055           00499     movlw 'U'
0115   2???           00500     call write
0116   3045           00501     movlw 'E'
0117   2???           00502     call write
0118   2???           00503     goto exday
0119                  00504 wednesday                   ;среда
0119   3057           00505     movlw 'W'
011A   2???           00506     call write
011B   3045           00507     movlw 'E'
011C   2???           00508     call write
011D   3044           00509     movlw 'D'
011E   2???           00510     call write
011F   2???           00511     goto exday
0120                  00512 thursday                    ;четверг
0120   3054           00513     movlw 'T'
0121   2???           00514     call write
0122   3048           00515     movlw 'H'
0123   2???           00516     call write
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0124   3055           00517     movlw 'U'
0125   2???           00518     call write
0126   2???           00519     goto exday
0127                  00520 friday                      ;пятница
0127   3046           00521     movlw 'F'
0128   2???           00522     call write
0129   3052           00523     movlw 'R'
012A   2???           00524     call write
012B   3049           00525     movlw 'I'
012C   2???           00526     call write
012D   2???           00527     goto exday
012E                  00528 saturday                    ;суббота
012E   3053           00529     movlw 'S'
012F   2???           00530     call write
0130   3041           00531     movlw 'A'
0131   2???           00532     call write
0132   3054           00533     movlw 'T'
0133   2???           00534     call write
0134   2???           00535     goto exday
0135                  00536 sunday                      ;воскресенье
0135   3053           00537     movlw 'S'
0136   2???           00538     call write
0137   3055           00539     movlw 'U'
0138   2???           00540     call write
0139   304E           00541     movlw 'N'
013A   2???           00542     call write
Warning[207]: Found label after column 1. (exday)
013B                  00543     exday
013B   0008           00544     return
                      00545     ;==========================================
                      00546     
013C                  00547 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
013C   1283           00548     bcf STATUS, RP0         ; переход в нулевой банк, для нормального вызова функции из тела программы
013D   1303           00549     bcf STATUS, RP1
013E   01BB           00550     clrf Key1               ; обнуление кодов клавиш
013F   01BC           00551     clrf Key2 
0140   01BD           00552     clrf Key3
0141   01BE           00553     clrf Key4  
0142   01C3           00554     clrf Key9  
0143                  00555 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
0143   1405           00556     bsf PORTA,0             ; подача питания
0144   1085           00557     bcf PORTA,1
0145   1105           00558     bcf PORTA,2 
                      00559     ;movlw .24
                      00560     ;call small_delay
0146   0805           00561     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0147   3938           00562     andlw 0x38
0148   1903           00563     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
0149   2???           00564     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00565     ;movlw .250
                      00566     ;call small_delay  
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014A   1985           00567     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
014B   0ABB           00568     incf Key1,F
014C   1A05           00569     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
014D   0ABE           00570     incf Key4,F
Warning[207]: Found label after column 1. (col2)
014E                  00571     col2                    ; сканируем второй столбец, где нам нужна клавиша 2
014E   1005           00572     bcf PORTA,0             ; подача питания
014F   1485           00573     bsf PORTA,1
0150   1105           00574     bcf PORTA,2 
                      00575     ;movlw .24
                      00576     ;sd
0151   0805           00577     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0152   3938           00578     andlw 0x38
0153   1903           00579     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0154   2???           00580     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00581     ;movlw .250
                      00582     ;sd
0155   1985           00583     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0156   0ABC           00584     incf Key2,F
0157                  00585 col3                ; сканируем третий столбец, где нам нужна клавиша 3
0157   1005           00586     bcf PORTA,0             ; подача питания
0158   1085           00587     bcf PORTA,1
0159   1505           00588     bsf PORTA,2
                      00589     ;movlw .24
                      00590     ;sd
015A   0805           00591     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
015B   3938           00592     andlw 0x38
015C   1903           00593     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
015D   0008           00594     return                  ; если Z=0, то пропускаем строку
                      00595     ;movlw .250
                      00596     ;sd
015E   1985           00597     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
015F   0ABD           00598     incf Key3,F
0160   1A85           00599     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
0161   0AC3           00600     incf Key9,F
0162   0008           00601     return                  ; выход из функции
                      00602     
                      00603 ;==============================================
                      00604 
0163                  00605 change_time                 ; функция изменения времени
0163   2???           00606     call Keyboard           ; спрашиваем клавиатуру
0164   183B           00607     btfsc Key1,0
0165   2???           00608     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0166   183C           00609     btfsc Key2,0
0167   2???           00610     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0168   183D           00611     btfsc Key3,0
0169   2???           00612     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016A   183E           00613     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
016B   2???           00614     goto change_HMS
                      00615     
016C   2???           00616     call LCD_one
016D   2???           00617     goto change_time
                      00618     
                      00619     ;----------------------------------------
                      00620     
016E                  00621 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
016E   30FF           00622     movlw 0xff
016F   2???           00623     call delay              ; задержка крч
0170   30FF           00624     movlw 0xff
0171   2???           00625     call delay              ; задержка крч                          
0172   3000           00626     movlw 0x0                   ; если NumPressKey = 0, то вызываем
0173   0650           00627     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0174   1903           00628     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0175   2???           00629     call correct_H2
                      00630     
0176   3001           00631     movlw 0x1                   ; если NumPressKey = 1, то вызываем
0177   0650           00632     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0178   1903           00633     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0179   2???           00634     call correct_H1
                      00635 
017A   3002           00636     movlw 0x2                   ; если NumPressKey = 2, то вызываем
017B   0650           00637     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
017C   1903           00638     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
017D   2???           00639     call correct_M2
                      00640     
017E   3003           00641     movlw 0x3                   ; если NumPressKey = 3, то вызываем
017F   0650           00642     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0180   1903           00643     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0181   2???           00644     call correct_M1
                      00645     
0182   3004           00646     movlw 0x4                   ; если NumPressKey = 4, то вызываем
0183   0650           00647     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0184   1903           00648     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0185   2???           00649     call correct_S2
                      00650     
0186   3005           00651     movlw 0x5                   ; если NumPressKey = 5, то вызываем
0187   0650           00652     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0188   1903           00653     btfsc STATUS, 0x02          ; если нет, выходим из функции
0189   2???           00654     call correct_S1
                      00655     
018A   0008           00656     return
                      00657     
                      00658     ;----------------------------------------
                      00659     
018B                  00660 correct_H2                      ; функцию коррекции переменной H2.
018B   0AB1           00661     incf TIME_HH2,1     ; инкремент временной переменной для Н2
018C   3033           00662     movlw 0x33                  ; if !=3, переходим обратно в функцию
018D   0631           00663     xorwf TIME_HH2, w   ; correct_T_plus и проверяем там следующее условие
018E   1D03           00664     btfss STATUS, 0x02
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   0008           00665     return
0190   3030           00666     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
0191   00B1           00667     movwf       TIME_HH2
0192   0008           00668     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00669     
0193                  00670 correct_H1                      ; функцию коррекции переменной H1.
0193   0AB0           00671     incf TIME_HH1,1     ; инкремент временной переменной для Н1
0194   3032           00672     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
0195   0631           00673     xorwf TIME_HH2, w   ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00674                                 ; ограничить единицы при десятках = 2   
0196   1903           00675     btfsc STATUS, 0x02
0197   2???           00676     goto three_H1                       
0198   303A           00677     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
0199   0630           00678 t1  xorwf TIME_HH1, w   
019A   1D03           00679     btfss STATUS, 0x02
019B   0008           00680     return
019C   3030           00681     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
019D   00B0           00682     movwf       TIME_HH1
019E   0008           00683     return
                      00684     
019F                  00685 three_H1
019F   3034           00686     movlw 0x34                  ; предел для обнуления при переменной = 2
01A0   2???           00687     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00688     
01A1                  00689 correct_M2                      ; функцию коррекции переменной M2.
01A1   0AB3           00690     incf TIME_MM2,1
01A2   3036           00691     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01A3   0633           00692     xorwf TIME_MM2, w;
01A4   1D03           00693     btfss STATUS, 0x02
01A5   0008           00694     return
01A6   3030           00695     movlw       0x30
01A7   00B3           00696     movwf       TIME_MM2
01A8   0008           00697     return
                      00698     
01A9                  00699 correct_M1                      ; функцию коррекции переменной M1.
01A9   0AB2           00700     incf TIME_MM1,1
01AA   303A           00701     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01AB   0632           00702     xorwf TIME_MM1, w;
01AC   1D03           00703     btfss STATUS, 0x02
01AD   0008           00704     return
01AE   3030           00705     movlw       0x30
01AF   00B2           00706     movwf       TIME_MM1
01B0   0008           00707     return
                      00708     
01B1                  00709 correct_S2                      ; функцию коррекции переменной S2.
01B1   0AB5           00710     incf TIME_SS2,1
01B2   3036           00711     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01B3   0635           00712     xorwf TIME_SS2, w;
01B4   1D03           00713     btfss STATUS, 0x02
01B5   0008           00714     return
01B6   3030           00715     movlw       0x30
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B7   00B5           00716     movwf       TIME_SS2
01B8   0008           00717     return
                      00718     
01B9                  00719 correct_S1                      ; функцию коррекции переменной S1.
01B9   0AB4           00720     incf TIME_SS1,1
01BA   303A           00721     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01BB   0634           00722     xorwf TIME_SS1, w;
01BC   1D03           00723     btfss STATUS, 0x02
01BD   0008           00724     return
01BE   3030           00725     movlw       0x30
01BF   00B4           00726     movwf       TIME_SS1
01C0   0008           00727     return
                      00728     
                      00729     ;----------------------------------------
                      00730     
01C1                  00731 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
01C1   30FF           00732     movlw 0xff
01C2   2???           00733     call delay              ; задержка крч
01C3   30FF           00734     movlw 0xff
01C4   2???           00735     call delay              ; задержка крч
01C5   3000           00736     movlw 0x0                   ; если NumPressKey = 0, то вызываем
01C6   0650           00737     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
01C7   1903           00738     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01C8   2???           00739     call correct_H2_minus
                      00740     
01C9   3001           00741     movlw 0x1                   ; если NumPressKey = 1, то вызываем
01CA   0650           00742     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
01CB   1903           00743     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01CC   2???           00744     call correct_H1_minus
                      00745 
01CD   3002           00746     movlw 0x2                   ; если NumPressKey = 2, то вызываем
01CE   0650           00747     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
01CF   1903           00748     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01D0   2???           00749     call correct_M2_minus
                      00750     
01D1   3003           00751     movlw 0x3                   ; если NumPressKey = 3, то вызываем
01D2   0650           00752     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
01D3   1903           00753     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01D4   2???           00754     call correct_M1_minus
                      00755     
01D5   3004           00756     movlw 0x4                   ; если NumPressKey = 4, то вызываем
01D6   0650           00757     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
01D7   1903           00758     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01D8   2???           00759     call correct_S2_minus
                      00760     
01D9   3005           00761     movlw 0x5                   ; если NumPressKey = 5, то вызываем
01DA   0650           00762     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
01DB   1903           00763     btfsc STATUS, 0x02          ; если нет, выходим из функции
01DC   2???           00764     call correct_S1_minus
                      00765     
01DD   0008           00766     return
                      00767     
                      00768     ;----------------------------------------
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00769     
01DE                  00770 correct_H2_minus                ; функцию коррекции переменной H2.
01DE   03B1           00771     decf TIME_HH2,1     ; декремент временной переменной для Н2
01DF   302F           00772     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
01E0   0631           00773     xorwf TIME_HH2, w   ; correct_T_ и проверяем там следующее условие
01E1   1D03           00774     btfss STATUS, 0x02
01E2   0008           00775     return
01E3   3032           00776     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
01E4   00B1           00777     movwf       TIME_HH2
01E5   0008           00778     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      00779     
01E6                  00780 correct_H1_minus                ; функцию коррекции переменной H1.
01E6   03B0           00781     decf TIME_HH1,1     ; декремент временной переменной для Н1
01E7   302F           00782     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
01E8   0630           00783     xorwf TIME_HH1, w   ; correct_T_ и проверяем там следующее условие
                      00784                                         
01E9   1D03           00785     btfss STATUS, 0x02
01EA   0008           00786     return              
01EB   3032           00787     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
01EC   0631           00788     xorwf TIME_HH2, w   
01ED   1903           00789     btfsc STATUS, 0x02
01EE   2???           00790     goto three_H1_minus
01EF   3039           00791     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
01F0   00B0           00792 t2  movwf       TIME_HH1
01F1   0008           00793     return
                      00794     
01F2                  00795 three_H1_minus
01F2   3033           00796     movlw 0x33                  ; значение для присваивания при Н2 = 2.
01F3   2???           00797     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      00798     
01F4                  00799 correct_M2_minus                        ; функцию коррекции переменной M2.
01F4   03B3           00800     decf TIME_MM2,1
01F5   302F           00801     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
01F6   0633           00802     xorwf TIME_MM2, w;
01F7   1D03           00803     btfss STATUS, 0x02
01F8   0008           00804     return
01F9   3035           00805     movlw       0x35
01FA   00B3           00806     movwf       TIME_MM2
01FB   0008           00807     return
                      00808     
01FC                  00809 correct_M1_minus                        ; функцию коррекции переменной M1.
01FC   03B2           00810     decf TIME_MM1,1
01FD   302F           00811     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
01FE   0632           00812     xorwf TIME_MM1, w;
01FF   1D03           00813     btfss STATUS, 0x02
0200   0008           00814     return
0201   3039           00815     movlw       0x39
0202   00B2           00816     movwf       TIME_MM1
0203   0008           00817     return
                      00818     
0204                  00819 correct_S2_minus                        ; функцию коррекции переменной S2.
0204   03B5           00820     decf TIME_SS2,1
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0205   302F           00821     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0206   0635           00822     xorwf TIME_SS2, w;
0207   1D03           00823     btfss STATUS, 0x02
0208   0008           00824     return
0209   3035           00825     movlw       0x35
020A   00B5           00826     movwf       TIME_SS2
020B   0008           00827     return
                      00828     
020C                  00829 correct_S1_minus                        ; функцию коррекции переменной S1.
020C   03B4           00830     decf TIME_SS1,1
020D   302F           00831     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
020E   0634           00832     xorwf TIME_SS1, w;
020F   1D03           00833     btfss STATUS, 0x02
0210   0008           00834     return
0211   3039           00835     movlw       0x39
0212   00B4           00836     movwf       TIME_SS1
0213   0008           00837     return
                      00838     
                      00839     ;==============================================
                      00840     
0214                  00841 save_T                          ; функция проверки и сохранения времени
0214   30FF           00842     movlw 0xff
0215   2???           00843     call delay                  ; задержка крч
0216   30FF           00844     movlw 0xff
0217   2???           00845     call delay                  ; задержка крч
0218   3006           00846     movlw 0x6                   ; если происходит переполнение NumPressKey
0219   0650           00847     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
021A   1903           00848     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
021B   2???           00849     goto START                  ; в постоянные
021C   0AD0           00850     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
021D   2???           00851     goto change_time            ; его и возвращаемся в функцию изменения времени
                      00852     
021E                  00853 change_HMS
021E   0846           00854     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
021F   00B1           00855     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0220   0845           00856     movfw TEMP_TIME_HH1         ; значение)
0221   00B0           00857     movwf TIME_HH1
0222   0848           00858     movfw TEMP_TIME_MM2         
0223   00B3           00859     movwf TIME_MM2
0224   0847           00860     movfw TEMP_TIME_MM1         
0225   00B2           00861     movwf TIME_MM1
0226   084A           00862     movfw TEMP_TIME_SS2         
0227   00B5           00863     movwf TIME_SS2
0228   0849           00864     movfw TEMP_TIME_SS1         
0229   00B4           00865     movwf TIME_SS1
022A   2???           00866     goto START                  ; возврат в основной цикл
                      00867     
                      00868     ;==============================================
                      00869     ;==============================================
                      00870     ;==============================================
                      00871     
Warning[207]: Found label after column 1. (change_day)
022B                  00872     change_day              ; функция изменения дня недели
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   2???           00873     call Keyboard
022C   183B           00874     btfsc Key1,0
022D   2???           00875     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
022E   183C           00876     btfsc Key2,0
022F   2???           00877     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0230   183E           00878     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0231   2???           00879     goto START
                      00880     
0232   1007           00881     bcf PORTC, 0
0233   308A           00882     movlw b'10001010'   ; установка адреса
0234   2???           00883     call write
0235   1407           00884     bsf PORTC,0
                      00885 
                      00886         ;Отрисовка первой строки
0236   084B           00887     movfw       TEMP_DAY                                
0237   2???           00888     call        DEC
                      00889     
0238   2???           00890     goto change_day
                      00891     
0239                  00892 plus_day_ch
0239   30FF           00893     movlw 0xff
023A   2???           00894     call delay              ; задержка крч
023B   30FF           00895     movlw 0xff
023C   2???           00896     call delay              ; задержка крч
023D   0ACB           00897     incf    TEMP_DAY,1
023E   3007           00898     movlw       .7                      ; inc переменной День
023F   064B           00899     xorwf TEMP_DAY, w;
0240   1D03           00900     btfss STATUS, 0x02          ; is not working 
0241   2???           00901     goto change_day                     ; 
0242   3000           00902     movlw       .0
0243   00CB           00903     movwf       TEMP_DAY
0244   2???           00904     goto change_day
                      00905     
0245                  00906 minus_day_ch
0245   30FF           00907     movlw 0xff
0246   2???           00908     call delay              ; задержка крч
0247   30FF           00909     movlw 0xff
0248   2???           00910     call delay              ; задержка крч
0249   0ACB           00911     incf    TEMP_DAY,1
024A   3000           00912     movlw       .0                      ; inc переменной День
024B   064B           00913     xorwf TEMP_DAY, w;
024C   1D03           00914     btfss STATUS, 0x02          ; is not working 
024D   2???           00915     goto change_day                     
024E   3006           00916     movlw       .6
024F   00CB           00917     movwf       TEMP_DAY
0250   2???           00918     goto change_day
                      00919     
                      00920     ;==============================================
                      00921     ;==============================================
                      00922     ;==============================================
                      00923                             
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00924 ;small_delay:                   ; задержка для драйвера
                      00925 ;    movwf fCOUNTER1
                      00926 ;    clrwdt
                      00927 ;    decfsz fCOUNTER1,F
                      00928 ;    goto $-2
                      00929 ;    return
                      00930     
Warning[205]: Found directive in column 1. (end)
                      00931 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           000000A1
BF                                00000000
BRGH                              00000002
Blink                             00000051
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               00000102
DS                                00000002
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key5                              0000003F
Key6                              00000040
Key7                              00000041
Key8                              00000042
Key9                              00000043
Keyboard                          0000013C
LCD_one                           000000A7
LCD_two                           000000E5
NOT_A                             00000005
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumPressKey                       00000050
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RST                               00000002
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000040
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

begin                             00000004
blink_off_H1                      000000C1
blink_off_H2                      000000B3
blink_off_M2                      000000D1
blink_on_H1                       000000C4
blink_on_H2                       000000B6
blink_on_M2                       000000D3
change_HMS                        0000021E
change_day                        0000022B
change_time                       00000163
col1                              00000143
col2                              0000014E
col3                              00000157
correct_H1                        00000193
correct_H1_minus                  000001E6
correct_H2                        0000018B
correct_H2_minus                  000001DE
correct_M1                        000001A9
correct_M1_minus                  000001FC
correct_M2                        000001A1
correct_M2_minus                  000001F4
correct_S1                        000001B9
correct_S1_minus                  0000020C
correct_S2                        000001B1
correct_S2_minus                  00000204
correct_T_minus                   000001C1
correct_T_plus                    0000016E
delay                             0000009D
end_clock                         0000008C
exday                             0000013B
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            00000127
l1                                000000B9
l2                                000000C7
l3                                000000D5
minus_day_ch                      00000245
monday                            0000010B
plus_day_ch                       00000239
saturday                          0000012E
save_T                            00000214
sunday                            00000135
t1                                00000199
t2                                000001F0
ten_clock                         00000085
three_H1                          0000019F
three_H1_minus                    000001F2
thursday                          00000120
tuesday                           00000112
wait                              
wednesday                         00000119
write                             00000095
MPASM 5.75                          MAIN.ASM   10-20-2017  12:29:24         PAGE 28






Errors   :     0
Warnings :     6 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

