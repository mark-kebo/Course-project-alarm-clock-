MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.4.2                                                     *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013         ;  директивы  типа  контроллера,  под-
                      00014         ;ключения  заголовочного  файла  и  вы-
                      00015         ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ; директивы, позволяющие заменять в
                      00019         ;теле  ПО  команды,  указанные  после
                      00020         ;этой  директивы  (bcf  ,  bsf)  –  метками
                      00021         ;bank0, bank1. Обратную замену произ-
                      00022         ;водит компилятор
  00000020            00023 WAIT                equ     0x20
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30
  00000031            00027 TIME_HH2            equ     0x31
  00000032            00028 TIME_MM1            equ     0x32
  00000033            00029 TIME_MM2            equ     0x33
  00000034            00030 TIME_SS1            equ     0x34
  00000035            00031 TIME_SS2            equ     0x35
  00000036            00032 DAY                 equ     0x36
  00000037            00033 ALARM_HH1           equ     0x37
  00000038            00034 ALARM_HH2           equ     0x38
  00000039            00035 ALARM_MM1           equ     0x39
  0000003A            00036 ALARM_MM2           equ     0x3A
  0000003B            00037 Key1                equ     0x3B
  0000003C            00038 Key2                equ     0x3C
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key5                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Key6                equ     0x40
  00000041            00043 Key7                equ     0x41
  00000042            00044 Key8                equ     0x42
  00000043            00045 Key9                equ     0x43
  00000044            00046 fCOUNTER1           equ     0x44
  00000045            00047 TEMP_TIME_HH1       equ     0x45
  00000046            00048 TEMP_TIME_HH2       equ     0x46
  00000047            00049 TEMP_TIME_MM1       equ     0x47
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumPressKey         equ     0x50
  00000051            00059 Blink               equ     0x51
                      00060     ;вспомогательные  регистры,  назначе-
                      00061         ;ние которых приведено в комментариях
  0002                00062     constant   DS = .2
  0002                00063     constant   RST = .2
                      00064         ;  директивы,  ставящие в  соответствие
                      00065         ;меткам DS  и  RST  значение  0.  Анало-
                      00066         ;гия директив equ для имен регистров.
                      00067 
                      00068 wait  macro     time
                      00069     movlw    (time/5)-1
                      00070     movwf    WAIT
                      00071     call    wait5u
                      00072     endm
                      00073         ;макрос паузы с именем wait. Особен-
                      00074         ;ность этого макроса состоит в том, что
                      00075         ;у  него  имеется  параметр  –  time.  При
                      00076         ;вызове  макроса  значение  параметра
                      00077         ;указывается  после  имени  макроса  в
                      00078         ;виде  целого  десятичного  числа  крат-
                      00079         ;ного  5  (в  данном  примере).  В  теле
                      00080         ;макроса  это  число  подставляется  в
                      00081         ;«переменную» time и далее использу-
                      00082         ;ется вычисленное значение (которое в
                      00083         ;данном случае  выступает  в  роли  кон-
                      00084         ;станты, записываемой в W). Вместе с
                      00085         ;процедурой  wait5u  длительность  за-
                      00086         ;держки,  обеспечиваемая  макросом
                      00087         ;равна time микросекунд
                      00088 
                      00089     org 0x0000
0000   0183           00090     clrf STATUS
0001   3000           00091     movlw 0x00
0002   008A           00092     movwf PCLATH
0003   2???           00093     goto begin
                      00094         ;выбор нулевой страницы памяти ко-
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095         ;манд и размещение на ней откомпили-
                      00096         ;рованного кода
                      00097 
0004                  00098 begin
0004   1683           00099     bank1  ; выбор первого банка памяти. Для вы-
                      00100         ;зова используется метка bank1, объяв-
                      00101         ;ленная выше директивой #define
0005   308F           00102     movlw 0x8F
0006   0081           00103     movwf OPTION_REG
0007   0064           00104     clrwdt
                      00105         ;установка  максимального  времени
                      00106         ;срабатывания  сторожевого  таймера  и
                      00107         ;его сброс
0008   018B           00108     clrf INTCON
0009   018C           00109     clrf PIE1
000A   018D           00110     clrf PIE2
                      00111         ;отключение  прерываний  и  их  обработки
000B   3000           00112     movlw .0
000C   0086           00113     movwf TRISB
000D   0087           00114     movwf TRISC
000E   0089           00115     movwf TRISE
                      00116         ; конфигурирование  портов  В, С, Е
000F   30F8           00117     movlw b'11111000' 
0010   0085           00118     movwf TRISA 
0011   3000           00119     movlw b'00000000'
0012   0088           00120     movwf TRISD
0013   300F           00121     movlw b'00001111'
0014   0081           00122     movwf OPTION_REG
                      00123         ;конфигурирование  RD0  как  входа
                      00124         ;для  установки  на  нем  «1»  в  качестве
                      00125         ;исходного  состояния  интерфейса  «1-Wire»
0015   019F           00126     clrf ADCON1 
0016   149F           00127     bsf ADCON1,0x01 
0017   151F           00128     bsf ADCON1,0x02 
0018   1283           00129     bank0
0019   01BB           00130     clrf Key1    
001A   01BC           00131     clrf Key2       
001B   01BD           00132     clrf Key3       
001C   01BE           00133     clrf Key4              
001D   01C3           00134     clrf Key9               
001E   0187           00135     clrf PORTC
001F   0188           00136     clrf PORTD
                      00137 ; подготовка к передаче команд на контроллер
                      00138 ;HD путем установки RC0=0
0020   3001           00139     movlw 0x01
0021   2???           00140     call write
0022   300F           00141     movlw 0x0f
0023   2???           00142     call delay
                      00143 ; передача команды Clear  Display для очистки
                      00144 ;дисплея и установки счетчика адреса видеопа-
                      00145 ;мяти  на  нулевой  адрес  (первое  знакоместо  в
                      00146 ;верхней строке), с необходимой задержкой
0024   0064           00147     clrwdt
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   3038           00148     movlw 0x38
0026   2???           00149     call write
0027   300F           00150     movlw 0x0f
0028   2???           00151     call delay
                      00152 
                      00153 ; передача команды Function Set для установки
                      00154 ;режима  2-х  строчного  индикатора,  размера
                      00155 ;знакоместа 5х7 и 8 разрядной шины данных
0029   3006           00156     movlw 0x06
002A   2???           00157     call write
002B   300F           00158     movlw 0x0f
002C   2???           00159     call delay
                      00160 ;передача  команды  Entry  Mode  Set  для  уста-
                      00161 ;новки режима увеличения счетчика адреса ви-
                      00162 ;деопамяти, после каждой записи символа в нее,
                      00163 ;при неподвижности видеопамяти относительно
                      00164 ;индикатора
002D   300C           00165     movlw 0x0c
002E   2???           00166     call write
002F   300F           00167     movlw 0x0f
0030   2???           00168     call delay
                      00169 ;  передача  команды  Display  ON/OFF  control
                      00170 ;для включения дисплея с отключенным курсо-
                      00171 ;ром.  На  этом  этап инициализации дисплея за-
                      00172 ;кончен.
0031   3030           00173     movlw       0x30
0032   00B0           00174     movwf       TIME_HH1
0033   00B1           00175     movwf       TIME_HH2
0034   00B2           00176     movwf       TIME_MM1
0035   00B3           00177     movwf       TIME_MM2
0036   00B4           00178     movwf       TIME_SS1
0037   00B5           00179     movwf       TIME_SS2
0038   00B7           00180     movwf       ALARM_HH1
0039   00B8           00181     movwf       ALARM_HH2
003A   00B9           00182     movwf       ALARM_MM1
003B   00BA           00183     movwf       ALARM_MM2
003C   3000           00184     movlw       .0
003D   00B6           00185     movwf       DAY
003E   3000           00186     movlw       b'00000000'
003F   00D1           00187     movwf       Blink
                      00188 
0040                  00189 START
0040   0831           00190     movfw TIME_HH2              ; записываем значения постоянныx переменных в  временныe 
0041   00C6           00191     movwf TEMP_TIME_HH2         
0042   0830           00192     movfw TIME_HH1              
0043   00C5           00193     movwf TEMP_TIME_HH1
0044   0833           00194     movfw TIME_MM2              
0045   00C8           00195     movwf TEMP_TIME_MM2
0046   0832           00196     movfw TIME_MM1              
0047   00C7           00197     movwf TEMP_TIME_MM1
0048   0835           00198     movfw TIME_SS2              
0049   00CA           00199     movwf TEMP_TIME_SS2
004A   0834           00200     movfw TIME_SS1              
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004B   00C9           00201     movwf TEMP_TIME_SS1
004C   0836           00202     movfw DAY
004D   00CB           00203     movwf TEMP_DAY
004E   3000           00204     movlw 0x00
004F   00D0           00205     movwf NumPressKey           ; NPK каждый раз устанавливаем в начальное значение
                      00206     
0050   2???           00207     call Keyboard               ; читаем клавиатуру
0051   183B           00208     btfsc Key1,0                ; проверка нажатия клавиши "1",  если нажата, то переходим 
0052   2???           00209     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
0053   183C           00210     btfsc Key2,0                ; проверка нажатия клавиши "2",  если нажата, то переходим 
0054   2???           00211     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
                      00212         
0055   2???           00213     call LCD_one                ;Отрисовка первой строки                
                      00214 
                      00215         ;Счет десятков секунд (0-6) - TIME_SS1
0056   0AB4           00216     incf TIME_SS1,1
0057   303A           00217     movlw 0x3A                  ; if !=10
0058   0634           00218     xorwf TIME_SS1, w;
0059   1D03           00219     btfss STATUS, 0x02
005A   2???           00220     goto end_clock
                      00221         ;обнуление TIME_MM1
005B   3030           00222     movlw 0x30
005C   00B4           00223     movwf       TIME_SS1
                      00224 
                      00225         ;Счет десятков секунд (0-6) - TIME_SS2
005D   0AB5           00226     incf TIME_SS2,1
005E   3036           00227     movlw 0x36                  ; if !=6
005F   0635           00228     xorwf TIME_SS2, w;
0060   1D03           00229     btfss STATUS, 0x02
0061   2???           00230     goto end_clock
                      00231         ;обнуление TIME_MM2
0062   3030           00232     movlw 0x30
0063   00B5           00233     movwf       TIME_SS2
                      00234         
                      00235         ;Счет десятков минут (0-6) - TIME_MM1
0064   0AB2           00236     incf TIME_MM1,1
0065   303A           00237     movlw 0x3A                  ; if !=10
0066   0632           00238     xorwf TIME_MM1, w;
0067   1D03           00239     btfss STATUS, 0x02
0068   2???           00240     goto end_clock
                      00241         ;обнуление TIME_MM1
0069   3030           00242     movlw 0x30
006A   00B2           00243     movwf       TIME_MM1
                      00244 
                      00245         ;Счет десятков минут (0-6) - TIME_MM2
006B   0AB3           00246     incf TIME_MM2,1
006C   3036           00247     movlw 0x36                  ; if !=6
006D   0633           00248     xorwf TIME_MM2, w;
006E   1D03           00249     btfss STATUS, 0x02
006F   2???           00250     goto end_clock
                      00251         ;обнуление TIME_MM2
0070   3030           00252     movlw 0x30
0071   00B3           00253     movwf       TIME_MM2
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00254 
                      00255         ;Счет десятков единиц часов - TIME_НН2, TIME_НН1
0072   0AB0           00256     incf TIME_HH1,1
0073   3034           00257     movlw 0x34                  ; if !=4
0074   0630           00258     xorwf TIME_HH1, w;
0075   1D03           00259     btfss STATUS, 0x02
0076   2???           00260     goto ten_clock
0077   3032           00261     movlw 0x32                  ; if !=2
0078   0631           00262     xorwf TIME_HH2, w;
0079   1D03           00263     btfss STATUS, 0x02
007A   2???           00264     goto ten_clock
007B   3030           00265     movlw 0x30
007C   00B0           00266     movwf       TIME_HH1
007D   00B1           00267     movwf       TIME_HH2
007E   0AB6           00268     incf    DAY,1
007F   3007           00269     movlw       .7                      ; inc переменной День
0080   0636           00270     xorwf DAY, w;
0081   1D03           00271     btfss STATUS, 0x02                  ; Обнуление переменной при достижении воскресенья, 
0082   2???           00272     goto end_clock                      ; что бы при 00:00:00 перейти в понедельник
0083   3000           00273     movlw       .0
0084   00B6           00274     movwf       DAY
                      00275 
                      00276         
0085                  00277 ten_clock
0085   303A           00278     movlw 0x3A                  ; if !=10 
0086   0630           00279     xorwf TIME_HH1, w;          ; подпрограмма для работы с форматом 24 часа
0087   1D03           00280     btfss STATUS, 0x02          ; т.к. 18 часов может быть, а 28 нет, то надо
0088   2???           00281     goto end_clock              ; ограничить единицы при десятках = 2
Message[305]: Using default destination of 1 (file).
0089   0AB1           00282     incf    TIME_HH2
008A   3030           00283     movlw 0x30
008B   00B0           00284     movwf       TIME_HH1
                      00285         
008C                  00286 end_clock
008C   0064           00287     clrwdt
                      00288 
008D   30FF           00289     movlw 0xff
008E   2???           00290     call delay ;задержка крч
008F   30FF           00291     movlw 0xff
0090   2???           00292     call delay ;задержка крч
0091   30FF           00293     movlw 0xff
0092   2???           00294     call delay ;задержка крч
                      00295 
0093   2???           00296     call LCD_two                ;Отрисовка второй строки
                      00297     
                      00298     ; ТУТ ОБРАБОТКА БУДИЛЬНИКА БУДЕТ
                      00299     
0094   2???           00300     goto START          ; конец основного цикла (должен быть = 1сек)
                      00301 
                      00302     ;--------------------------------------------------------
                      00303     ;--------------------------------------------------------
                      00304     
                      00305      ; Процедура типа switch для выбора дня недели
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[305]: Using default destination of 1 (file).
0095   0782           00306 DEC addwf PCL
0096   2???           00307     goto monday
0097   2???           00308     goto tuesday
0098   2???           00309     goto wednesday      
0099   2???           00310     goto thursday    
009A   2???           00311     goto friday         
009B   2???           00312     goto saturday               
009C   2???           00313     goto sunday         
009D   0008           00314     return
                      00315 ;Отрисовка дней недели
009E                  00316 monday                      ;понедельник
009E   304D           00317     movlw 'M'
009F   2???           00318     call write
00A0   304F           00319     movlw 'O'
00A1   2???           00320     call write
00A2   304E           00321     movlw 'N'
00A3   2???           00322     call write
00A4   2???           00323     goto exday
00A5                  00324 tuesday                     ;вторник
00A5   3054           00325     movlw 'T'
00A6   2???           00326     call write
00A7   3055           00327     movlw 'U'
00A8   2???           00328     call write
00A9   3045           00329     movlw 'E'
00AA   2???           00330     call write
00AB   2???           00331     goto exday
00AC                  00332 wednesday                   ;среда
00AC   3057           00333     movlw 'W'
00AD   2???           00334     call write
00AE   3045           00335     movlw 'E'
00AF   2???           00336     call write
00B0   3044           00337     movlw 'D'
00B1   2???           00338     call write
00B2   2???           00339     goto exday
00B3                  00340 thursday                    ;четверг
00B3   3054           00341     movlw 'T'
00B4   2???           00342     call write
00B5   3048           00343     movlw 'H'
00B6   2???           00344     call write
00B7   3055           00345     movlw 'U'
00B8   2???           00346     call write
00B9   2???           00347     goto exday
00BA                  00348 friday                      ;пятница
00BA   3046           00349     movlw 'F'
00BB   2???           00350     call write
00BC   3052           00351     movlw 'R'
00BD   2???           00352     call write
00BE   3049           00353     movlw 'I'
00BF   2???           00354     call write
00C0   2???           00355     goto exday
00C1                  00356 saturday                    ;суббота
00C1   3053           00357     movlw 'S'
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C2   2???           00358     call write
00C3   3041           00359     movlw 'A'
00C4   2???           00360     call write
00C5   3054           00361     movlw 'T'
00C6   2???           00362     call write
00C7   2???           00363     goto exday
00C8                  00364 sunday                      ;воскресенье
00C8   3053           00365     movlw 'S'
00C9   2???           00366     call write
00CA   3055           00367     movlw 'U'
00CB   2???           00368     call write
00CC   304E           00369     movlw 'N'
00CD   2???           00370     call write
00CE                  00371 exday
00CE   0008           00372     return
                      00373 
                      00374     ;--------------------------------------------------------
                      00375     
00CF                  00376 time_plus_blink                 ; инкремент переменной выбора и переход к изменению времени
00CF   0AD0           00377     incf NumPressKey,1
00D0   2???           00378     goto change_time
00D1   0008           00379     return
                      00380     
00D2                  00381 day_plus_blink                  ; инкремент переменной выбора и переход к изменению времени
00D2   3008           00382     movlw 0x8
00D3   00D0           00383     movwf NumPressKey
00D4   2???           00384     goto change_day
00D5   0008           00385     return
                      00386     ;--------------------------------------------------------
                      00387     
00D6                  00388 write    ; процедура записи байта к контроллер HD
00D6   1303           00389     bcf STATUS, RP1
00D7   1283           00390     bcf STATUS, RP0
00D8   0086           00391     movwf PORTB
00D9   1507           00392     bsf PORTC, 2
00DA   3001           00393     movlw 0x01
00DB   2???           00394     call delay
00DC   1107           00395     bcf PORTC, 2
00DD   0008           00396     return
                      00397     
                      00398         ; перед вызовом этой процедуры в W помеща-
                      00399         ;ется байт, который надо записать в HD. Далее
                      00400         ;он передается в PORTB и формируется отрица-
                      00401         ;тельный перепад на RC2, путем предваритель-
                      00402         ;ной  его  установки  в  «1»,  удержания  этого
                      00403         ;уровня в течение некоторого времени (опреде-
                      00404         ;ляемого временем задержки delay  при  W=1) и
                      00405         ;сброса его в «0».
                      00406 
                      00407         ;  процедура  задержки,  время  которой  можно
                      00408         ;регулировать, задавая число в W
00DE                  00409 delay
00DE   1303           00410     bcf   STATUS, RP1
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DF   1283           00411     bcf   STATUS, RP0
00E0   00A7           00412     movwf   fCOUNTER2
00E1   01A6           00413     clrf    fCOUNTER
                      00414     
00E2                  00415 BD_Loop
00E2   0064           00416     clrwdt
00E3   0BA6           00417     decfsz  fCOUNTER, f
00E4   2???           00418     goto    BD_Loop
00E5   0BA7           00419     decfsz  fCOUNTER2, f
00E6   2???           00420     goto    BD_Loop
00E7   0008           00421     return
                      00422 
                      00423     ;==========================================
                      00424     
00E8                  00425 LCD_one
00E8   1007           00426     bcf PORTC, 0
00E9   3080           00427     movlw b'10000000'   ; установка адреса
00EA   2???           00428     call write
00EB   1407           00429     bsf PORTC,0
                      00430     ;Отрисовка первой строки
                      00431     ; Отрисовка Н2
00EC   2???           00432     call paintH2
                      00433     ; Отрисовка Н1
00ED   2???           00434     call paintH1
00EE   303A           00435     movlw ':'
00EF   2???           00436     call write
                      00437     ; Отрисовка М2
00F0   2???           00438     call paintM2
                      00439     ; Отрисовка М1
00F1   2???           00440     call paintM1
00F2   303A           00441     movlw ':'
00F3   2???           00442     call write
                      00443     ; Отрисовка S2
00F4   2???           00444     call paintS2
                      00445     ; Отрисовка S1
00F5   2???           00446     call paintS1
00F6   3020           00447     movlw ' '
00F7   2???           00448     call write
00F8   3020           00449     movlw ' '
00F9   2???           00450     call write
00FA   2???           00451     call printDay
                      00452 
00FB   0008           00453     return
                      00454     
                      00455     ;==========================================
                      00456     
                      00457     ; Собственно механизм последовательного моргания при настройке времени
00FC                  00458 paintH2
00FC   3001           00459     movlw 0x1                   ; если NumPressKey = 0, то вызываем
00FD   0650           00460     xorwf NumPressKey, w;       
00FE   1D03           00461     btfss STATUS, 0x02          
00FF   2???           00462     goto blink_on_H2
0100   0AD1           00463     incf Blink,1
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   1C51           00464     btfss Blink, 0
0102   2???           00465     goto blink_on_H2
0103   2???           00466     goto blink_off_H2
0104                  00467 blink_off_H2
0104   3020           00468     movlw ' '
0105   2???           00469     call write
0106   0008           00470     return
0107                  00471 blink_on_H2
0107   0831           00472     movfw TIME_HH2
0108   2???           00473     call write
0109   0008           00474     return
                      00475     ;-----------
010A                  00476 paintH1
010A   3002           00477     movlw 0x2                   ; если NumPressKey = 0, то вызываем
010B   0650           00478     xorwf NumPressKey, w;       
010C   1D03           00479     btfss STATUS, 0x02          
010D   2???           00480     goto blink_on_H1
010E   0AD1           00481     incf Blink,1
010F   1C51           00482     btfss Blink, 0
0110   2???           00483     goto blink_on_H1
0111   2???           00484     goto blink_off_H1
0112                  00485 blink_off_H1
0112   3020           00486     movlw ' '
0113   2???           00487     call write
0114   0008           00488     return
0115                  00489 blink_on_H1
0115   0830           00490     movfw TIME_HH1
0116   2???           00491     call write
0117   0008           00492     return
                      00493     ;------------
0118                  00494 paintM2
0118   3003           00495     movlw 0x3                   ; если NumPressKey = 0, то вызываем
0119   0650           00496     xorwf NumPressKey, w;       
011A   1D03           00497     btfss STATUS, 0x02          
011B   2???           00498     goto blink_on_M2
011C   0AD1           00499     incf Blink,1
011D   1C51           00500     btfss Blink, 0
011E   2???           00501     goto blink_on_M2
011F   2???           00502     goto blink_off_M2
0120                  00503 blink_off_M2
0120   3020           00504     movlw ' '
0121   2???           00505     call write
0122   0008           00506     return
0123                  00507 blink_on_M2
0123   0833           00508     movfw TIME_MM2
0124   2???           00509     call write
0125   0008           00510     return
                      00511     ;------------
0126                  00512 paintM1
0126   3004           00513     movlw 0x4                   ; если NumPressKey = 0, то вызываем
0127   0650           00514     xorwf NumPressKey, w;       
0128   1D03           00515     btfss STATUS, 0x02          
0129   2???           00516     goto blink_on_M1
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012A   0AD1           00517     incf Blink,1
012B   1C51           00518     btfss Blink, 0
012C   2???           00519     goto blink_on_M1
012D   2???           00520     goto blink_off_M1
012E                  00521 blink_off_M1
012E   3020           00522     movlw ' '
012F   2???           00523     call write
0130   0008           00524     return
0131                  00525 blink_on_M1
0131   0832           00526     movfw TIME_MM1
0132   2???           00527     call write
0133   0008           00528     return
                      00529     ;------------
0134                  00530 paintS2
0134   3005           00531     movlw 0x5                   ; если NumPressKey = 0, то вызываем
0135   0650           00532     xorwf NumPressKey, w;       
0136   1D03           00533     btfss STATUS, 0x02          
0137   2???           00534     goto blink_on_S2
0138   0AD1           00535     incf Blink,1
0139   1C51           00536     btfss Blink, 0
013A   2???           00537     goto blink_on_S2
013B   2???           00538     goto blink_off_S2
013C                  00539 blink_off_S2
013C   3020           00540     movlw ' '
013D   2???           00541     call write
013E   0008           00542     return
013F                  00543 blink_on_S2
013F   0835           00544     movfw TIME_SS2
0140   2???           00545     call write
0141   0008           00546     return
                      00547     ;------------
0142                  00548 paintS1
0142   3006           00549     movlw 0x6                   ; если NumPressKey = 0, то вызываем
0143   0650           00550     xorwf NumPressKey, w;       
0144   1D03           00551     btfss STATUS, 0x02          
0145   2???           00552     goto blink_on_S1
0146   0AD1           00553     incf Blink,1
0147   1C51           00554     btfss Blink, 0
0148   2???           00555     goto blink_on_S1
0149   2???           00556     goto blink_off_S1
014A                  00557 blink_off_S1
014A   3020           00558     movlw ' '
014B   2???           00559     call write
014C   0008           00560     return
014D                  00561 blink_on_S1
014D   0834           00562     movfw TIME_SS1
014E   2???           00563     call write
014F   0008           00564     return
                      00565     ;-----------
0150                  00566 printDay
0150   3008           00567     movlw 0x8                   ; если NumPressKey = 0, то вызываем
0151   0650           00568     xorwf NumPressKey, w;       
0152   1D03           00569     btfss STATUS, 0x02          
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0153   2???           00570     goto blink_on_day
0154   0AD1           00571     incf Blink,1
0155   1C51           00572     btfss Blink, 0
0156   2???           00573     goto blink_on_day
0157   2???           00574     goto blink_off_day
0158                  00575 blink_off_day
0158   3020           00576     movlw ' '
0159   2???           00577     call write
015A   3020           00578     movlw ' '
015B   2???           00579     call write
015C   3020           00580     movlw ' '
015D   2???           00581     call write
015E   0008           00582     return
015F                  00583 blink_on_day
015F   0836           00584     movfw DAY                           
0160   2???           00585     call DEC
0161   0008           00586     return
                      00587     ;==========================================   
                      00588     
0162                  00589 LCD_two
0162   1007           00590     bcf PORTC, 0
0163   30C4           00591     movlw b'11000100'
0164   2???           00592     call write
                      00593 ; Установка RC0=0, для последующей передачи
                      00594 ;команды  на  контроллер  HD.  Передается  ко-
                      00595 ;манда Set DDRAM address,  устанавливающая
                      00596 ;счетчик  адреса  видеопамяти  на  начало  2-ой
                      00597 ;строки:  ячейку  с  адресом  (0х40  =  0100  0000).
                      00598 ;Это  необходимо  для  вывода  фразы  «TEM-
                      00599 ;PERATURA =» на второй строке индикатора.
                      00600 
0165   1407           00601     bsf PORTC,0  ; установка RC0=1, для последующей передачи
                      00602 ;кодов символов второй строки на дисплей. Об-
                      00603 ;ратите внимание на то, что нигде не требуется
                      00604 ;изменения  банков  памяти: т.к. все регистры, с
                      00605 ;которыми работает ПО, находятся в 0-ом бан-
                      00606 ;ке.
0166   3041           00607     movlw 'A'
0167   2???           00608     call write
0168   304C           00609     movlw 'L'
0169   2???           00610     call write
016A   3041           00611     movlw 'A'
016B   2???           00612     call write
016C   3052           00613     movlw 'R'
016D   2???           00614     call write
016E   304D           00615     movlw 'M'
016F   2???           00616     call write
0170   3020           00617     movlw ' '
0171   2???           00618     call write
0172   3020           00619     movlw ' '
0173   2???           00620     call write
0174   0838           00621     movfw ALARM_HH2
0175   2???           00622     call write
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0176   0837           00623     movfw ALARM_HH1
0177   2???           00624     call write
0178   303A           00625     movlw ':'
0179   2???           00626     call write
017A   083A           00627     movfw ALARM_MM2
017B   2???           00628     call write
017C   0839           00629     movfw ALARM_MM1
017D   2???           00630     call write
017E   0008           00631     return
                      00632  
                      00633      ;==========================================
                      00634      
                      00635     
017F                  00636 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
017F   1283           00637     bcf STATUS, RP0         ; переход в нулевой банк, для нормального вызова функции из тела программы
0180   1303           00638     bcf STATUS, RP1
0181   01BB           00639     clrf Key1               ; обнуление кодов клавиш
0182   01BC           00640     clrf Key2 
0183   01BD           00641     clrf Key3
0184   01BE           00642     clrf Key4  
0185   01C3           00643     clrf Key9  
0186                  00644 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
0186   1405           00645     bsf PORTA,0             ; подача питания
0187   1085           00646     bcf PORTA,1
0188   1105           00647     bcf PORTA,2 
                      00648     ;movlw .24
                      00649     ;call small_delay
0189   0805           00650     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
018A   3938           00651     andlw 0x38
018B   1903           00652     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
018C   2???           00653     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00654     ;movlw .250
                      00655     ;call small_delay  
018D   1985           00656     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
018E   0ABB           00657     incf Key1,F
018F   1A05           00658     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
0190   0ABE           00659     incf Key4,F
Warning[207]: Found label after column 1. (col2)
0191                  00660     col2                    ; сканируем второй столбец, где нам нужна клавиша 2
0191   1005           00661     bcf PORTA,0             ; подача питания
0192   1485           00662     bsf PORTA,1
0193   1105           00663     bcf PORTA,2 
                      00664     ;movlw .24
                      00665     ;sd
0194   0805           00666     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0195   3938           00667     andlw 0x38
0196   1903           00668     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0197   2???           00669     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00670     ;movlw .250
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00671     ;sd
0198   1985           00672     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0199   0ABC           00673     incf Key2,F
019A                  00674 col3                ; сканируем третий столбец, где нам нужна клавиша 3
019A   1005           00675     bcf PORTA,0             ; подача питания
019B   1085           00676     bcf PORTA,1
019C   1505           00677     bsf PORTA,2
                      00678     ;movlw .24
                      00679     ;sd
019D   0805           00680     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
019E   3938           00681     andlw 0x38
019F   1903           00682     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
01A0   0008           00683     return                  ; если Z=0, то пропускаем строку
                      00684     ;movlw .250
                      00685     ;sd
01A1   1985           00686     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
01A2   0ABD           00687     incf Key3,F
01A3   1A85           00688     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
01A4   0AC3           00689     incf Key9,F
01A5   0008           00690     return                  ; выход из функции
                      00691     
                      00692 ;==============================================
                      00693 
01A6                  00694 change_time                 ; функция изменения времени
01A6   2???           00695     call Keyboard           ; спрашиваем клавиатуру
01A7   183B           00696     btfsc Key1,0
01A8   2???           00697     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
01A9   183C           00698     btfsc Key2,0
01AA   2???           00699     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
01AB   183D           00700     btfsc Key3,0
01AC   2???           00701     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
01AD   183E           00702     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
01AE   2???           00703     goto change_HMS
                      00704     
01AF   2???           00705     call LCD_one
01B0   2???           00706     goto change_time
                      00707     
                      00708     ;----------------------------------------
                      00709     
01B1                  00710 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
01B1   30FF           00711     movlw 0xff
01B2   2???           00712     call delay                  ; задержка крч
01B3   30FF           00713     movlw 0xff
01B4   2???           00714     call delay                  ; задержка крч                      
01B5   3001           00715     movlw 0x1                   ; если NumPressKey = 0, то вызываем
01B6   0650           00716     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
01B7   1903           00717     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01B8   2???           00718     call correct_H2
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00719     
01B9   3002           00720     movlw 0x2                   ; если NumPressKey = 1, то вызываем
01BA   0650           00721     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
01BB   1903           00722     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01BC   2???           00723     call correct_H1
                      00724 
01BD   3003           00725     movlw 0x3                   ; если NumPressKey = 2, то вызываем
01BE   0650           00726     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
01BF   1903           00727     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01C0   2???           00728     call correct_M2
                      00729     
01C1   3004           00730     movlw 0x4                   ; если NumPressKey = 3, то вызываем
01C2   0650           00731     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
01C3   1903           00732     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01C4   2???           00733     call correct_M1
                      00734     
01C5   3005           00735     movlw 0x5                   ; если NumPressKey = 4, то вызываем
01C6   0650           00736     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
01C7   1903           00737     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01C8   2???           00738     call correct_S2
                      00739     
01C9   3006           00740     movlw 0x6                   ; если NumPressKey = 5, то вызываем
01CA   0650           00741     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
01CB   1903           00742     btfsc STATUS, 0x02          ; если нет, выходим из функции
01CC   2???           00743     call correct_S1
                      00744     
01CD   0008           00745     return
                      00746     
                      00747     ;----------------------------------------
                      00748     
01CE                  00749 correct_H2                      ; функцию коррекции переменной H2.
01CE   0AB1           00750     incf TIME_HH2,1     ; инкремент временной переменной для Н2
01CF   3033           00751     movlw 0x33                  ; if !=3, переходим обратно в функцию
01D0   0631           00752     xorwf TIME_HH2, w   ; correct_T_plus и проверяем там следующее условие
01D1   1D03           00753     btfss STATUS, 0x02
01D2   0008           00754     return
01D3   3030           00755     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
01D4   00B1           00756     movwf       TIME_HH2
01D5   0008           00757     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00758     
01D6                  00759 correct_H1                      ; функцию коррекции переменной H1.
01D6   0AB0           00760     incf TIME_HH1,1     ; инкремент временной переменной для Н1
01D7   3032           00761     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
01D8   0631           00762     xorwf TIME_HH2, w   ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00763                                 ; ограничить единицы при десятках = 2   
01D9   1903           00764     btfsc STATUS, 0x02
01DA   2???           00765     goto three_H1                       
01DB   303A           00766     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
01DC   0630           00767 t1  xorwf TIME_HH1, w   
01DD   1D03           00768     btfss STATUS, 0x02
01DE   0008           00769     return
01DF   3030           00770     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            е. 
01E0   00B0           00771     movwf       TIME_HH1
01E1   0008           00772     return
                      00773     
01E2                  00774 three_H1
01E2   3034           00775     movlw 0x34                  ; предел для обнуления при переменной = 2
01E3   2???           00776     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00777     
01E4                  00778 correct_M2                      ; функцию коррекции переменной M2.
01E4   0AB3           00779     incf TIME_MM2,1
01E5   3036           00780     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01E6   0633           00781     xorwf TIME_MM2, w;
01E7   1D03           00782     btfss STATUS, 0x02
01E8   0008           00783     return
01E9   3030           00784     movlw       0x30
01EA   00B3           00785     movwf       TIME_MM2
01EB   0008           00786     return
                      00787     
01EC                  00788 correct_M1                      ; функцию коррекции переменной M1.
01EC   0AB2           00789     incf TIME_MM1,1
01ED   303A           00790     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01EE   0632           00791     xorwf TIME_MM1, w;
01EF   1D03           00792     btfss STATUS, 0x02
01F0   0008           00793     return
01F1   3030           00794     movlw       0x30
01F2   00B2           00795     movwf       TIME_MM1
01F3   0008           00796     return
                      00797     
01F4                  00798 correct_S2                      ; функцию коррекции переменной S2.
01F4   0AB5           00799     incf TIME_SS2,1
01F5   3036           00800     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01F6   0635           00801     xorwf TIME_SS2, w;
01F7   1D03           00802     btfss STATUS, 0x02
01F8   0008           00803     return
01F9   3030           00804     movlw       0x30
01FA   00B5           00805     movwf       TIME_SS2
01FB   0008           00806     return
                      00807     
01FC                  00808 correct_S1                      ; функцию коррекции переменной S1.
01FC   0AB4           00809     incf TIME_SS1,1
01FD   303A           00810     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01FE   0634           00811     xorwf TIME_SS1, w;
01FF   1D03           00812     btfss STATUS, 0x02
0200   0008           00813     return
0201   3030           00814     movlw       0x30
0202   00B4           00815     movwf       TIME_SS1
0203   0008           00816     return
                      00817     
                      00818     ;----------------------------------------
                      00819     
0204                  00820 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
0204   30FF           00821     movlw 0xff
0205   2???           00822     call delay              ; задержка крч
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0206   30FF           00823     movlw 0xff
0207   2???           00824     call delay              ; задержка крч
0208   3001           00825     movlw 0x1                   ; если NumPressKey = 0, то вызываем
0209   0650           00826     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
020A   1903           00827     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
020B   2???           00828     call correct_H2_minus
                      00829     
020C   3002           00830     movlw 0x2                   ; если NumPressKey = 1, то вызываем
020D   0650           00831     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
020E   1903           00832     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
020F   2???           00833     call correct_H1_minus
                      00834 
0210   3003           00835     movlw 0x3                   ; если NumPressKey = 2, то вызываем
0211   0650           00836     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0212   1903           00837     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0213   2???           00838     call correct_M2_minus
                      00839     
0214   3004           00840     movlw 0x4                   ; если NumPressKey = 3, то вызываем
0215   0650           00841     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0216   1903           00842     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0217   2???           00843     call correct_M1_minus
                      00844     
0218   3005           00845     movlw 0x5                   ; если NumPressKey = 4, то вызываем
0219   0650           00846     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
021A   1903           00847     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
021B   2???           00848     call correct_S2_minus
                      00849     
021C   3006           00850     movlw 0x6                   ; если NumPressKey = 5, то вызываем
021D   0650           00851     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
021E   1903           00852     btfsc STATUS, 0x02          ; если нет, выходим из функции
021F   2???           00853     call correct_S1_minus
                      00854     
0220   0008           00855     return
                      00856     
                      00857     ;----------------------------------------
                      00858     
0221                  00859 correct_H2_minus                ; функцию коррекции переменной H2.
0221   03B1           00860     decf TIME_HH2,1     ; декремент временной переменной для Н2
0222   302F           00861     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
0223   0631           00862     xorwf TIME_HH2, w   ; correct_T_ и проверяем там следующее условие
0224   1D03           00863     btfss STATUS, 0x02
0225   0008           00864     return
0226   3032           00865     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
0227   00B1           00866     movwf       TIME_HH2
0228   0008           00867     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      00868     
0229                  00869 correct_H1_minus                ; функцию коррекции переменной H1.
0229   03B0           00870     decf TIME_HH1,1     ; декремент временной переменной для Н1
022A   302F           00871     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
022B   0630           00872     xorwf TIME_HH1, w   ; correct_T_ и проверяем там следующее условие
                      00873                                         
022C   1D03           00874     btfss STATUS, 0x02
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D   0008           00875     return              
022E   3032           00876     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
022F   0631           00877     xorwf TIME_HH2, w   
0230   1903           00878     btfsc STATUS, 0x02
0231   2???           00879     goto three_H1_minus
0232   3039           00880     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
0233   00B0           00881 t2  movwf       TIME_HH1
0234   0008           00882     return
                      00883     
0235                  00884 three_H1_minus
0235   3033           00885     movlw 0x33                  ; значение для присваивания при Н2 = 2.
0236   2???           00886     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      00887     
0237                  00888 correct_M2_minus                        ; функцию коррекции переменной M2.
0237   03B3           00889     decf TIME_MM2,1
0238   302F           00890     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0239   0633           00891     xorwf TIME_MM2, w;
023A   1D03           00892     btfss STATUS, 0x02
023B   0008           00893     return
023C   3035           00894     movlw       0x35
023D   00B3           00895     movwf       TIME_MM2
023E   0008           00896     return
                      00897     
023F                  00898 correct_M1_minus                        ; функцию коррекции переменной M1.
023F   03B2           00899     decf TIME_MM1,1
0240   302F           00900     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0241   0632           00901     xorwf TIME_MM1, w;
0242   1D03           00902     btfss STATUS, 0x02
0243   0008           00903     return
0244   3039           00904     movlw       0x39
0245   00B2           00905     movwf       TIME_MM1
0246   0008           00906     return
                      00907     
0247                  00908 correct_S2_minus                        ; функцию коррекции переменной S2.
0247   03B5           00909     decf TIME_SS2,1
0248   302F           00910     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0249   0635           00911     xorwf TIME_SS2, w;
024A   1D03           00912     btfss STATUS, 0x02
024B   0008           00913     return
024C   3035           00914     movlw       0x35
024D   00B5           00915     movwf       TIME_SS2
024E   0008           00916     return
                      00917     
024F                  00918 correct_S1_minus                        ; функцию коррекции переменной S1.
024F   03B4           00919     decf TIME_SS1,1
0250   302F           00920     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0251   0634           00921     xorwf TIME_SS1, w;
0252   1D03           00922     btfss STATUS, 0x02
0253   0008           00923     return
0254   3039           00924     movlw       0x39
0255   00B4           00925     movwf       TIME_SS1
0256   0008           00926     return
                      00927     
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00928     ;==============================================
                      00929     
0257                  00930 save_T                          ; функция проверки и сохранения времени
0257   30FF           00931     movlw 0xff
0258   2???           00932     call delay                  ; задержка крч
0259   30FF           00933     movlw 0xff
025A   2???           00934     call delay                  ; задержка крч
025B   3006           00935     movlw 0x6                   ; если происходит переполнение NumPressKey
025C   0650           00936     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
025D   1903           00937     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
025E   2???           00938     goto START                  ; в постоянные
025F   0AD0           00939     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
0260   2???           00940     goto change_time            ; его и возвращаемся в функцию изменения времени
                      00941     
0261                  00942 change_HMS
0261   0846           00943     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
0262   00B1           00944     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0263   0845           00945     movfw TEMP_TIME_HH1         ; значение)
0264   00B0           00946     movwf TIME_HH1
0265   0848           00947     movfw TEMP_TIME_MM2         
0266   00B3           00948     movwf TIME_MM2
0267   0847           00949     movfw TEMP_TIME_MM1         
0268   00B2           00950     movwf TIME_MM1
0269   084A           00951     movfw TEMP_TIME_SS2         
026A   00B5           00952     movwf TIME_SS2
026B   0849           00953     movfw TEMP_TIME_SS1         
026C   00B4           00954     movwf TIME_SS1
026D   2???           00955     goto START                  ; возврат в основной цикл
                      00956     
                      00957     ;==============================================
                      00958     ;==============================================
                      00959     ;==============================================
                      00960     
026E                  00961 change_day                  ; функция изменения дня недели
026E   2???           00962     call Keyboard
026F   183B           00963     btfsc Key1,0
0270   2???           00964     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0271   183C           00965     btfsc Key2,0
0272   2???           00966     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0273   183D           00967     btfsc Key3,0            ; выход из настройки времени в основной цикл без сохранения результата
0274   2???           00968     goto START
0275   183E           00969     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0276   2???           00970     goto save_day_ch
                      00971     
0277   2???           00972     call LCD_one
                      00973     
0278   2???           00974     goto change_day
                      00975     
0279                  00976 plus_day_ch
0279   30FF           00977     movlw 0xff
027A   2???           00978     call delay              ; задержка крч
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027B   30FF           00979     movlw 0xff
027C   2???           00980     call delay              ; задержка крч
027D   0AB6           00981     incf DAY,1
027E   3007           00982     movlw .7                    ; inc переменной День
027F   0636           00983     xorwf DAY, w;
0280   1D03           00984     btfss STATUS, 0x02          ; is not working 
0281   2???           00985     goto change_day                     ; 
0282   3000           00986     movlw .0
0283   00B6           00987     movwf DAY
0284   2???           00988     goto change_day
                      00989     
0285                  00990 minus_day_ch
0285   30FF           00991     movlw 0xff
0286   2???           00992     call delay              ; задержка крч
0287   30FF           00993     movlw 0xff
0288   2???           00994     call delay              ; задержка крч
0289   03B6           00995     decf DAY,1
028A   30FF           00996     movlw .255                  ; inc переменной День
028B   0636           00997     xorwf DAY, w;
028C   1D03           00998     btfss STATUS, 0x02          ; is not working 
028D   2???           00999     goto change_day                     
028E   3006           01000     movlw .6
028F   00B6           01001     movwf DAY
0290   2???           01002     goto change_day
                      01003     
0291                  01004 save_day_ch
0291   084B           01005     movfw TEMP_DAY
0292   00B6           01006     movwf DAY
0293   2???           01007     goto START
                      01008     
                      01009     ;==============================================
                      01010     ;==============================================
                      01011     ;==============================================
                      01012                             
                      01013 ;small_delay:                   ; задержка для драйвера
                      01014 ;    movwf fCOUNTER1
                      01015 ;    clrwdt
                      01016 ;    decfsz fCOUNTER1,F
                      01017 ;    goto $-2
                      01018 ;    return
                      01019     
Warning[205]: Found directive in column 1. (end)
                      01020 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           000000E2
BF                                00000000
BRGH                              00000002
Blink                             00000051
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               00000095
DS                                00000002
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key5                              0000003F
Key6                              00000040
Key7                              00000041
Key8                              00000042
Key9                              00000043
Keyboard                          0000017F
LCD_one                           000000E8
LCD_two                           00000162
NOT_A                             00000005
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumPressKey                       00000050
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RST                               00000002
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000040
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

begin                             00000004
blink_off_H1                      00000112
blink_off_H2                      00000104
blink_off_M1                      0000012E
blink_off_M2                      00000120
blink_off_S1                      0000014A
blink_off_S2                      0000013C
blink_off_day                     00000158
blink_on_H1                       00000115
blink_on_H2                       00000107
blink_on_M1                       00000131
blink_on_M2                       00000123
blink_on_S1                       0000014D
blink_on_S2                       0000013F
blink_on_day                      0000015F
change_HMS                        00000261
change_day                        0000026E
change_time                       000001A6
col1                              00000186
col2                              00000191
col3                              0000019A
correct_H1                        000001D6
correct_H1_minus                  00000229
correct_H2                        000001CE
correct_H2_minus                  00000221
correct_M1                        000001EC
correct_M1_minus                  0000023F
correct_M2                        000001E4
correct_M2_minus                  00000237
correct_S1                        000001FC
correct_S1_minus                  0000024F
correct_S2                        000001F4
correct_S2_minus                  00000247
correct_T_minus                   00000204
correct_T_plus                    000001B1
day_plus_blink                    000000D2
delay                             000000DE
end_clock                         0000008C
exday                             000000CE
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            000000BA
minus_day_ch                      00000285
monday                            0000009E
paintH1                           0000010A
paintH2                           000000FC
paintM1                           00000126
paintM2                           00000118
paintS1                           00000142
paintS2                           00000134
plus_day_ch                       00000279
printDay                          00000150
MPASM 5.75                          MAIN.ASM   10-23-2017  21:20:30         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

saturday                          000000C1
save_T                            00000257
save_day_ch                       00000291
sunday                            000000C8
t1                                000001DC
t2                                00000233
ten_clock                         00000085
three_H1                          000001E2
three_H1_minus                    00000235
thursday                          000000B3
time_plus_blink                   000000CF
tuesday                           000000A5
wait                              
wednesday                         000000AC
write                             000000D6

Errors   :     0
Warnings :     4 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

