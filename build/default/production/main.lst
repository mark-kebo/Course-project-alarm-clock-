MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.7                                                    *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013 ;директивы  типа  контроллера,  под-
                      00014 ;ключения  заголовочного  файла  и  вы-
                      00015 ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ;директивы, позволяющие заменять в теле  ПО  команды,  указанные  после
                      00019 ;этой  директивы  (bcf  ,  bsf)  –  метками bank0, bank1. Обратную замену производит компилятор
  00000020            00020 WAIT                equ     0x20
  00000023            00021 Reg_1               equ     0x23    ;Регистры, используемые для задержек
  00000024            00022 Reg_2               equ     0x24
  00000025            00023 Reg_3               equ     0x25
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30    ;Регистр, который хранит значение единиц часов
  00000031            00027 TIME_HH2            equ     0x31    ;Регистр, который хранит значение десятков часов
  00000032            00028 TIME_MM1            equ     0x32    ;Регистр, который хранит значение единиц минут
  00000033            00029 TIME_MM2            equ     0x33    ;Регистр, который хранит значение десятков минут
  00000034            00030 TIME_SS1            equ     0x34    ;Регистр, который хранит значение единиц секунд
  00000035            00031 TIME_SS2            equ     0x35    ;Регистр, который хранит значение десятков секунд
  00000036            00032 DAY                 equ     0x36    ;Регистр, который хранит значение дня недели
  00000037            00033 ALARM_HH1           equ     0x37    ;Регистр, который хранит значение единиц часов для будильника
  00000038            00034 ALARM_HH2           equ     0x38    ;Регистр, который хранит значение десятков часов для будильника
  00000039            00035 ALARM_MM1           equ     0x39    ;Регистр, который хранит значение единиц минут для будильника
  0000003A            00036 ALARM_MM2           equ     0x3A    ;Регистр, который хранит значение десятков минут для будильника
  0000003B            00037 Key1                equ     0x3B    ;Регистры, которые хранят состояние клавиш в драйвере  
  0000003C            00038 Key2                equ     0x3C    ;клавиатуры Keyboard
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key9                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Blink               equ     0x40    ;Регистр, для управления морганием элементов экрана
  00000041            00043 Cnt                 equ     0x41    ;Регистр, который хранит состояние клавиши в драйвере (нажата или не
                            т)
  00000042            00044 Blink_Alarm         equ     0x42    ;Управляющий регистр, который выполняет функцию включения\выключения
                             будильника
  00000043            00045 NumPressKey         equ     0x43    ;Управляющий регистр-метка, для посимвольного изменения значений и в
                            ыбора моргающего элемента
  00000044            00046 fCOUNTER1           equ     0x44    ;Регистр используемый для задержек    
  00000045            00047 TEMP_TIME_HH1       equ     0x45    ;Регистры, который хранит значения: часов, минут, секунд основного в
                            ремени;
  00000046            00048 TEMP_TIME_HH2       equ     0x46    ;значение дня и минут, часов будильника. Нужены для сохранения текущ
                            их значений
  00000047            00049 TEMP_TIME_MM1       equ     0x47    ;перед изменением в соответствующих режимах
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumAlarmBit         equ     0x50    ;Так же, как Blink_Alarm, управляет корректным включением и выключен
                            ием будильника
                      00059     
                      00060 wait  macro     time
                      00061     movlw    (time/5)-1
                      00062     movwf    WAIT
                      00063     call    wait5u
                      00064     endm
                      00065 ;макрос паузы с именем wait. Особенность этого макроса состоит в том, что
                      00066 ;у  него  имеется  параметр  –  time.  При вызове  макроса  значение  параметра
                      00067 ;указывается  после  имени  макроса  в виде  целого  десятичного  числа  крат-
                      00068 ;ного  5  (в  данном  примере).  В  теле макроса  это  число  подставляется  в
                      00069 ;«переменную» time и далее используется вычисленное значение (которое в
                      00070 ;данном случае  выступает  в  роли  константы, записываемой в W). Вместе с
                      00071 ;процедурой  wait5u  длительность  задержки,  обеспечиваемая  макросом
                      00072 ;равна time микросекунд
                      00073     org 0x0000
0000   0183           00074     clrf STATUS
0001   3000           00075     movlw 0x00
0002   008A           00076     movwf PCLATH
0003   2???           00077     goto begin
                      00078 ;Выбор нулевой страницы памяти команд и размещение на ней откомпилированного кода
                      00079 
0004                  00080 begin
0004   1683           00081     bank1                       ;Выбор первого банка памяти. Для вы-
                      00082                                 ;зова используется метка bank1, объяв-
                      00083                                 ;ленная выше директивой #define.
0005   308F           00084     movlw 0x8F                  ;Установка  максимального  времени
0006   0081           00085     movwf OPTION_REG            ;срабатывания  сторожевого  таймера  и его сброс
0007   0064           00086     clrwdt
0008   018B           00087     clrf INTCON                 ;Отключение  прерываний  и  их  обработки
0009   018C           00088     clrf PIE1
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   018D           00089     clrf PIE2
000B   3000           00090     movlw .0                    ;Конфигурирование  портов  А, В, С, Е, D
000C   0086           00091     movwf TRISB
000D   0087           00092     movwf TRISC
000E   0089           00093     movwf TRISE
000F   30F8           00094     movlw b'11111000' 
0010   0085           00095     movwf TRISA 
0011   3000           00096     movlw b'00000000'           
0012   0088           00097     movwf TRISD
0013   300F           00098     movlw b'00001111'
0014   0081           00099     movwf OPTION_REG
0015   019F           00100     clrf ADCON1 
0016   149F           00101     bsf ADCON1,0x01 
0017   151F           00102     bsf ADCON1,0x02 
0018   1283           00103     bank0                       ;Подготовка к передаче команд на контроллер
0019   01BB           00104     clrf Key1    
001A   01BC           00105     clrf Key2       
001B   01BD           00106     clrf Key3       
001C   01BE           00107     clrf Key4              
001D   01BF           00108     clrf Key9               
001E   01C1           00109     clrf Cnt                
001F   0187           00110     clrf PORTC
0020   0188           00111     clrf PORTD
0021   3001           00112     movlw 0x01
0022   2???           00113     call write
0023   300F           00114     movlw 0x0f
0024   2???           00115     call delay
                      00116 ;Передача команды Clear  Display для очистки дисплея и установки счетчика адреса видеопа-
                      00117 ;мяти  на  нулевой  адрес  (первое  знакоместо  в верхней строке), с необходимой задержкой
0025   0064           00118     clrwdt
0026   3038           00119     movlw 0x38
0027   2???           00120     call write
0028   300F           00121     movlw 0x0f
0029   2???           00122     call delay
                      00123 
                      00124 ;Передача команды Function Set для установки режима  2-х  строчного  индикатора,  размера
                      00125 ;знакоместа 5х7 и 8 разрядной шины данных
002A   3006           00126     movlw 0x06
002B   2???           00127     call write
002C   300F           00128     movlw 0x0f
002D   2???           00129     call delay
                      00130 ;Передача  команды  Entry  Mode  Set  для  установки режима увеличения счетчика адреса ви-
                      00131 ;деопамяти, после каждой записи символа в нее, при неподвижности видеопамяти относительно индикатора
002E   300C           00132     movlw 0x0c
002F   2???           00133     call write
0030   300F           00134     movlw 0x0f
0031   2???           00135     call delay
                      00136 ;Передача  команды  Display  ON/OFF  control для включения дисплея с отключенным курсо-
                      00137 ;ром.  На  этом  этап инициализации дисплея закончен.
0032   3036           00138     movlw       0x36            ;в основной цикл программы
0033   00B7           00139     movwf       ALARM_HH1
0034   3030           00140     movlw       0x30
0035   00B5           00141     movwf       TIME_SS2 
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0036   00B4           00142     movwf       TIME_SS1        ;Присвоение начальных значений регистров времени и дня,
0037   00B9           00143     movwf       ALARM_MM1       ;а так же обнуление управляющих регистров до перехода 
0038   00B5           00144     movwf       TIME_SS2        ;в основной цикл программы
0039   00B0           00145     movwf       TIME_HH1
003A   00B1           00146     movwf       TIME_HH2
003B   00B2           00147     movwf       TIME_MM1
003C   00B3           00148     movwf       TIME_MM2
003D   00B8           00149     movwf       ALARM_HH2
003E   00BA           00150     movwf       ALARM_MM2
003F   3000           00151     movlw       .0
0040   00B6           00152     movwf       DAY
0041   00C2           00153     movwf       Blink_Alarm
0042   00D0           00154     movwf       NumAlarmBit
0043   3000           00155     movlw       b'00000000'
0044   00C0           00156     movwf       Blink
                      00157 
0045                  00158 START                           ;Метка начала основного цикла программы
0045   3000           00159     movlw .0                    ;Записываем значения времени, дня и обнуление управляющего регистра 
0046   00C2           00160     movwf Blink_Alarm           ;в начале каждого прохода основного цикла
0047   0831           00161     movfw TIME_HH2              
0048   00C6           00162     movwf TEMP_TIME_HH2         
0049   0830           00163     movfw TIME_HH1              
004A   00C5           00164     movwf TEMP_TIME_HH1
004B   0833           00165     movfw TIME_MM2              
004C   00C8           00166     movwf TEMP_TIME_MM2
004D   0832           00167     movfw TIME_MM1              
004E   00C7           00168     movwf TEMP_TIME_MM1
004F   0835           00169     movfw TIME_SS2              
0050   00CA           00170     movwf TEMP_TIME_SS2
0051   0834           00171     movfw TIME_SS1              
0052   00C9           00172     movwf TEMP_TIME_SS1
0053   0836           00173     movfw DAY
0054   00CB           00174     movwf TEMP_DAY
0055   3000           00175     movlw 0x00
0056   00C3           00176     movwf NumPressKey           ; NumPressKey каждый раз устанавливаем в начальное значение
0057   0837           00177     movfw ALARM_HH1
0058   00CC           00178     movwf TEMP_ALARM_HH1
0059   0838           00179     movfw ALARM_HH2
005A   00CD           00180     movwf TEMP_ALARM_HH2
005B   0839           00181     movfw ALARM_MM1
005C   00CE           00182     movwf TEMP_ALARM_MM1
005D   083A           00183     movfw ALARM_MM2
005E   00CF           00184     movwf TEMP_ALARM_MM2
                      00185     
005F   2???           00186     call Keyboard               ; Читаем клавиатуру
0060   183B           00187     btfsc Key1,0                ; Проверка нажатия клавиши "1",  если нажата, то переходим 
0061   2???           00188     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
0062   183C           00189     btfsc Key2,0                ; Проверка нажатия клавиши "2",  если нажата, то переходим 
0063   2???           00190     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
0064   183D           00191     btfsc Key3,0                ; Проверка нажатия клавиши "3",  если нажата, то переходим 
0065   2???           00192     call alarm_plus_blink       ; к изменению будильника, нет - тогда едем дальше
                      00193         
0066   2???           00194     call LCD_one                ;Отрисовка первой строки на дисплее             
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00195 
                      00196     ;Счет единиц секунд (0-9) - TIME_SS1 all-41
0067   0AB4           00197     incf TIME_SS1,1
0068   303A           00198     movlw 0x3A                  ; Выполняем инкремент значения единиц секунд и если
0069   0634           00199     xorwf TIME_SS1, w;          ; это значение !=10, то переходим к метке конца обработки времени 
006A   1D03           00200     btfss STATUS, 0x02          ; Если же значение секунды = 10, то обнуляем его и переходим к обработке
006B   2???           00201     goto v_nop                  ; десятков секунд 
006C   3030           00202     movlw 0x30                  ; (37)
006D   00B4           00203     movwf TIME_SS1
                      00204 
                      00205     ;Счет десятков секунд (0-5) - TIME_SS2
006E   0AB5           00206     incf TIME_SS2,1             ; Выполняем инкремент значения десятков секунд и если
006F   3036           00207     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
0070   0635           00208     xorwf TIME_SS2, w;          ; Если же значение секунды = 6, то обнуляем его и переходим к обработке
0071   1D03           00209     btfss STATUS, 0x02          ; единиц минут
0072   2???           00210     goto c_nop                  ; (31)
0073   3030           00211     movlw 0x30
0074   00B5           00212     movwf       TIME_SS2
                      00213         
                      00214     ;Счет единиц минут (0-9) - TIME_MM1
0075   0AB2           00215     incf TIME_MM1,1             ; Выполняем инкремент значения единиц минут и если
0076   303A           00216     movlw 0x3A                  ; это значение !=10, то переходим к метке конца обработки времени 
0077   0632           00217     xorwf TIME_MM1, w           ; Если же значение минуты = 10, то обнуляем его и переходим к обработке
0078   1D03           00218     btfss STATUS, 0x02          ; десятков минут
0079   2???           00219     goto x_nop                  ; (25)
007A   3030           00220     movlw 0x30
007B   00B2           00221     movwf       TIME_MM1
                      00222 
                      00223     ;Счет десятков минут (0-5) - TIME_MM2(5)
007C   0AB3           00224     incf TIME_MM2,1             ; Выполняем инкремент значения десятков минут и если
007D   3036           00225     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
007E   0633           00226     xorwf TIME_MM2, w           ; Если же значение минуты = 6, то обнуляем его и переходим к обработке
007F   1D03           00227     btfss STATUS, 0x02          ; единиц часов
0080   2???           00228     goto z_nop                  ;(19)
0081   3030           00229     movlw 0x30
0082   00B3           00230     movwf       TIME_MM2
                      00231 
                      00232     ;Счет единиц и десятков часов - TIME_НН2, TIME_НН1(17)
0083   0AB0           00233     incf TIME_HH1,1             ; Выполняем инкремент значения единиц часов и если
0084   3034           00234     movlw 0x34                  ; это значение !=4, то переходим к метке работы с единицами 
0085   0630           00235     xorwf TIME_HH1, w;          ; часов до 10.
0086   1D03           00236     btfss STATUS, 0x02
0087   2???           00237     goto ten_clock_five
0088   3032           00238     movlw 0x32                  ; Если значение десятков часов !=2, то тка же работаем
0089   0631           00239     xorwf TIME_HH2, w;          ; с форматом до 10, пройдя по метке
008A   1D03           00240     btfss STATUS, 0x02
008B   2???           00241     goto ten_clock_one
008C   3030           00242     movlw 0x30                  ; Обнуление десятков и единиц часов
008D   00B0           00243     movwf       TIME_HH1
008E   00B1           00244     movwf       TIME_HH2
008F   0AB6           00245     incf    DAY,1               ; Инкремент переменной Деня, для перехода в новый день в 00:00
0090   3007           00246     movlw       .7              ; Обнуление переменной при достижении воскресенья,
0091   0636           00247     xorwf DAY, w;               ; что бы при 00:00:00 перейти в понедельник
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0092   1D03           00248     btfss STATUS, 0x02                   
0093   2???           00249     goto two_nop                        
0094   3000           00250     movlw       .0
0095   00B6           00251     movwf       DAY
0096   2???           00252     goto end_clock
                      00253         
0097                  00254 ten_clock_five                  ;для уравновешивания тактов
Warning[211]: Extraneous arguments on the line.
0097   0000           00255     nop nop nop
0098   2???           00256     goto ten_clock
0099                  00257 ten_clock_one
0099   2???           00258     goto ten_clock              ;для уравновешивания тактов
                      00259         
009A                  00260 ten_clock
009A   303A           00261     movlw 0x3A                  ; Если значение единиц часов !=10, то 
009B   0630           00262     xorwf TIME_HH1, w;          ; переходим в конец обработки времени.
009C   1D03           00263     btfss STATUS, 0x02          ; Если значение = 10, то инкрементируем десятки часов
009D   2???           00264     goto three_nop              ; и обнуляем значение единиц
Message[305]: Using default destination of 1 (file).
009E   0AB1           00265     incf    TIME_HH2
009F   3030           00266     movlw 0x30
00A0   00B0           00267     movwf       TIME_HH1
00A1   2???           00268     goto end_clock
Warning[211]: Extraneous arguments on the line.
00A2   0000           00269 v_nop       nop nop nop nop nop nop nop         ;Колибровка работы программы 
Warning[211]: Extraneous arguments on the line.
00A3   0000           00270 c_nop       nop nop nop nop nop nop nop         ;в зависимости от условий
Warning[211]: Extraneous arguments on the line.
00A4   0000           00271 x_nop       nop nop nop nop nop nop nop 
Warning[211]: Extraneous arguments on the line.
00A5   0000           00272 z_nop       nop nop nop nop nop nop nop nop nop                 
Warning[211]: Extraneous arguments on the line.
00A6   0000           00273             nop nop nop nop nop nop nop nop nop
00A7   0000           00274 three_nop   nop                 ;для уравновешивания тактов
Warning[211]: Extraneous arguments on the line.
00A8   0000           00275 two_nop     nop nop
00A9                  00276 end_clock                       ; Метка конца работы со времинем
00A9   0064           00277     clrwdt                      ; Чистим на всякий
                      00278     
                      00279 ;Обработка будильника
00AA   3001           00280     movlw .1                    ; Проверяем, равен ли единице управляющий регистр
00AB   0650           00281     xorwf NumAlarmBit, w
00AC   1903           00282     btfsc STATUS, 0x02
00AD   2???           00283     goto delay_seven                    ; Если равен переходим сразу в функцию опроса клавиши 9         
00AE   3030           00284     movlw 0x30                  ; Если единицы секунд = 0, то
00AF   0634           00285     xorwf TIME_SS1, w;          ; переходим к проверке десятков секунд, аналогичную проверку
00B0   1903           00286     btfsc STATUS, 0x02          ; выполняем и там. Если не равно 0, то переходим по метке к
00B1   2???           00287     goto if_S_TWO_ZERO          ; концу обработки будильника
00B2   2???           00288     goto delay_six   
00B3                  00289 if_S_TWO_ZERO    
00B3   3030           00290     movlw 0x30                  
00B4   0635           00291     xorwf TIME_SS2, w;
00B5   1903           00292     btfsc STATUS, 0x02
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   2???           00293     goto if_T_AT_H2             ; Переход к проверке на равенство десятков часов и будильника
00B7   2???           00294     goto delay_five    
                      00295         
00B8                  00296 if_T_AT_H2                      ; Если значения десятков будильника и реального времени равны, то
00B8   0831           00297     movfw TIME_HH2              ; переходим к проверке единиц. Если нет, то оканчиваем проверку 
00B9   0638           00298     xorwf ALARM_HH2, w;         ; будильника.
00BA   1903           00299     btfsc STATUS, 0x02          ; Аналогичную проверку проводим и для минут.
00BB   2???           00300     goto if_T_AT_H1
00BC   2???           00301     goto delay_four
                      00302     
00BD                  00303 if_T_AT_H1                      ; Проверка единиц часа у часов и будильника
00BD   0830           00304     movfw TIME_HH1              
00BE   0637           00305     xorwf ALARM_HH1, w;         
00BF   1903           00306     btfsc STATUS, 0x02
00C0   2???           00307     goto if_T_AT_M2
00C1   2???           00308     goto delay_three
                      00309     
00C2                  00310 if_T_AT_M2                      ; Проверка десятков минут часов и будильника
00C2   0833           00311     movfw TIME_MM2              
00C3   063A           00312     xorwf ALARM_MM2, w;         
00C4   1903           00313     btfsc STATUS, 0x02
00C5   2???           00314     goto if_T_AT_M1
00C6   2???           00315     goto delay_two
                      00316     
00C7                  00317 if_T_AT_M1                      ; Проверка единиц минут часов и будильника
00C7   0832           00318     movfw TIME_MM1              
00C8   0639           00319     xorwf ALARM_MM1, w;         
00C9   1903           00320     btfsc STATUS, 0x02
00CA   2???           00321     goto inc_BA                 ; Если все значения совпали, то переходим к метке,
00CB   2???           00322     goto delay_one              ; где присваиваем управляющему регистру Blink_Alarm 
                      00323                                 ; единицу, после чего переходим в функцию
00CC                  00324 inc_BA                          ; опроса клавиатуры, для ожидания нажатия кнопки
00CC   3001           00325     movlw .1                    ; 9, для обнуления управляющих регистров, что
00CD   00C2           00326     movwf Blink_Alarm           ; отключает звуковой сигнал и моргание экрана
00CE   2???           00327     goto blinkON
                      00328     
00CF                  00329 NULL_BA_NAB                     ; Обнуление управляющих регистров
00CF   3000           00330     movlw .0
00D0   00D0           00331     movwf NumAlarmBit
00D1   00C2           00332     movwf Blink_Alarm
00D2   2???           00333     goto end_ALARM
                      00334     
00D3                  00335 blinkON
00D3   2???           00336     call Keyboard           ; Спрашиваем клавиатуру
00D4   183F           00337     btfsc Key9,0
00D5   2???           00338     goto NULL_BA_NAB        ; Если нажали кнопку 9 переходим в функцию, где обнуляем управляющие регистр
                            ы
00D6   3001           00339     movlw .1                ; Если нет, то устанавливаем NumAlarmBit=1 для непрерывного моргания и звуко
                            вого сигнала
00D7   00D0           00340     movwf NumAlarmBit       ; пока не нажата 9.
Warning[211]: Extraneous arguments on the line.
00D8   0000           00341     nop nop nop
00D9                  00342 end_ALARM                   ;Метка конца обработки будильника
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D9   2???           00343     call LCD_two            ;Отрисовка второй строки
00DA   2???           00344     call delay_one_sec      ;Задержка пока на 1сек
00DB   2???           00345     goto START              ; конец основного цикла (должен быть = 1сек)
                      00346 
                      00347     ;--------------------------------------------------------
                      00348     ;--------------------------------------------------------
                      00349     
                      00350 ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
00DC   0782           00351 DEC addwf PCL
00DD   2???           00352     goto monday
00DE   2???           00353     goto tuesday
00DF   2???           00354     goto wednesday      
00E0   2???           00355     goto thursday    
00E1   2???           00356     goto friday         
00E2   2???           00357     goto saturday               
00E3   2???           00358     goto sunday         
00E4   0008           00359     return
                      00360 ;Отрисовка дней недели
00E5                  00361 monday                      ;понедельник
00E5   304D           00362     movlw 'M'
00E6   2???           00363     call write
00E7   304F           00364     movlw 'O'
00E8   2???           00365     call write
00E9   304E           00366     movlw 'N'
00EA   2???           00367     call write
00EB   2???           00368     goto exday
00EC                  00369 tuesday                     ;вторник
00EC   3054           00370     movlw 'T'
00ED   2???           00371     call write
00EE   3055           00372     movlw 'U'
00EF   2???           00373     call write
00F0   3045           00374     movlw 'E'
00F1   2???           00375     call write
00F2   2???           00376     goto exday
00F3                  00377 wednesday                   ;среда
00F3   3057           00378     movlw 'W'
00F4   2???           00379     call write
00F5   3045           00380     movlw 'E'
00F6   2???           00381     call write
00F7   3044           00382     movlw 'D'
00F8   2???           00383     call write
00F9   2???           00384     goto exday
00FA                  00385 thursday                    ;четверг
00FA   3054           00386     movlw 'T'
00FB   2???           00387     call write
00FC   3048           00388     movlw 'H'
00FD   2???           00389     call write
00FE   3055           00390     movlw 'U'
00FF   2???           00391     call write
0100   2???           00392     goto exday
0101                  00393 friday                      ;пятница
0101   3046           00394     movlw 'F'
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0102   2???           00395     call write
0103   3052           00396     movlw 'R'
0104   2???           00397     call write
0105   3049           00398     movlw 'I'
0106   2???           00399     call write
0107   2???           00400     goto exday
0108                  00401 saturday                    ;суббота
0108   3053           00402     movlw 'S'
0109   2???           00403     call write
010A   3041           00404     movlw 'A'
010B   2???           00405     call write
010C   3054           00406     movlw 'T'
010D   2???           00407     call write
010E   2???           00408     goto exday
010F                  00409 sunday                      ;воскресенье
010F   3053           00410     movlw 'S'
0110   2???           00411     call write
0111   3055           00412     movlw 'U'
0112   2???           00413     call write
0113   304E           00414     movlw 'N'
0114   2???           00415     call write
0115                  00416 exday                       
0115   0008           00417     return
                      00418 
                      00419     ;--------------------------------------------------------
                      00420     
0116                  00421 time_plus_blink             ; Функция обработки перед переходом в другой режим
0116   3001           00422     movlw 0x1               ; Задержка, для защиты от дребезга
0117   2???           00423     call delay                          
0118   2???           00424     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
0119   08C1           00425     movf Cnt,1              ;Если нет, то циклим
011A   1D03           00426     btfss STATUS,Z                      
011B   2???           00427     goto time_plus_blink
011C   0AC3           00428     incf NumPressKey,1      ;Если клавиша отжата, то инкрементируем NumPressKey
011D   2???           00429     goto change_time        ;для выбора ячейки, в которой будут изменяться значения.
011E   0008           00430     return                  ;После чего переходим к изменению времени
                      00431     
011F                  00432 day_plus_blink              ; Функция обработки перед переходом в другой режим
011F   3001           00433     movlw 0x1               ; Задержка, для защиты от дребезга          
0120   2???           00434     call delay                          
0121   2???           00435     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
0122   08C1           00436     movf Cnt,1              ;Если нет, то циклим
0123   1D03           00437     btfss STATUS,Z                      
0124   2???           00438     goto day_plus_blink
0125   3008           00439     movlw 0x8               ;Если клавиша отжата, то установим NumPressKey = 8
0126   00C3           00440     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
0127   2???           00441     goto change_day         ;После чего переходим к изменению дня недели
0128   0008           00442     return
                      00443     
0129                  00444 alarm_plus_blink            ; Функция обработки перед переходом в другой режим
0129   3001           00445     movlw 0x1               ; Задержка, для защиты от дребезга          
012A   2???           00446     call delay                          
012B   2???           00447     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012C   08C1           00448     movf Cnt,1              ;Если нет, то циклим
012D   1D03           00449     btfss STATUS,Z                      
012E   2???           00450     goto alarm_plus_blink
012F   3009           00451     movlw 0x9               ;Если клавиша отжата, то установим NumPressKey = 9
0130   00C3           00452     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
0131   2???           00453     goto change_alarm       ;После чего переходим к изменению будильника
0132   0008           00454     return
                      00455     ;--------------------------------------------------------
                      00456     
0133                  00457 write                       ;Процедура записи байта к контроллер HD
0133   1303           00458     bcf STATUS, RP1
0134   1283           00459     bcf STATUS, RP0
0135   0086           00460     movwf PORTB
0136   1507           00461     bsf PORTC, 2
0137   3001           00462     movlw 0x01
0138   2???           00463     call delay
0139   1107           00464     bcf PORTC, 2
013A   0008           00465     return
                      00466 ; перед вызовом этой процедуры в W помещается байт, который надо записать в HD. Далее
                      00467 ;он передается в PORTB и формируется отрицательный перепад на RC2, путем предваритель-
                      00468 ;ной  его  установки  в  «1»,  удержания  этого уровня в течение некоторого времени (опреде-
                      00469 ;ляемого временем задержки delay  при  W=1) и сброса его в «0».
                      00470         
013B                  00471 delay                       ;Процедура  задержки,  время  которой  можно
013B   1303           00472     bcf   STATUS, RP1       ;регулировать, задавая число в W
013C   1283           00473     bcf   STATUS, RP0
013D   00A7           00474     movwf   fCOUNTER2
013E   01A6           00475     clrf    fCOUNTER
                      00476     
013F                  00477 BD_Loop
013F   0064           00478     clrwdt
0140   0BA6           00479     decfsz  fCOUNTER, f
0141   2???           00480     goto    BD_Loop
0142   0BA7           00481     decfsz  fCOUNTER2, f
0143   2???           00482     goto    BD_Loop
0144   0008           00483     return
                      00484 
0145                  00485 delay_one_sec               ;Колибровочные задержки
                      00486 ; Задержка 971 195 машинных циклов
0145   30A2           00487             movlw       .162
0146   00A3           00488             movwf       Reg_1
0147   30EC           00489             movlw       .236
0148   00A4           00490             movwf       Reg_2
0149   3005           00491             movlw       .5
014A   00A5           00492             movwf       Reg_3
014B   0BA3           00493             decfsz      Reg_1,F
014C   2???           00494             goto        $-1
014D   0064           00495             clrwdt
014E   0BA4           00496             decfsz      Reg_2,F
014F   2???           00497             goto        $-4
0150   0BA5           00498             decfsz      Reg_3,F
0151   2???           00499             goto        $-6
0152   0000           00500             nop
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0153   0008           00501     return   
0154                  00502 delay_one
0154   3014           00503     movlw       .20
0155   00A3           00504     movwf       Reg_1
0156   0BA3           00505     decfsz      Reg_1,F
0157   2???           00506     goto        $-1
0158   0064           00507     clrwdt
0159   0000           00508     nop
015A   2???           00509     goto end_ALARM
                      00510             
015B                  00511 delay_two
015B   3016           00512     movlw       .22
015C   00A3           00513     movwf       Reg_1
015D   0BA3           00514     decfsz      Reg_1,F
015E   2???           00515     goto        $-1
015F   0064           00516     clrwdt
0160   0000           00517     nop
0161   2???           00518     goto end_ALARM
                      00519             
0162                  00520 delay_three
0162   3018           00521     movlw       .24
0163   00A3           00522     movwf       Reg_1
0164   0BA3           00523     decfsz      Reg_1,F
0165   2???           00524     goto        $-1
0166   0064           00525     clrwdt
0167   0000           00526     nop
0168   2???           00527     goto end_ALARM
                      00528             
0169                  00529 delay_four
0169   301A           00530     movlw       .26
016A   00A3           00531     movwf       Reg_1
016B   0BA3           00532     decfsz      Reg_1,F
016C   2???           00533     goto        $-1
016D   0064           00534     clrwdt
016E   0000           00535     nop
016F   2???           00536     goto end_ALARM
                      00537             
0170                  00538 delay_five
0170   301C           00539     movlw       .28
0171   00A3           00540     movwf       Reg_1
0172   0BA3           00541     decfsz      Reg_1,F
0173   2???           00542     goto        $-1
0174   0064           00543     clrwdt
0175   0000           00544     nop
0176   2???           00545     goto end_ALARM
                      00546             
0177                  00547 delay_six
0177   301E           00548     movlw       .30
0178   00A3           00549     movwf       Reg_1
0179   0BA3           00550     decfsz      Reg_1,F
017A   2???           00551     goto        $-1
017B   0064           00552     clrwdt
017C   0000           00553     nop
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   2???           00554     goto end_ALARM
                      00555             
017E                  00556 delay_seven
017E   3021           00557     movlw       .33
017F   00A3           00558     movwf       Reg_1
0180   0BA3           00559     decfsz      Reg_1,F
0181   2???           00560     goto        $-1
0182   0064           00561     clrwdt
0183   0000           00562     nop
0184   2???           00563     goto inc_BA 
                      00564     ;==========================================
                      00565 
0185                  00566 LCD_one
                      00567 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00568 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  1-ой 
                      00569 ;строки:  ячейку  с  адресом  (10000000). Это  необходимо  для  вывода  
                      00570 ;времени и дня недели на первой строке индикатора.
0185   1007           00571     bcf PORTC, 0
0186   3080           00572     movlw b'10000000'   
0187   2???           00573     call write
0188   1407           00574     bsf PORTC,0
                      00575 ;Отрисовка первой строки
                      00576 ; Отрисовка Н2
0189   2???           00577     call paintH2
                      00578 ; Отрисовка Н1
018A   2???           00579     call paintH1
018B   303A           00580     movlw ':'
018C   2???           00581     call write
                      00582 ; Отрисовка М2
018D   2???           00583     call paintM2
                      00584 ; Отрисовка М1
018E   2???           00585     call paintM1
018F   303A           00586     movlw ':'
0190   2???           00587     call write
                      00588 ; Отрисовка S2
0191   2???           00589     call paintS2
                      00590 ; Отрисовка S1
0192   2???           00591     call paintS1
0193   3020           00592     movlw ' '
0194   2???           00593     call write
0195   3020           00594     movlw ' '
0196   2???           00595     call write
                      00596 ;Отрисовка дня недели
0197   2???           00597     call printDay
                      00598 
0198   0008           00599     return
                      00600     
                      00601     ;==========================================
                      00602     
                      00603 ; Собственно механизм последовательного моргания при настройке времени
0199                  00604 paintH2                         ;Моргание десятков часов
0199   3001           00605     movlw 0x1                   ;Если NumPressKey = 1, то включаем моргание
019A   0643           00606     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019B   1D03           00607     btfss STATUS, 0x02          ;включае один из методов, отвечающих
019C   2???           00608     goto blink_on_H2            ;за отрисовку. Один отрисовывает значение времени,
019D   0AC0           00609     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
019E   1C40           00610     btfss Blink, 0              ;Если NumPressKey != 1, то проверяем следующую функцию
019F   2???           00611     goto blink_on_H2            ;и отрисовываем постоянно значение
01A0   2???           00612     goto blink_off_H2
01A1                  00613 blink_off_H2
01A1   3020           00614     movlw ' '
01A2   2???           00615     call write
01A3   2???           00616     goto return_H2
01A4                  00617 blink_on_H2
01A4   0831           00618     movfw TIME_HH2
01A5   2???           00619     call write
01A6                  00620 return_H2    
01A6   0008           00621     return
                      00622     ;-----------
01A7                  00623 paintH1                         ;Моргание единиц часов
01A7   3002           00624     movlw 0x2                   ;Если NumPressKey = 2, то включаем моргание
01A8   0643           00625     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01A9   1D03           00626     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01AA   2???           00627     goto blink_on_H1            ;за отрисовку. Один отрисовывает значение времени,
01AB   0AC0           00628     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01AC   1C40           00629     btfss Blink, 0              ;Если NumPressKey != 2, то проверяем следующую функцию
01AD   2???           00630     goto blink_on_H1            ;и отрисовываем постоянно значение
01AE   2???           00631     goto blink_off_H1
01AF                  00632 blink_off_H1
01AF   3020           00633     movlw ' '
01B0   2???           00634     call write
01B1   2???           00635     goto return_H1
01B2                  00636 blink_on_H1
01B2   0830           00637     movfw TIME_HH1
01B3   2???           00638     call write
01B4                  00639 return_H1
01B4   0008           00640     return
                      00641     ;------------
01B5                  00642 paintM2                         ;Моргание десятков минут
01B5   3003           00643     movlw 0x3                   ;Если NumPressKey = 3, то включаем моргание
01B6   0643           00644     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01B7   1D03           00645     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01B8   2???           00646     goto blink_on_M2            ;за отрисовку. Один отрисовывает значение времени,
01B9   0AC0           00647     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01BA   1C40           00648     btfss Blink, 0              ;Если NumPressKey != 3, то проверяем следующую функцию
01BB   2???           00649     goto blink_on_M2            ;и отрисовываем постоянно значение
01BC   2???           00650     goto blink_off_M2
01BD                  00651 blink_off_M2
01BD   3020           00652     movlw ' '
01BE   2???           00653     call write
01BF   2???           00654     goto return_M2
01C0                  00655 blink_on_M2
01C0   0833           00656     movfw TIME_MM2
01C1   2???           00657     call write
01C2                  00658 return_M2
01C2   0008           00659     return
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00660     ;------------
01C3                  00661 paintM1                         ;Моргание единиц минут
01C3   3004           00662     movlw 0x4                   ;Если NumPressKey = 4, то включаем моргание
01C4   0643           00663     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01C5   1D03           00664     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01C6   2???           00665     goto blink_on_M1            ;за отрисовку. Один отрисовывает значение времени,
01C7   0AC0           00666     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01C8   1C40           00667     btfss Blink, 0              ;Если NumPressKey != 4, то проверяем следующую функцию
01C9   2???           00668     goto blink_on_M1            ;и отрисовываем постоянно значение
01CA   2???           00669     goto blink_off_M1
01CB                  00670 blink_off_M1
01CB   3020           00671     movlw ' '
01CC   2???           00672     call write
01CD   2???           00673     goto return_M1
01CE                  00674 blink_on_M1
01CE   0832           00675     movfw TIME_MM1
01CF   2???           00676     call write
01D0                  00677 return_M1
01D0   0008           00678     return
                      00679     ;------------
01D1                  00680 paintS2                         ;Моргание десятков секунд
01D1   3005           00681     movlw 0x5                   ;Если NumPressKey = 5, то включаем моргание
01D2   0643           00682     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01D3   1D03           00683     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01D4   2???           00684     goto blink_on_S2            ;за отрисовку. Один отрисовывает значение времени,
01D5   0AC0           00685     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01D6   1C40           00686     btfss Blink, 0              ;Если NumPressKey != 5, то проверяем следующую функцию
01D7   2???           00687     goto blink_on_S2            ;и отрисовываем постоянно значение
01D8   2???           00688     goto blink_off_S2
01D9                  00689 blink_off_S2
01D9   3020           00690     movlw ' '
01DA   2???           00691     call write
01DB   2???           00692     goto return_S2
01DC                  00693 blink_on_S2
01DC   0835           00694     movfw TIME_SS2
01DD   2???           00695     call write
01DE                  00696 return_S2
01DE   0008           00697     return
                      00698     ;------------
01DF                  00699 paintS1                         ;Моргание единиц секунд
01DF   3006           00700     movlw 0x6                   ;Если NumPressKey = 6, то включаем моргание
01E0   0643           00701     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01E1   1D03           00702     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01E2   2???           00703     goto blink_on_S1            ;за отрисовку. Один отрисовывает значение времени,
01E3   0AC0           00704     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01E4   1C40           00705     btfss Blink, 0              ;Если NumPressKey != 6, то проверяем следующую функцию
01E5   2???           00706     goto blink_on_S1            ;и отрисовываем постоянно значение
01E6   2???           00707     goto blink_off_S1
01E7                  00708 blink_off_S1
01E7   3020           00709     movlw ' '
01E8   2???           00710     call write
01E9   2???           00711     goto return_S1
01EA                  00712 blink_on_S1
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EA   0834           00713     movfw TIME_SS1
01EB   2???           00714     call write
01EC                  00715 return_S1
01EC   0008           00716     return
                      00717     ;-----------
01ED                  00718 printDay                        ;Моргание дня недели
01ED   3008           00719     movlw 0x8                   ;Если NumPressKey = 8, то включаем моргание
01EE   0643           00720     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01EF   1D03           00721     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01F0   2???           00722     goto blink_on_day           ;за отрисовку. Один отрисовывает значение дня,
01F1   0AC0           00723     incf Blink,1                ;а другой символы пробела. Так создается эффект моргания.
01F2   1C40           00724     btfss Blink, 0              ;Если NumPressKey != 8, то проверяем следующую функцию
01F3   2???           00725     goto blink_on_day           ;и отрисовываем постоянно значение
01F4   2???           00726     goto blink_off_day
01F5                  00727 blink_off_day
01F5   3020           00728     movlw ' '
01F6   2???           00729     call write
01F7   3020           00730     movlw ' '
01F8   2???           00731     call write
01F9   3020           00732     movlw ' '
01FA   2???           00733     call write
01FB   2???           00734     goto return_DAY
01FC                  00735 blink_on_day
01FC   0836           00736     movfw DAY                           
01FD   2???           00737     call DEC
01FE                  00738 return_DAY
01FE   0008           00739     return
                      00740     ;==========================================   
                      00741     
01FF                  00742 LCD_two
01FF   1007           00743     bcf PORTC, 0
0200   30C4           00744     movlw b'11000100'
0201   2???           00745     call write
                      00746 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00747 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  2-ой
                      00748 ;строки:  ячейку  с  адресом  (11000100). Это  необходимо  для  вывода  фразы  «ALARM» и будильника на в
                            торой строке индикатора.
0202   1407           00749     bsf PORTC,0                 ; установка RC0=1, для последующей передачи
                      00750                                 ;кодов символов второй строки на дисплей. Об-
                      00751                                 ;ратите внимание на то, что нигде не требуется
                      00752                                 ;изменения  банков  памяти: т.к. все регистры, с
                      00753                                 ;которыми работает ПО, находятся в 0-ом банке.
0203   2???           00754     call paint_ALARM            ;Вызов метода отрисовки
                      00755     
0204   3020           00756     movlw ' '
0205   2???           00757     call write
0206   3020           00758     movlw ' '
0207   2???           00759     call write
                      00760     
0208   2???           00761     call paintH2_A              ;Вызов метода отрисовки
0209   2???           00762     call paintH1_A              ;Вызов метода отрисовки
020A   303A           00763     movlw ':'
020B   2???           00764     call write
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020C   2???           00765     call paintM2_A              ;Вызов метода отрисовки
020D   2???           00766     call paintM1_A              ;Вызов метода отрисовки
020E   0008           00767     return
                      00768     ;------------------------------------------
020F                  00769 paintH2_A                       ;Моргание десятков часов будильника
020F   3009           00770     movlw 0x9                   ;Если NumPressKey = 9, то включаем моргание
0210   0643           00771     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
0211   1D03           00772     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0212   2???           00773     goto blink_on_H2_A          ;за отрисовку. Один отрисовывает значение времени,
0213   0AC0           00774     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0214   1C40           00775     btfss Blink, 0              ;Если NumPressKey != 9, то проверяем следующую функцию
0215   2???           00776     goto blink_on_H2_A          ;и отрисовываем постоянно значение
0216   2???           00777     goto blink_off_H2_A
0217                  00778 blink_off_H2_A
0217   3020           00779     movlw ' '
0218   2???           00780     call write
0219   2???           00781     goto return_A_H2
021A                  00782 blink_on_H2_A
021A   0838           00783     movfw ALARM_HH2
021B   2???           00784     call write
021C                  00785 return_A_H2
021C   0008           00786     return
                      00787     ;-----------
021D                  00788 paintH1_A                       ;Моргание единиц часов будильника
021D   300A           00789     movlw 0xa                   ;Если NumPressKey = 10, то включаем моргание
021E   0643           00790     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
021F   1D03           00791     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0220   2???           00792     goto blink_on_H1_A          ;за отрисовку. Один отрисовывает значение времени,
0221   0AC0           00793     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0222   1C40           00794     btfss Blink, 0              ;Если NumPressKey != 10, то проверяем следующую функцию
0223   2???           00795     goto blink_on_H1_A          ;и отрисовываем постоянно значение
0224   2???           00796     goto blink_off_H1_A
0225                  00797 blink_off_H1_A
0225   3020           00798     movlw ' '
0226   2???           00799     call write
0227   2???           00800     goto return_A_H1
0228                  00801 blink_on_H1_A
0228   0837           00802     movfw ALARM_HH1
0229   2???           00803     call write
022A                  00804 return_A_H1
022A   0008           00805     return
                      00806     ;------------
022B                  00807 paintM2_A                       ;Моргание десятков минут будильника
022B   300B           00808     movlw 0xb                   ;Если NumPressKey = 11, то включаем моргание
022C   0643           00809     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
022D   1D03           00810     btfss STATUS, 0x02          ;включае один из методов, отвечающих
022E   2???           00811     goto blink_on_M2_A          ;за отрисовку. Один отрисовывает значение времени,
022F   0AC0           00812     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0230   1C40           00813     btfss Blink, 0              ;Если NumPressKey != 11, то проверяем следующую функцию
0231   2???           00814     goto blink_on_M2_A          ;и отрисовываем постоянно значение
0232   2???           00815     goto blink_off_M2_A
0233                  00816 blink_off_M2_A
0233   3020           00817     movlw ' '
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0234   2???           00818     call write
0235   2???           00819     goto return_A_M2
0236                  00820 blink_on_M2_A
0236   083A           00821     movfw ALARM_MM2
0237   2???           00822     call write
0238                  00823 return_A_M2
0238   0008           00824     return
                      00825     ;------------
0239                  00826 paintM1_A                       ;Моргание единиц минут будильника
0239   300C           00827     movlw 0xc                   ;Если NumPressKey = 12, то включаем моргание
023A   0643           00828     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
023B   1D03           00829     btfss STATUS, 0x02          ;включае один из методов, отвечающих
023C   2???           00830     goto blink_on_M1_A          ;за отрисовку. Один отрисовывает значение времени,
023D   0AC0           00831     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
023E   1C40           00832     btfss Blink, 0              ;Если NumPressKey != 12, то проверяем следующую функцию
023F   2???           00833     goto blink_on_M1_A          ;и отрисовываем постоянно значение
0240   2???           00834     goto blink_off_M1_A
0241                  00835 blink_off_M1_A
0241   3020           00836     movlw ' '
0242   2???           00837     call write
0243   2???           00838     goto return_A_M1
0244                  00839 blink_on_M1_A
0244   0839           00840     movfw ALARM_MM1
0245   2???           00841     call write
0246                  00842 return_A_M1
0246   0008           00843     return
                      00844     ;----------
0247                  00845 paint_ALARM                     ;Моргание надписи будильника
0247   3001           00846     movlw .1                    ;Если Blink_Alarm = 1, то включаем моргание
0248   0642           00847     xorwf Blink_Alarm, w;       ;В зависимости от регистра Blink поочередно
0249   1D03           00848     btfss STATUS, 0x02          ;включае один из методов, отвечающих
024A   2???           00849     goto blink_on_ALARM_nop             ;за отрисовку. Один отрисовывает значение времени,
024B   0AC0           00850     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
024C   1C40           00851     btfss Blink, 0              ;Если Blink_Alarm != 1, то проверяем следующую функцию
024D   2???           00852     goto blink_on_ALARM         ;и отрисовываем постоянно значение
024E   2???           00853         goto blink_off_ALARM
024F                  00854 blink_off_ALARM
024F   1088           00855     bcf PORTD,0x01
0250   3020           00856     movlw ' '
0251   2???           00857     call write
0252   3020           00858     movlw ' '
0253   2???           00859     call write
0254   3020           00860     movlw ' '
0255   2???           00861     call write
0256   3020           00862     movlw ' '
0257   2???           00863     call write
0258   3020           00864     movlw ' '
0259   2???           00865     call write
025A   2???           00866     goto return_ALARM
Warning[211]: Extraneous arguments on the line.
025B   0000           00867 blink_on_ALARM_nop nop nop nop
025C                  00868 blink_on_ALARM
025C   1488           00869     bsf PORTD,0x01
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025D   3041           00870     movlw 'A'
025E   2???           00871     call write
025F   304C           00872     movlw 'L'
0260   2???           00873     call write
0261   3041           00874     movlw 'A'
0262   2???           00875     call write
0263   3052           00876     movlw 'R'
0264   2???           00877     call write
0265   304D           00878     movlw 'M'
0266   2???           00879     call write
0267                  00880 return_ALARM
0267   0008           00881     return
                      00882     ;==========================================
                      00883     
0268                  00884 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
0268   1283           00885     bank0                   ; переход в нулевой банк, для нормального вызова функции из тела программы
0269   1303           00886     bcf STATUS, RP1
026A   01BB           00887     clrf Key1               ; обнуление кодов клавиш
026B   01BC           00888     clrf Key2 
026C   01BD           00889     clrf Key3
026D   01BE           00890     clrf Key4  
026E   01BF           00891     clrf Key9  
026F   01C1           00892     clrf Cnt  
0270                  00893 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
0270   1405           00894     bsf PORTA,0             ; подача питания
0271   1085           00895     bcf PORTA,1
0272   1105           00896     bcf PORTA,2 
                      00897     ;movlw .24
                      00898     ;call small_delay
0273   0805           00899     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0274   3938           00900     andlw 0x38
0275   1903           00901     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
0276   2???           00902     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00903     ;movlw .250
                      00904     ;call small_delay  
0277   1985           00905     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
0278   0ABB           00906     incf Key1,F
0279   1A05           00907     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
027A   0ABE           00908     incf Key4,F
                      00909     
027B                  00910 col2                        ; сканируем второй столбец, где нам нужна клавиша 2
027B   1005           00911     bcf PORTA,0             ; подача питания
027C   1485           00912     bsf PORTA,1
027D   1105           00913     bcf PORTA,2 
                      00914     ;movlw .24
                      00915     ;sd
027E   0805           00916     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
027F   3938           00917     andlw 0x38
0280   1903           00918     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0281   2???           00919     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ку
                      00920     ;movlw .250
                      00921     ;sd
0282   1985           00922     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0283   0ABC           00923     incf Key2,F
0284                  00924 col3                        ; сканируем третий столбец, где нам нужна клавиша 3
0284   1005           00925     bcf PORTA,0             ; подача питания
0285   1085           00926     bcf PORTA,1
0286   1505           00927     bsf PORTA,2
                      00928     ;movlw .24
                      00929     ;sd
0287   0805           00930     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0288   3938           00931     andlw 0x38
0289   1903           00932     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
028A   2???           00933     goto nop_end_key        ; если Z=0, то пропускаем строку
                      00934     ;movlw .250
                      00935     ;sd
028B   1985           00936     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
028C   0ABD           00937     incf Key3,F
028D   1A85           00938     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
028E   0ABF           00939     incf Key9,F
028F   2???           00940     goto end_keyb
                      00941  
Warning[211]: Extraneous arguments on the line.
0290   0000           00942 nop_end_key nop nop nop nop nop nop
0291                  00943 end_keyb                    ;Метод, для записи в Cnt = 1, если нажата клавиша (нужен для преверки, отпущ
                            ена ли клавиша)
0291   183B           00944     btfsc Key1,0
0292   0AC1           00945     incf Cnt,F
0293   183C           00946     btfsc Key2,0
0294   0AC1           00947     incf Cnt,F
0295   183D           00948     btfsc Key3,0
0296   0AC1           00949     incf Cnt,F
0297   183E           00950     btfsc Key4,0
0298   0AC1           00951     incf Cnt,F
0299   183F           00952     btfsc Key9,0
029A   0AC1           00953     incf Cnt,F
029B   0008           00954     return                  ; выход из функции
                      00955     
                      00956 ;==============================================
                      00957 
029C                  00958 change_time                 ; функция изменения времени
029C   2???           00959     call Keyboard           ; спрашиваем клавиатуру
029D   183B           00960     btfsc Key1,0
029E   2???           00961     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
029F   183C           00962     btfsc Key2,0
02A0   2???           00963     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
02A1   183D           00964     btfsc Key3,0
02A2   2???           00965     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A3   183E           00966     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
02A4   2???           00967     goto change_HMS
                      00968     
02A5   2???           00969     call LCD_one            ; Отрисовка первой строки
02A6   2???           00970     call delay_one_sec          ; задержка пока на 1сек
02A7   2???           00971     goto change_time
                      00972     
                      00973     ;----------------------------------------
02A8                  00974 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
02A8   3001           00975     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
02A9   2???           00976     call delay                          
02AA   2???           00977     call Keyboard               ;опрос клавиатуры что бы выяснить
02AB   08C1           00978     movf Cnt,1                  ;отжата клавиша или нет
02AC   1D03           00979     btfss STATUS,Z              ;если нет, то циклим
02AD   2???           00980     goto correct_T_plus             
02AE   3001           00981     movlw 0x1                   ; если NumPressKey = 1, то вызываем
02AF   0643           00982     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
02B0   1903           00983     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B1   2???           00984     call correct_H2
                      00985     
02B2   3002           00986     movlw 0x2                   ; если NumPressKey = 2, то вызываем
02B3   0643           00987     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
02B4   1903           00988     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B5   2???           00989     call correct_H1
                      00990 
02B6   3003           00991     movlw 0x3                   ; если NumPressKey = 3, то вызываем
02B7   0643           00992     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
02B8   1903           00993     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B9   2???           00994     call correct_M2
                      00995     
02BA   3004           00996     movlw 0x4                   ; если NumPressKey = 4, то вызываем
02BB   0643           00997     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
02BC   1903           00998     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02BD   2???           00999     call correct_M1
                      01000     
02BE   3005           01001     movlw 0x5                   ; если NumPressKey = 5, то вызываем
02BF   0643           01002     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
02C0   1903           01003     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02C1   2???           01004     call correct_S2
                      01005     
02C2   3006           01006     movlw 0x6                   ; если NumPressKey = 6, то вызываем
02C3   0643           01007     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
02C4   1903           01008     btfsc STATUS, 0x02          ; если нет, выходим из функции
02C5   2???           01009     call correct_S1
                      01010     
02C6   0008           01011     return
                      01012     
                      01013     ;----------------------------------------
                      01014     
02C7                  01015 correct_H2                      ; функцию коррекции переменной H2.
02C7   0AB1           01016     incf TIME_HH2,1             ; инкремент переменной Н2
02C8   3033           01017     movlw 0x33                  ; Если !=3, переходим обратно в функцию
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C9   0631           01018     xorwf TIME_HH2, w           ; correct_T_plus и проверяем там следующее условие
02CA   1D03           01019     btfss STATUS, 0x02
02CB   2???           01020     goto return_COR_H2
02CC   3030           01021     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
02CD   00B1           01022     movwf       TIME_HH2
02CE                  01023 return_COR_H2
02CE   0008           01024     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      01025     
02CF                  01026 correct_H1                      ; функцию коррекции переменной H1.
02CF   0AB0           01027     incf TIME_HH1,1             ; инкремент переменной Н1
02D0   3032           01028     movlw 0x32                  ; Если = 2, переходим в функцию three_H1, которая служит для 
02D1   0631           01029     xorwf TIME_HH2, w           ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01030                                 ; ограничить единицы при десятках = 2   
02D2   1903           01031     btfsc STATUS, 0x02
02D3   2???           01032     goto three_H1                       
02D4   303A           01033     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
02D5   0630           01034 t1  xorwf TIME_HH1, w   
02D6   1D03           01035     btfss STATUS, 0x02
02D7   2???           01036     goto return_COR_H1
02D8   3030           01037     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
02D9   00B0           01038     movwf       TIME_HH1
02DA                  01039 return_COR_H1
02DA   0008           01040     return
                      01041     
02DB                  01042 three_H1
02DB   3034           01043     movlw 0x34                  ; предел для обнуления при переменной = 2
02DC   2???           01044     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      01045     
02DD                  01046 correct_M2                      ; функцию коррекции переменной M2.
02DD   0AB3           01047     incf TIME_MM2,1
02DE   3036           01048     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
02DF   0633           01049     xorwf TIME_MM2, w;
02E0   1D03           01050     btfss STATUS, 0x02
02E1   2???           01051     goto return_COR_M2
02E2   3030           01052     movlw       0x30
02E3   00B3           01053     movwf       TIME_MM2
02E4                  01054 return_COR_M2
02E4   0008           01055     return
                      01056     
02E5                  01057 correct_M1                      ; функцию коррекции переменной M1.
02E5   0AB2           01058     incf TIME_MM1,1
02E6   303A           01059     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02E7   0632           01060     xorwf TIME_MM1, w;
02E8   1D03           01061     btfss STATUS, 0x02
02E9   2???           01062     goto return_COR_M1
02EA   3030           01063     movlw       0x30
02EB   00B2           01064     movwf       TIME_MM1
02EC                  01065 return_COR_M1
02EC   0008           01066     return
                      01067     
02ED                  01068 correct_S2                      ; функцию коррекции переменной S2.
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02ED   0AB5           01069     incf TIME_SS2,1
02EE   3036           01070     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
02EF   0635           01071     xorwf TIME_SS2, w;
02F0   1D03           01072     btfss STATUS, 0x02
02F1   2???           01073     goto return_COR_S2
02F2   3030           01074     movlw       0x30
02F3   00B5           01075     movwf       TIME_SS2
02F4                  01076 return_COR_S2
02F4   0008           01077     return
                      01078     
02F5                  01079 correct_S1                      ; функцию коррекции переменной S1.
02F5   0AB4           01080     incf TIME_SS1,1
02F6   303A           01081     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02F7   0634           01082     xorwf TIME_SS1, w;
02F8   1D03           01083     btfss STATUS, 0x02
02F9   2???           01084     goto return_COR_S1
02FA   3030           01085     movlw       0x30
02FB   00B4           01086     movwf       TIME_SS1
02FC                  01087 return_COR_S1
02FC   0008           01088     return
                      01089     
                      01090     ;----------------------------------------
                      01091     
02FD                  01092 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
02FD   3001           01093     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
02FE   2???           01094     call delay                          
02FF   2???           01095     call Keyboard               ;опрос клавиатуры что бы выяснить
0300   08C1           01096     movf Cnt,1                  ;отжата клавиша или нет
0301   1D03           01097     btfss STATUS,Z              ;если нет, то циклим
0302   2???           01098     goto correct_T_minus                  
0303   3001           01099     movlw 0x1                   ; если NumPressKey = 1, то вызываем
0304   0643           01100     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0305   1903           01101     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0306   2???           01102     call correct_H2_minus
                      01103     
0307   3002           01104     movlw 0x2                   ; если NumPressKey = 2, то вызываем
0308   0643           01105     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0309   1903           01106     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
030A   2???           01107     call correct_H1_minus
                      01108 
030B   3003           01109     movlw 0x3                   ; если NumPressKey = 3, то вызываем
030C   0643           01110     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
030D   1903           01111     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
030E   2???           01112     call correct_M2_minus
                      01113     
030F   3004           01114     movlw 0x4                   ; если NumPressKey = 4, то вызываем
0310   0643           01115     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0311   1903           01116     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0312   2???           01117     call correct_M1_minus
                      01118     
0313   3005           01119     movlw 0x5                   ; если NumPressKey = 5, то вызываем
0314   0643           01120     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0315   1903           01121     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0316   2???           01122     call correct_S2_minus
                      01123     
0317   3006           01124     movlw 0x6                   ; если NumPressKey = 6, то вызываем
0318   0643           01125     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0319   1903           01126     btfsc STATUS, 0x02          ; если нет, выходим из функции
031A   2???           01127     call correct_S1_minus
                      01128     
031B   0008           01129     return
                      01130     ;----------------------------------------
                      01131     
031C                  01132 correct_H2_minus                ; функцию коррекции переменной H2.
031C   03B1           01133     decf TIME_HH2,1             ; декремент переменной Н2
031D   302F           01134     movlw 0x2f                  ; Если !=2f, переходим обратно в функцию
031E   0631           01135     xorwf TIME_HH2, w           ; correct_T_ и проверяем там следующее условие
031F   1D03           01136     btfss STATUS, 0x02
0320   2???           01137     goto return_COR_H2_MIN
0321   3032           01138     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
0322   00B1           01139     movwf       TIME_HH2
0323                  01140 return_COR_H2_MIN
0323   0008           01141     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01142     
0324                  01143 correct_H1_minus                ; функцию коррекции переменной H1.
0324   03B0           01144     decf TIME_HH1,1             ; декремент переменной Н1
0325   302F           01145     movlw 0x2f                  ; Если != 2f, переходим обратно в функцию 
0326   0630           01146     xorwf TIME_HH1, w           ; correct_T_ и проверяем там следующее условие
                      01147                                         
0327   1D03           01148     btfss STATUS, 0x02
0328   2???           01149     goto return_COR_H1_MIN              
0329   3032           01150     movlw 0x32                  ; если переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
032A   0631           01151     xorwf TIME_HH2, w   
032B   1903           01152     btfsc STATUS, 0x02
032C   2???           01153     goto three_H1_minus
032D   3039           01154     movlw       0x39            ; если переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
032E   00B0           01155 t2  movwf       TIME_HH1
032F                  01156 return_COR_H1_MIN
032F   0008           01157     return
                      01158     
0330                  01159 three_H1_minus
0330   3033           01160     movlw 0x33                  ; значение для присваивания при Н2 = 2.
0331   2???           01161     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      01162     
0332                  01163 correct_M2_minus                ; функцию коррекции переменной M2.
0332   03B3           01164     decf TIME_MM2,1
0333   302F           01165     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0334   0633           01166     xorwf TIME_MM2, w;
0335   1D03           01167     btfss STATUS, 0x02
0336   2???           01168     goto return_COR_M2_MIN
0337   3035           01169     movlw       0x35
0338   00B3           01170     movwf       TIME_MM2
0339                  01171 return_COR_M2_MIN
0339   0008           01172     return
                      01173     
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033A                  01174 correct_M1_minus                ; функцию коррекции переменной M1.
033A   03B2           01175     decf TIME_MM1,1
033B   302F           01176     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
033C   0632           01177     xorwf TIME_MM1, w;
033D   1D03           01178     btfss STATUS, 0x02
033E   2???           01179     goto return_COR_M1_MIN
033F   3039           01180     movlw       0x39
0340   00B2           01181     movwf       TIME_MM1
0341                  01182 return_COR_M1_MIN
0341   0008           01183     return
                      01184     
0342                  01185 correct_S2_minus                ; функцию коррекции переменной S2.
0342   03B5           01186     decf TIME_SS2,1
0343   302F           01187     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0344   0635           01188     xorwf TIME_SS2, w;
0345   1D03           01189     btfss STATUS, 0x02
0346   2???           01190     goto return_COR_S2_MIN
0347   3035           01191     movlw       0x35
0348   00B5           01192     movwf       TIME_SS2
0349                  01193 return_COR_S2_MIN
0349   0008           01194     return
                      01195     
034A                  01196 correct_S1_minus                ; функцию коррекции переменной S1.
034A   03B4           01197     decf TIME_SS1,1
034B   302F           01198     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
034C   0634           01199     xorwf TIME_SS1, w;
034D   1D03           01200     btfss STATUS, 0x02
034E   2???           01201     goto return_COR_S1_MIN
034F   3039           01202     movlw       0x39
0350   00B4           01203     movwf       TIME_SS1
0351                  01204 return_COR_S1_MIN
0351   0008           01205     return
                      01206     
                      01207     ;==============================================
                      01208     
0352                  01209 save_T                          ; функция проверки и сохранения времени
0352   3001           01210     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
0353   2???           01211     call delay                  
0354   2???           01212     call Keyboard               ;опрос клавиатуры что бы выяснить
0355   08C1           01213     movf Cnt,1                  ;отжата клавиша или нет
0356   1D03           01214     btfss STATUS,Z              ;если нет, то циклим
0357   2???           01215     goto save_T
0358   3006           01216     movlw 0x6                   ; если происходит переполнение NumPressKey
0359   0643           01217     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
035A   1903           01218     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
035B   2???           01219     goto START                  ; в постоянные
035C   0AC3           01220     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
035D   2???           01221     goto change_time            ; его и возвращаемся в функцию изменения времени
                      01222     
035E                  01223 change_HMS
035E   3001           01224     movlw 0x1                           
035F   2???           01225     call delay                  ;Задержка для борьбы с дребезгом контактов
0360   2???           01226     call Keyboard               ;опрос клавиатуры что бы выяснить
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0361   08C1           01227     movf Cnt,1                  ;отжата клавиша или нет
0362   1D03           01228     btfss STATUS,Z              ;если нет, то циклим
0363   2???           01229     goto change_HMS
0364   0846           01230     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
0365   00B1           01231     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0366   0845           01232     movfw TEMP_TIME_HH1         ; значение)
0367   00B0           01233     movwf TIME_HH1
0368   0848           01234     movfw TEMP_TIME_MM2         
0369   00B3           01235     movwf TIME_MM2
036A   0847           01236     movfw TEMP_TIME_MM1         
036B   00B2           01237     movwf TIME_MM1
036C   084A           01238     movfw TEMP_TIME_SS2         
036D   00B5           01239     movwf TIME_SS2
036E   0849           01240     movfw TEMP_TIME_SS1         
036F   00B4           01241     movwf TIME_SS1
0370   2???           01242     goto START                  ; возврат в основной цикл
                      01243     
                      01244     ;==============================================
                      01245     ;==============================================
                      01246     
0371                  01247 change_day                      ; функция изменения дня недели
0371   2???           01248     call Keyboard
0372   183B           01249     btfsc Key1,0
0373   2???           01250     goto plus_day_ch            ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбра
                            нное число (inc)
0374   183C           01251     btfsc Key2,0
0375   2???           01252     goto minus_day_ch           ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбра
                            нное число (dec)
0376   183D           01253     btfsc Key3,0                ; если нажали кнопку 3 переходим в функцию, которая сохраняет результат
0377   2???           01254     goto save_end_day
0378   183E           01255     btfsc Key4,0                ; если нажали кнопку 4 переходим в функцию, которая отменяет все изменен
                            ия
0379   2???           01256     goto save_day_ch
                      01257     
037A   2???           01258     call LCD_one                ; Отрисовка первой строки на дисплее
037B   2???           01259     call delay_one_sec          ; задержка пока на 1сек
037C   2???           01260     goto change_day
                      01261     
037D                  01262 plus_day_ch
037D   3001           01263     movlw 0x1                           
037E   2???           01264     call delay                  ;Задержка для борьбы с дребезгом контактов
037F   2???           01265     call Keyboard               ;опрос клавиатуры что бы выяснить
0380   08C1           01266     movf Cnt,1                  ;отжата клавиша или нет
0381   1D03           01267     btfss STATUS,Z              ;если нет, то циклим
0382   2???           01268     goto plus_day_ch
0383   0AB6           01269     incf DAY,1                  ;Инкремент регистра День
0384   3007           01270     movlw .7                    ;Если день равен 7, то обнуляем
0385   0636           01271     xorwf DAY, w;               ;после чего возвращаемся в функцию изменения дня
0386   1D03           01272     btfss STATUS, 0x02          ;Если не равен 7, то просто возвращаемся в функцию
0387   2???           01273     goto change_day                     
0388   3000           01274     movlw .0
0389   00B6           01275     movwf DAY
038A   2???           01276     goto change_day
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01277     
038B                  01278 minus_day_ch
038B   3001           01279     movlw 0x1                           
038C   2???           01280     call delay                  ;Задержка для борьбы с дребезгом контактов
038D   2???           01281     call Keyboard               ;опрос клавиатуры что бы выяснить
038E   08C1           01282     movf Cnt,1                  ;отжата клавиша или нет
038F   1D03           01283     btfss STATUS,Z              ;если нет, то циклим
0390   2???           01284     goto minus_day_ch
0391   03B6           01285     decf DAY,1
0392   30FF           01286     movlw .255                  ;Декремент регистра День
0393   0636           01287     xorwf DAY, w;               ;Если день равен 255, то присваиваем регистру 6
0394   1D03           01288     btfss STATUS, 0x02          ;после чего возвращаемся в функцию изменения дня
0395   2???           01289     goto change_day             ;Если не равен 255, то просто возвращаемся в функцию
0396   3006           01290     movlw .6
0397   00B6           01291     movwf DAY
0398   2???           01292     goto change_day
                      01293     
0399                  01294 save_day_ch
0399   3001           01295     movlw 0x1                           
039A   2???           01296     call delay                  ;Задержка для борьбы с дребезгом контактов
039B   2???           01297     call Keyboard               ;опрос клавиатуры что бы выяснить
039C   08C1           01298     movf Cnt,1                  ;отжата клавиша или нет
039D   1D03           01299     btfss STATUS,Z              ;если нет, то циклим
039E   2???           01300     goto save_day_ch
039F   084B           01301     movfw TEMP_DAY              ;Присваиваем значение временного регистра постоянному
03A0   00B6           01302     movwf DAY                   ;что бы отменить изменения и выходим в основной цикл
03A1   2???           01303     goto START
                      01304     
03A2                  01305 save_end_day
03A2   3001           01306     movlw 0x1                           
03A3   2???           01307     call delay                  ;Задержка для борьбы с дребезгом контактов
03A4   2???           01308     call Keyboard               ;опрос клавиатуры что бы выяснить
03A5   08C1           01309     movf Cnt,1                  ;отжата клавиша или нет
03A6   1D03           01310     btfss STATUS,Z              ;если нет, то циклим
03A7   2???           01311     goto save_end_day
03A8   2???           01312     goto START                  ;Возвращаемся в основной цикл
                      01313     ;==============================================
                      01314     ;==============================================
03A9                  01315 change_alarm                    ; функция изменения времени будильника
03A9   2???           01316     call Keyboard               ; спрашиваем клавиатуру
03AA   183B           01317     btfsc Key1,0
03AB   2???           01318     call correct_A_plus         ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбра
                            нное число (inc)
03AC   183C           01319     btfsc Key2,0
03AD   2???           01320     call correct_A_minus        ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбра
                            нное число (dec)
03AE   183D           01321     btfsc Key3,0
03AF   2???           01322     goto save_A                 ; переход к другой цифре путем инкремента NPK, при переполнения переменн
                            ой происходит сохранение результата и выход в основной цикл
03B0   183E           01323     btfsc Key4,0                ; выход из настройки времени в основной цикл без сохранения результата
03B1   2???           01324     goto change_AHMS
                      01325     
03B2   2???           01326     call LCD_two                ; отрисовка второй строки
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01327     
03B3   2???           01328     call delay_one_sec          ; задержка пока на 1сек
03B4   2???           01329     goto change_alarm
                      01330     
                      01331     ;----------------------------------------
                      01332     
03B5                  01333 correct_A_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
03B5   3001           01334     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
03B6   2???           01335     call delay                  
03B7   2???           01336     call Keyboard               ;опрос клавиатуры что бы выяснить
03B8   08C1           01337     movf Cnt,1                  ;отжата клавиша или нет
03B9   1D03           01338     btfss STATUS,Z              ;если нет, то циклим
03BA   2???           01339     goto correct_A_plus                     
03BB   3009           01340     movlw 0x9                   ; если NumPressKey = 9, то вызываем
03BC   0643           01341     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
03BD   1903           01342     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03BE   2???           01343     call correct_H2_A
                      01344     
03BF   300A           01345     movlw 0xa                   ; если NumPressKey = а, то вызываем
03C0   0643           01346     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03C1   1903           01347     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C2   2???           01348     call correct_H1_A
                      01349 
03C3   300B           01350     movlw 0xb                   ; если NumPressKey = b, то вызываем
03C4   0643           01351     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
03C5   1903           01352     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C6   2???           01353     call correct_M2_A
                      01354     
03C7   300C           01355     movlw 0xc                   ; если NumPressKey = c, то вызываем
03C8   0643           01356     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
03C9   1903           01357     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03CA   2???           01358     call correct_M1_A
                      01359     
03CB   0008           01360     return
                      01361     
                      01362     ;----------------------------------------
                      01363     
03CC                  01364 correct_H2_A                    ; функцию коррекции переменной H2.
03CC   0AB8           01365     incf ALARM_HH2,1            ; инкремент переменной Н2
03CD   3033           01366     movlw 0x33                  ; Если !=3, переходим обратно в функцию
03CE   0638           01367     xorwf ALARM_HH2, w          ; correct_A_plus и проверяем там следующее условие
03CF   1D03           01368     btfss STATUS, 0x02
03D0   2???           01369     goto return_COR_H2_A
03D1   3030           01370     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
03D2   00B8           01371     movwf       ALARM_HH2
03D3                  01372 return_COR_H2_A
03D3   0008           01373     return                      ; и идем обратно в correct_A_plus и проверяем там следующее условие
                      01374     
03D4                  01375 correct_H1_A                    ; функцию коррекции переменной H1.
03D4   0AB7           01376     incf ALARM_HH1,1            ; инкремент переменной Н1
03D5   3032           01377     movlw 0x32                  ; Если = 2, переходим в функцию three_H1_A, которая служит для 
03D6   0638           01378     xorwf ALARM_HH2, w          ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01379                                 ; ограничить единицы при десятках = 2   
03D7   1903           01380     btfsc STATUS, 0x02
03D8   2???           01381     goto three_H1_A                     
03D9   303A           01382     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обнyления - 9
                            .
03DA   0637           01383 ta1 xorwf ALARM_HH1, w  
03DB   1D03           01384     btfss STATUS, 0x02
03DC   2???           01385     goto return_COR_H1_A
03DD   3030           01386     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
03DE   00B7           01387     movwf       ALARM_HH1
03DF                  01388 return_COR_H1_A
03DF   0008           01389     return
                      01390     
03E0                  01391 three_H1_A
03E0   3034           01392     movlw 0x34                  ; предел для обнуления при переменной = 2
03E1   2???           01393     goto ta1                    ; возврат к метке ta1 для продолжения корректной работы
                      01394     
03E2                  01395 correct_M2_A                    ; функцию коррекции переменной M2.
03E2   0ABA           01396     incf ALARM_MM2,1
03E3   3036           01397     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
03E4   063A           01398     xorwf ALARM_MM2, w;
03E5   1D03           01399     btfss STATUS, 0x02
03E6   2???           01400     goto return_COR_M2_A
03E7   3030           01401     movlw       0x30
03E8   00BA           01402     movwf       ALARM_MM2
03E9                  01403 return_COR_M2_A
03E9   0008           01404     return
                      01405     
03EA                  01406 correct_M1_A                    ; функцию коррекции переменной M1.
03EA   0AB9           01407     incf ALARM_MM1,1
03EB   303A           01408     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
03EC   0639           01409     xorwf ALARM_MM1, w;
03ED   1D03           01410     btfss STATUS, 0x02
03EE   2???           01411     goto return_COR_M1_A
03EF   3030           01412     movlw       0x30
03F0   00B9           01413     movwf       ALARM_MM1
03F1                  01414 return_COR_M1_A
03F1   0008           01415     return
                      01416     
                      01417     ;----------------------------------------
                      01418     
03F2                  01419 correct_A_minus                 ; функция типа switch для ввода отдельных символов(декремент)
03F2   3001           01420     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
03F3   2???           01421     call delay                          
03F4   2???           01422     call Keyboard               ;опрос клавиатуры что бы выяснить
03F5   08C1           01423     movf Cnt,1                  ;отжата клавиша или нет
03F6   1D03           01424     btfss STATUS,Z              ;если нет, то циклим
03F7   2???           01425     goto correct_A_minus
03F8   3009           01426     movlw 0x9                   ; если NumPressKey = 9, то вызываем
03F9   0643           01427     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
03FA   1903           01428     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03FB   2???           01429     call correct_H2_minus_A
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01430     
03FC   300A           01431     movlw 0xa                   ; если NumPressKey = a, то вызываем
03FD   0643           01432     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03FE   1903           01433     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03FF   2???           01434     call correct_H1_minus_A
                      01435 
0400   300B           01436     movlw 0xb                   ; если NumPressKey = b, то вызываем
0401   0643           01437     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0402   1903           01438     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0403   2???           01439     call correct_M2_minus_A
                      01440     
0404   300C           01441     movlw 0xc                   ; если NumPressKey = c, то вызываем
0405   0643           01442     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0406   1903           01443     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0407   2???           01444     call correct_M1_minus_A
                      01445     
0408   0008           01446     return
                      01447     
                      01448     ;----------------------------------------
                      01449     
0409                  01450 correct_H2_minus_A              ; функцию коррекции переменной H2.
0409   03B8           01451     decf ALARM_HH2,1            ; декремент переменной Н2
040A   302F           01452     movlw 0x2f                  ; Если !=2f, переходим обратно в функцию
040B   0638           01453     xorwf ALARM_HH2, w          ; correct_А_minus и проверяем там следующее условие
040C   1D03           01454     btfss STATUS, 0x02
040D   2???           01455     goto return_COR_H2_A_minus
040E   3032           01456     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
040F   00B8           01457     movwf       ALARM_HH2
0410                  01458 return_COR_H2_A_minus
0410   0008           01459     return                      ; и идем обратно в correct_А_minus и проверяем там следующее условие
                      01460     
0411                  01461 correct_H1_minus_A              ; функцию коррекции переменной H1.
0411   03B7           01462     decf ALARM_HH1,1            ; декремент переменной Н1
0412   302F           01463     movlw 0x2f                  ; Если != 2f, переходим обратно в функцию 
0413   0637           01464     xorwf ALARM_HH1, w          ; correct_А_minus и проверяем там следующее условие
                      01465                                         
0414   1D03           01466     btfss STATUS, 0x02
0415   2???           01467     goto return_COR_H1_A_minus          
0416   3032           01468     movlw 0x32                  ; если переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0417   0638           01469     xorwf ALARM_HH2, w  
0418   1903           01470     btfsc STATUS, 0x02
0419   2???           01471     goto three_H1_minus_A
041A   3039           01472     movlw       0x39            ; если переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
041B   00B7           01473 ta2 movwf       ALARM_HH1
041C                  01474 return_COR_H1_A_minus
041C   0008           01475     return
                      01476     
041D                  01477 three_H1_minus_A
041D   3033           01478     movlw 0x33                  ; значение для присваивания при Н2 = 2.
041E   2???           01479     goto ta2                    ; возврат к метке tа2 для продолжения корректной работы
                      01480     
041F                  01481 correct_M2_minus_A              ; функцию коррекции переменной M2.
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041F   03BA           01482     decf ALARM_MM2,1
0420   302F           01483     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0421   063A           01484     xorwf ALARM_MM2, w;
0422   1D03           01485     btfss STATUS, 0x02
0423   2???           01486     goto return_COR_M2_A_minus
0424   3035           01487     movlw       0x35
0425   00BA           01488     movwf       ALARM_MM2
0426                  01489 return_COR_M2_A_minus
0426   0008           01490     return
                      01491     
0427                  01492 correct_M1_minus_A              ; функцию коррекции переменной M1.
0427   03B9           01493     decf ALARM_MM1,1
0428   302F           01494     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0429   0639           01495     xorwf ALARM_MM1, w;
042A   1D03           01496     btfss STATUS, 0x02
042B   2???           01497     goto return_COR_M1_A_minus
042C   3039           01498     movlw       0x39
042D   00B9           01499     movwf       ALARM_MM1
042E                  01500 return_COR_M1_A_minus
042E   0008           01501     return
                      01502     
                      01503     ;==============================================
                      01504     
042F                  01505 save_A                          ; функция проверки и сохранения времени
042F   3001           01506     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
0430   2???           01507     call delay                          
0431   2???           01508     call Keyboard               ;опрос клавиатуры что бы выяснить
0432   08C1           01509     movf Cnt,1                  ;отжата клавиша или нет
0433   1D03           01510     btfss STATUS,Z              ;если нет, то циклим
0434   2???           01511     goto save_A
0435   300D           01512     movlw 0xd                   ; если происходит переполнение NumPressKey
0436   0643           01513     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
0437   1903           01514     btfsc STATUS, 0x02          ; и мы выходим из меню настройки
0438   2???           01515     goto START                  
0439   0AC3           01516     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
043A   2???           01517     goto change_alarm           ; его и возвращаемся в функцию изменения времени
                      01518     
043B                  01519 change_AHMS
043B   3001           01520     movlw 0x1                           
043C   2???           01521     call delay                  ;Задержка для борьбы с дребезгом контактов
043D   2???           01522     call Keyboard               ;опрос клавиатуры что бы выяснить
043E   08C1           01523     movf Cnt,1                  ;отжата клавиша или нет
043F   1D03           01524     btfss STATUS,Z              ;если нет, то циклим
0440   2???           01525     goto change_AHMS
0441   084D           01526     movfw TEMP_ALARM_HH2        ; записываем значения временных переменных в постоянные (NPK 
0442   00B8           01527     movwf ALARM_HH2             ; необходим для определения ячейки, в которую записываем
0443   084C           01528     movfw TEMP_ALARM_HH1        ; значение)
0444   00B7           01529     movwf ALARM_HH1
0445   084F           01530     movfw TEMP_ALARM_MM2                
0446   00BA           01531     movwf ALARM_MM2
0447   084E           01532     movfw TEMP_ALARM_MM1                
0448   00B9           01533     movwf ALARM_MM1
0449   2???           01534     goto START                  ; возврат в основной цикл
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01535     
                      01536     ;==============================================
                      01537     ;==============================================
                      01538                             
                      01539 ;small_delay:                   ; задержка для драйвера
                      01540 ;    movwf fCOUNTER1
                      01541 ;    clrwdt
                      01542 ;    decfsz fCOUNTER1,F
                      01543 ;    goto $-2
                      01544 ;    return
                      01545     
Warning[205]: Found directive in column 1. (end)
                      01546 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           0000013F
BF                                00000000
BRGH                              00000002
Blink                             00000040
Blink_Alarm                       00000042
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Cnt                               00000041
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               000000DC
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key9                              0000003F
Keyboard                          00000268
LCD_one                           00000185
LCD_two                           000001FF
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULL_BA_NAB                       000000CF
NumAlarmBit                       00000050
NumPressKey                       00000043
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Reg_1                             00000023
Reg_2                             00000024
Reg_3                             00000025
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000045
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_014C                      0000014C
_.org_0_014F                      0000014F
_.org_0_0151                      00000151
_.org_0_0157                      00000157
_.org_0_015E                      0000015E
_.org_0_0165                      00000165
_.org_0_016C                      0000016C
_.org_0_0173                      00000173
_.org_0_017A                      0000017A
_.org_0_0181                      00000181
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
alarm_plus_blink                  00000129
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
blinkON                           000000D3
blink_off_ALARM                   0000024F
blink_off_H1                      000001AF
blink_off_H1_A                    00000225
blink_off_H2                      000001A1
blink_off_H2_A                    00000217
blink_off_M1                      000001CB
blink_off_M1_A                    00000241
blink_off_M2                      000001BD
blink_off_M2_A                    00000233
blink_off_S1                      000001E7
blink_off_S2                      000001D9
blink_off_day                     000001F5
blink_on_ALARM                    0000025C
blink_on_ALARM_nop                0000025B
blink_on_H1                       000001B2
blink_on_H1_A                     00000228
blink_on_H2                       000001A4
blink_on_H2_A                     0000021A
blink_on_M1                       000001CE
blink_on_M1_A                     00000244
blink_on_M2                       000001C0
blink_on_M2_A                     00000236
blink_on_S1                       000001EA
blink_on_S2                       000001DC
blink_on_day                      000001FC
c_nop                             000000A3
change_AHMS                       0000043B
change_HMS                        0000035E
change_alarm                      000003A9
change_day                        00000371
change_time                       0000029C
col1                              00000270
col2                              0000027B
col3                              00000284
correct_A_minus                   000003F2
correct_A_plus                    000003B5
correct_H1                        000002CF
correct_H1_A                      000003D4
correct_H1_minus                  00000324
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

correct_H1_minus_A                00000411
correct_H2                        000002C7
correct_H2_A                      000003CC
correct_H2_minus                  0000031C
correct_H2_minus_A                00000409
correct_M1                        000002E5
correct_M1_A                      000003EA
correct_M1_minus                  0000033A
correct_M1_minus_A                00000427
correct_M2                        000002DD
correct_M2_A                      000003E2
correct_M2_minus                  00000332
correct_M2_minus_A                0000041F
correct_S1                        000002F5
correct_S1_minus                  0000034A
correct_S2                        000002ED
correct_S2_minus                  00000342
correct_T_minus                   000002FD
correct_T_plus                    000002A8
day_plus_blink                    0000011F
delay                             0000013B
delay_five                        00000170
delay_four                        00000169
delay_one                         00000154
delay_one_sec                     00000145
delay_seven                       0000017E
delay_six                         00000177
delay_three                       00000162
delay_two                         0000015B
end_ALARM                         000000D9
end_clock                         000000A9
end_keyb                          00000291
exday                             00000115
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            00000101
if_S_TWO_ZERO                     000000B3
if_T_AT_H1                        000000BD
if_T_AT_H2                        000000B8
if_T_AT_M1                        000000C7
if_T_AT_M2                        000000C2
inc_BA                            000000CC
minus_day_ch                      0000038B
monday                            000000E5
nop_end_key                       00000290
paintH1                           000001A7
paintH1_A                         0000021D
paintH2                           00000199
paintH2_A                         0000020F
paintM1                           000001C3
paintM1_A                         00000239
paintM2                           000001B5
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

paintM2_A                         0000022B
paintS1                           000001DF
paintS2                           000001D1
paint_ALARM                       00000247
plus_day_ch                       0000037D
printDay                          000001ED
return_ALARM                      00000267
return_A_H1                       0000022A
return_A_H2                       0000021C
return_A_M1                       00000246
return_A_M2                       00000238
return_COR_H1                     000002DA
return_COR_H1_A                   000003DF
return_COR_H1_A_minus             0000041C
return_COR_H1_MIN                 0000032F
return_COR_H2                     000002CE
return_COR_H2_A                   000003D3
return_COR_H2_A_minus             00000410
return_COR_H2_MIN                 00000323
return_COR_M1                     000002EC
return_COR_M1_A                   000003F1
return_COR_M1_A_minus             0000042E
return_COR_M1_MIN                 00000341
return_COR_M2                     000002E4
return_COR_M2_A                   000003E9
return_COR_M2_A_minus             00000426
return_COR_M2_MIN                 00000339
return_COR_S1                     000002FC
return_COR_S1_MIN                 00000351
return_COR_S2                     000002F4
return_COR_S2_MIN                 00000349
return_DAY                        000001FE
return_H1                         000001B4
return_H2                         000001A6
return_M1                         000001D0
return_M2                         000001C2
return_S1                         000001EC
return_S2                         000001DE
saturday                          00000108
save_A                            0000042F
save_T                            00000352
save_day_ch                       00000399
save_end_day                      000003A2
sunday                            0000010F
t1                                000002D5
t2                                0000032E
ta1                               000003DA
ta2                               0000041B
ten_clock                         0000009A
ten_clock_five                    00000097
ten_clock_one                     00000099
three_H1                          000002DB
three_H1_A                        000003E0
MPASM 5.75                          MAIN.ASM   10-30-2017  11:00:08         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

three_H1_minus                    00000330
three_H1_minus_A                  0000041D
three_nop                         000000A7
thursday                          000000FA
time_plus_blink                   00000116
tuesday                           000000EC
two_nop                           000000A8
v_nop                             000000A2
wait                              
wednesday                         000000F3
write                             00000133
x_nop                             000000A4
z_nop                             000000A5

Errors   :     0
Warnings :    13 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

