MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.7                                                    *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013 ;директивы  типа  контроллера,  под-
                      00014 ;ключения  заголовочного  файла  и  вы-
                      00015 ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ;директивы, позволяющие заменять в теле  ПО  команды,  указанные  после
                      00019 ;этой  директивы  (bcf  ,  bsf)  –  метками bank0, bank1. Обратную замену производит компилятор
  00000020            00020 WAIT                equ     0x20
  00000023            00021 Reg_1               equ     0x23    ;Регистры, используемые для задержек
  00000024            00022 Reg_2               equ     0x24
  00000025            00023 Reg_3               equ     0x25
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30    ;Регистр, который хранит значение единиц часов
  00000031            00027 TIME_HH2            equ     0x31    ;Регистр, который хранит значение десятков часов
  00000032            00028 TIME_MM1            equ     0x32    ;Регистр, который хранит значение единиц минут
  00000033            00029 TIME_MM2            equ     0x33    ;Регистр, который хранит значение десятков минут
  00000034            00030 TIME_SS1            equ     0x34    ;Регистр, который хранит значение единиц секунд
  00000035            00031 TIME_SS2            equ     0x35    ;Регистр, который хранит значение десятков секунд
  00000036            00032 DAY                 equ     0x36    ;Регистр, который хранит значение дня недели
  00000037            00033 ALARM_HH1           equ     0x37    ;Регистр, который хранит значение единиц часов для будильника
  00000038            00034 ALARM_HH2           equ     0x38    ;Регистр, который хранит значение десятков часов для будильника
  00000039            00035 ALARM_MM1           equ     0x39    ;Регистр, который хранит значение единиц минут для будильника
  0000003A            00036 ALARM_MM2           equ     0x3A    ;Регистр, который хранит значение десятков минут для будильника
  0000003B            00037 Key1                equ     0x3B    ;Регистры, которые хранят состояние клавиш в драйвере  
  0000003C            00038 Key2                equ     0x3C    ;клавиатуры Keyboard
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key9                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Blink               equ     0x40    ;Регистр, для управления морганием элементов экрана
  00000041            00043 Cnt                 equ     0x41    ;Регистр, который хранит состояние клавиши в драйвере (нажата или не
                            т)
  00000042            00044 Blink_Alarm         equ     0x42    ;Управляющий регистр, который выполняет функцию включения\выключения
                             будильника
  00000043            00045 NumPressKey         equ     0x43    ;Управляющий регистр-метка, для посимвольного изменения значений и в
                            ыбора моргающего элемента
  00000044            00046 fCOUNTER1           equ     0x44    ;Регистр используемый для задержек    
  00000045            00047 TEMP_TIME_HH1       equ     0x45    ;Регистры, который хранит значения: часов, минут, секунд основного в
                            ремени;
  00000046            00048 TEMP_TIME_HH2       equ     0x46    ;значение дня и минут, часов будильника. Нужены для сохранения текущ
                            их значений
  00000047            00049 TEMP_TIME_MM1       equ     0x47    ;перед изменением в соответствующих режимах
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumAlarmBit         equ     0x50    ;Так же, как Blink_Alarm, управляет корректным включением и выключен
                            ием будильника
                      00059     
                      00060 wait  macro     time
                      00061     movlw    (time/5)-1
                      00062     movwf    WAIT
                      00063     call    wait5u
                      00064     endm
                      00065 ;макрос паузы с именем wait. Особенность этого макроса состоит в том, что
                      00066 ;у  него  имеется  параметр  –  time.  При вызове  макроса  значение  параметра
                      00067 ;указывается  после  имени  макроса  в виде  целого  десятичного  числа  крат-
                      00068 ;ного  5  (в  данном  примере).  В  теле макроса  это  число  подставляется  в
                      00069 ;«переменную» time и далее используется вычисленное значение (которое в
                      00070 ;данном случае  выступает  в  роли  константы, записываемой в W). Вместе с
                      00071 ;процедурой  wait5u  длительность  задержки,  обеспечиваемая  макросом
                      00072 ;равна time микросекунд
                      00073     org 0x0000
0000   0183           00074     clrf STATUS
0001   3000           00075     movlw 0x00
0002   008A           00076     movwf PCLATH
0003   2???           00077     goto begin
                      00078 ;Выбор нулевой страницы памяти команд и размещение на ней откомпилированного кода
                      00079 
0004                  00080 begin
0004   1683           00081     bank1                       ;Выбор первого банка памяти. Для вы-
                      00082                                 ;зова используется метка bank1, объяв-
                      00083                                 ;ленная выше директивой #define.
0005   308F           00084     movlw 0x8F                  ;Установка  максимального  времени
0006   0081           00085     movwf OPTION_REG            ;срабатывания  сторожевого  таймера  и его сброс
0007   0064           00086     clrwdt
0008   018B           00087     clrf INTCON                 ;Отключение  прерываний  и  их  обработки
0009   018C           00088     clrf PIE1
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   018D           00089     clrf PIE2
000B   3000           00090     movlw .0                    ;Конфигурирование  портов  А, В, С, Е, D
000C   0086           00091     movwf TRISB
000D   0087           00092     movwf TRISC
000E   0089           00093     movwf TRISE
000F   30F8           00094     movlw b'11111000' 
0010   0085           00095     movwf TRISA 
0011   3000           00096     movlw b'00000000'           
0012   0088           00097     movwf TRISD
0013   300F           00098     movlw b'00001111'
0014   0081           00099     movwf OPTION_REG
0015   019F           00100     clrf ADCON1 
0016   149F           00101     bsf ADCON1,0x01 
0017   151F           00102     bsf ADCON1,0x02 
0018   1283           00103     bank0                       ;Подготовка к передаче команд на контроллер
0019   01BB           00104     clrf Key1    
001A   01BC           00105     clrf Key2       
001B   01BD           00106     clrf Key3       
001C   01BE           00107     clrf Key4              
001D   01BF           00108     clrf Key9               
001E   01C1           00109     clrf Cnt                
001F   0187           00110     clrf PORTC
0020   0188           00111     clrf PORTD
0021   3001           00112     movlw 0x01
0022   2???           00113     call write
0023   300F           00114     movlw 0x0f
0024   2???           00115     call delay
                      00116 ;Передача команды Clear  Display для очистки дисплея и установки счетчика адреса видеопа-
                      00117 ;мяти  на  нулевой  адрес  (первое  знакоместо  в верхней строке), с необходимой задержкой
0025   0064           00118     clrwdt
0026   3038           00119     movlw 0x38
0027   2???           00120     call write
0028   300F           00121     movlw 0x0f
0029   2???           00122     call delay
                      00123 
                      00124 ;Передача команды Function Set для установки режима  2-х  строчного  индикатора,  размера
                      00125 ;знакоместа 5х7 и 8 разрядной шины данных
002A   3006           00126     movlw 0x06
002B   2???           00127     call write
002C   300F           00128     movlw 0x0f
002D   2???           00129     call delay
                      00130 ;Передача  команды  Entry  Mode  Set  для  установки режима увеличения счетчика адреса ви-
                      00131 ;деопамяти, после каждой записи символа в нее, при неподвижности видеопамяти относительно индикатора
002E   300C           00132     movlw 0x0c
002F   2???           00133     call write
0030   300F           00134     movlw 0x0f
0031   2???           00135     call delay
                      00136 ;Передача  команды  Display  ON/OFF  control для включения дисплея с отключенным курсо-
                      00137 ;ром.  На  этом  этап инициализации дисплея закончен.
0032   3031           00138     movlw       0x31            ;Присвоение начальных значений регистров времени и дня,
0033   00B9           00139     movwf       ALARM_MM1       ;а так же обнуление управляющих регистров до перехода 
0034   3030           00140     movlw       0x30            ;в основной цикл программы
0035   00B0           00141     movwf       TIME_HH1
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0036   00B1           00142     movwf       TIME_HH2
0037   00B2           00143     movwf       TIME_MM1
0038   00B3           00144     movwf       TIME_MM2
0039   00B4           00145     movwf       TIME_SS1
003A   00B5           00146     movwf       TIME_SS2 
003B   00B7           00147     movwf       ALARM_HH1
003C   00B8           00148     movwf       ALARM_HH2
003D   00BA           00149     movwf       ALARM_MM2
003E   3000           00150     movlw       .0
003F   00B6           00151     movwf       DAY
0040   00C2           00152     movwf       Blink_Alarm
0041   00D0           00153     movwf       NumAlarmBit
0042   3000           00154     movlw       b'00000000'
0043   00C0           00155     movwf       Blink
                      00156 
0044                  00157 START                           ;Метка начала основного цикла программы
0044   3000           00158     movlw .0                    ;Записываем значения времени, дня и обнуление управляющего регистра 
0045   00C2           00159     movwf Blink_Alarm           ;в начале каждого прохода основного цикла
0046   0831           00160     movfw TIME_HH2              
0047   00C6           00161     movwf TEMP_TIME_HH2         
0048   0830           00162     movfw TIME_HH1              
0049   00C5           00163     movwf TEMP_TIME_HH1
004A   0833           00164     movfw TIME_MM2              
004B   00C8           00165     movwf TEMP_TIME_MM2
004C   0832           00166     movfw TIME_MM1              
004D   00C7           00167     movwf TEMP_TIME_MM1
004E   0835           00168     movfw TIME_SS2              
004F   00CA           00169     movwf TEMP_TIME_SS2
0050   0834           00170     movfw TIME_SS1              
0051   00C9           00171     movwf TEMP_TIME_SS1
0052   0836           00172     movfw DAY
0053   00CB           00173     movwf TEMP_DAY
0054   3000           00174     movlw 0x00
0055   00C3           00175     movwf NumPressKey           ; NumPressKey каждый раз устанавливаем в начальное значение
0056   0837           00176     movfw ALARM_HH1
0057   00CC           00177     movwf TEMP_ALARM_HH1
0058   0838           00178     movfw ALARM_HH2
0059   00CD           00179     movwf TEMP_ALARM_HH2
005A   0839           00180     movfw ALARM_MM1
005B   00CE           00181     movwf TEMP_ALARM_MM1
005C   083A           00182     movfw ALARM_MM2
005D   00CF           00183     movwf TEMP_ALARM_MM2
                      00184     
005E   2???           00185     call Keyboard               ; Читаем клавиатуру
005F   183B           00186     btfsc Key1,0                ; Проверка нажатия клавиши "1",  если нажата, то переходим 
0060   2???           00187     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
0061   183C           00188     btfsc Key2,0                ; Проверка нажатия клавиши "2",  если нажата, то переходим 
0062   2???           00189     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
0063   183D           00190     btfsc Key3,0                ; Проверка нажатия клавиши "3",  если нажата, то переходим 
0064   2???           00191     call alarm_plus_blink       ; к изменению будильника, нет - тогда едем дальше
                      00192         
0065   2???           00193     call LCD_one                ;Отрисовка первой строки на дисплее             
                      00194 
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00195     ;Счет единиц секунд (0-9) - TIME_SS1
0066   0AB4           00196     incf TIME_SS1,1
0067   303A           00197     movlw 0x3A                  ; Выполняем инкремент значения единиц секунд и если
0068   0634           00198     xorwf TIME_SS1, w;          ; это значение !=10, то переходим к метке конца обработки времени 
0069   1D03           00199     btfss STATUS, 0x02          ; Если же значение секунды = 10, то обнуляем его и переходим к обработке
006A   2???           00200     goto end_clock              ; десятков секунд 
006B   3030           00201     movlw 0x30
006C   00B4           00202     movwf       TIME_SS1
                      00203 
                      00204     ;Счет десятков секунд (0-5) - TIME_SS2
006D   0AB5           00205     incf TIME_SS2,1             ; Выполняем инкремент значения десятков секунд и если
006E   3036           00206     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
006F   0635           00207     xorwf TIME_SS2, w;          ; Если же значение секунды = 6, то обнуляем его и переходим к обработке
0070   1D03           00208     btfss STATUS, 0x02          ; единиц минут
0071   2???           00209     goto end_clock
0072   3030           00210     movlw 0x30
0073   00B5           00211     movwf       TIME_SS2
                      00212         
                      00213     ;Счет единиц минут (0-9) - TIME_MM1
0074   0AB2           00214     incf TIME_MM1,1             ; Выполняем инкремент значения единиц минут и если
0075   303A           00215     movlw 0x3A                  ; это значение !=10, то переходим к метке конца обработки времени 
0076   0632           00216     xorwf TIME_MM1, w           ; Если же значение минуты = 10, то обнуляем его и переходим к обработке
0077   1D03           00217     btfss STATUS, 0x02          ; десятков минут
0078   2???           00218     goto end_clock
0079   3030           00219     movlw 0x30
007A   00B2           00220     movwf       TIME_MM1
                      00221 
                      00222     ;Счет десятков минут (0-5) - TIME_MM2
007B   0AB3           00223     incf TIME_MM2,1             ; Выполняем инкремент значения десятков минут и если
007C   3036           00224     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
007D   0633           00225     xorwf TIME_MM2, w           ; Если же значение минуты = 6, то обнуляем его и переходим к обработке
007E   1D03           00226     btfss STATUS, 0x02          ; единиц часов
007F   2???           00227     goto end_clock
0080   3030           00228     movlw 0x30
0081   00B3           00229     movwf       TIME_MM2
                      00230 
                      00231     ;Счет единиц и десятков часов - TIME_НН2, TIME_НН1
0082   0AB0           00232     incf TIME_HH1,1             ; Выполняем инкремент значения единиц часов и если
0083   3034           00233     movlw 0x34                  ; это значение !=4, то переходим к метке работы с единицами 
0084   0630           00234     xorwf TIME_HH1, w;          ; часов до 10.
0085   1D03           00235     btfss STATUS, 0x02
0086   2???           00236     goto ten_clock
0087   3032           00237     movlw 0x32                  ; Если значение десятков часов !=2, то тка же работаем
0088   0631           00238     xorwf TIME_HH2, w;          ; с форматом до 10, пройдя по метке
0089   1D03           00239     btfss STATUS, 0x02
008A   2???           00240     goto ten_clock
008B   3030           00241     movlw 0x30                  ; Обнуление десятков и единиц часов
008C   00B0           00242     movwf       TIME_HH1
008D   00B1           00243     movwf       TIME_HH2
008E   0AB6           00244     incf    DAY,1               ; Инкремент переменной Деня, для перехода в новый день в 00:00
008F   3007           00245     movlw       .7              ; Обнуление переменной при достижении воскресенья,
0090   0636           00246     xorwf DAY, w;               ; что бы при 00:00:00 перейти в понедельник
0091   1D03           00247     btfss STATUS, 0x02                   
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0092   2???           00248     goto end_clock                      
0093   3000           00249     movlw       .0
0094   00B6           00250     movwf       DAY
                      00251 
                      00252         
0095                  00253 ten_clock
0095   303A           00254     movlw 0x3A                  ; Если значение единиц часов !=10, то 
0096   0630           00255     xorwf TIME_HH1, w;          ; переходим в конец обработки времени.
0097   1D03           00256     btfss STATUS, 0x02          ; Если значение = 10, то инкрементируем десятки часов
0098   2???           00257     goto end_clock              ; и обнуляем значение единиц
Message[305]: Using default destination of 1 (file).
0099   0AB1           00258     incf    TIME_HH2
009A   3030           00259     movlw 0x30
009B   00B0           00260     movwf       TIME_HH1
                      00261         
009C                  00262 end_clock                       ; Метка конца работы со времинем
009C   0064           00263     clrwdt                      ; Чистим на всякий
                      00264     
                      00265 ;Обработка будильника
009D   3001           00266     movlw .1                    ; Проверяем, равен ли единице управляющий регистр
009E   0650           00267     xorwf NumAlarmBit, w
009F   1903           00268     btfsc STATUS, 0x02
00A0   2???           00269     goto inc_BA                 ; Если равен переходим сразу в функцию опроса клавиши 9
00A1   2???           00270     goto if_S_ONE_ZERO          ; Если нет, то проверяем значение секунд
                      00271     
00A2                  00272 if_S_ONE_ZERO                   
00A2   3030           00273     movlw 0x30                  ; Если единицы секунд = 0, то
00A3   0634           00274     xorwf TIME_SS1, w;          ; переходим к проверке десятков секунд, аналогичную проверку
00A4   1903           00275     btfsc STATUS, 0x02          ; выполняем и там. Если не равно 0, то переходим по метке к
00A5   2???           00276     goto if_S_TWO_ZERO          ; концу обработки будильника
00A6   2???           00277     goto end_ALARM    
00A7                  00278 if_S_TWO_ZERO    
00A7   3030           00279     movlw 0x30                  
00A8   0635           00280     xorwf TIME_SS2, w;
00A9   1903           00281     btfsc STATUS, 0x02
00AA   2???           00282     goto if_T_AT_H2             ; Переход к проверке на равенство десятков часов и будильника
00AB   2???           00283     goto end_ALARM     
                      00284         
00AC                  00285 if_T_AT_H2                      ; Если значения десятков будильника и реального времени равны, то
00AC   0831           00286     movfw TIME_HH2              ; переходим к проверке единиц. Если нет, то оканчиваем проверку 
00AD   0638           00287     xorwf ALARM_HH2, w;         ; будильника.
00AE   1903           00288     btfsc STATUS, 0x02          ; Аналогичную проверку проводим и для минут.
00AF   2???           00289     goto if_T_AT_H1
00B0   2???           00290     goto end_ALARM
                      00291     
00B1                  00292 if_T_AT_H1                      ; Проверка единиц часа у часов и будильника
00B1   0830           00293     movfw TIME_HH1              
00B2   0637           00294     xorwf ALARM_HH1, w;         
00B3   1903           00295     btfsc STATUS, 0x02
00B4   2???           00296     goto if_T_AT_M2
00B5   2???           00297     goto end_ALARM
                      00298     
00B6                  00299 if_T_AT_M2                      ; Проверка десятков минут часов и будильника
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   0833           00300     movfw TIME_MM2              
00B7   063A           00301     xorwf ALARM_MM2, w;         
00B8   1903           00302     btfsc STATUS, 0x02
00B9   2???           00303     goto if_T_AT_M1
00BA   2???           00304     goto end_ALARM
                      00305     
00BB                  00306 if_T_AT_M1                      ; Проверка единиц минут часов и будильника
00BB   0832           00307     movfw TIME_MM1              
00BC   0639           00308     xorwf ALARM_MM1, w;         
00BD   1903           00309     btfsc STATUS, 0x02
00BE   2???           00310     goto inc_BA                 ; Если все значения совпали, то переходим к метке,
00BF   2???           00311     goto end_ALARM              ; где присваиваем управляющему регистру Blink_Alarm 
                      00312                                 ; единицу, после чего переходим в функцию
00C0                  00313 inc_BA                          ; опроса клавиатуры, для ожидания нажатия кнопки
00C0   3001           00314     movlw .1                    ; 9, для обнуления управляющих регистров, что
00C1   00C2           00315     movwf Blink_Alarm           ; отключает звуковой сигнал и моргание экрана
00C2   2???           00316     goto blinkON
                      00317     
00C3                  00318 NULL_BA_NAB                     ; Обнуление управляющих регистров
00C3   3000           00319     movlw .0
00C4   00D0           00320     movwf NumAlarmBit
00C5   00C2           00321     movwf Blink_Alarm
00C6   2???           00322     goto end_ALARM
                      00323     
00C7                  00324 blinkON
00C7   2???           00325     call Keyboard           ; Спрашиваем клавиатуру
00C8   183F           00326     btfsc Key9,0
00C9   2???           00327     goto NULL_BA_NAB        ; Если нажали кнопку 9 переходим в функцию, где обнуляем управляющие регистр
                            ы
00CA   3001           00328     movlw .1                ; Если нет, то устанавливаем NumAlarmBit=1 для непрерывного моргания и звуко
                            вого сигнала
00CB   00D0           00329     movwf NumAlarmBit       ; пока не нажата 9.
00CC                  00330 end_ALARM                   ;Метка конца обработки будильника
00CC   2???           00331     call LCD_two            ;Отрисовка второй строки
00CD   2???           00332     call delay_one_sec      ;Задержка пока на 1сек
00CE   2???           00333     goto START              ; конец основного цикла (должен быть = 1сек)
                      00334 
                      00335     ;--------------------------------------------------------
                      00336     ;--------------------------------------------------------
                      00337     
                      00338 ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
00CF   0782           00339 DEC addwf PCL
00D0   2???           00340     goto monday
00D1   2???           00341     goto tuesday
00D2   2???           00342     goto wednesday      
00D3   2???           00343     goto thursday    
00D4   2???           00344     goto friday         
00D5   2???           00345     goto saturday               
00D6   2???           00346     goto sunday         
00D7   0008           00347     return
                      00348 ;Отрисовка дней недели
00D8                  00349 monday                      ;понедельник
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D8   304D           00350     movlw 'M'
00D9   2???           00351     call write
00DA   304F           00352     movlw 'O'
00DB   2???           00353     call write
00DC   304E           00354     movlw 'N'
00DD   2???           00355     call write
00DE   2???           00356     goto exday
00DF                  00357 tuesday                     ;вторник
00DF   3054           00358     movlw 'T'
00E0   2???           00359     call write
00E1   3055           00360     movlw 'U'
00E2   2???           00361     call write
00E3   3045           00362     movlw 'E'
00E4   2???           00363     call write
00E5   2???           00364     goto exday
00E6                  00365 wednesday                   ;среда
00E6   3057           00366     movlw 'W'
00E7   2???           00367     call write
00E8   3045           00368     movlw 'E'
00E9   2???           00369     call write
00EA   3044           00370     movlw 'D'
00EB   2???           00371     call write
00EC   2???           00372     goto exday
00ED                  00373 thursday                    ;четверг
00ED   3054           00374     movlw 'T'
00EE   2???           00375     call write
00EF   3048           00376     movlw 'H'
00F0   2???           00377     call write
00F1   3055           00378     movlw 'U'
00F2   2???           00379     call write
00F3   2???           00380     goto exday
00F4                  00381 friday                      ;пятница
00F4   3046           00382     movlw 'F'
00F5   2???           00383     call write
00F6   3052           00384     movlw 'R'
00F7   2???           00385     call write
00F8   3049           00386     movlw 'I'
00F9   2???           00387     call write
00FA   2???           00388     goto exday
00FB                  00389 saturday                    ;суббота
00FB   3053           00390     movlw 'S'
00FC   2???           00391     call write
00FD   3041           00392     movlw 'A'
00FE   2???           00393     call write
00FF   3054           00394     movlw 'T'
0100   2???           00395     call write
0101   2???           00396     goto exday
0102                  00397 sunday                      ;воскресенье
0102   3053           00398     movlw 'S'
0103   2???           00399     call write
0104   3055           00400     movlw 'U'
0105   2???           00401     call write
0106   304E           00402     movlw 'N'
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0107   2???           00403     call write
0108                  00404 exday                       
0108   0008           00405     return
                      00406 
                      00407     ;--------------------------------------------------------
                      00408     
0109                  00409 time_plus_blink             ; Функция обработки перед переходом в другой режим
0109   3001           00410     movlw 0x1               ; Задержка, для защиты от дребезга
010A   2???           00411     call delay                          
010B   2???           00412     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
010C   08C1           00413     movf Cnt,1              ;Если нет, то циклим
010D   1D03           00414     btfss STATUS,Z                      
010E   2???           00415     goto time_plus_blink
010F   0AC3           00416     incf NumPressKey,1      ;Если клавиша отжата, то инкрементируем NumPressKey
0110   2???           00417     goto change_time        ;для выбора ячейки, в которой будут изменяться значения.
0111   0008           00418     return                  ;После чего переходим к изменению времени
                      00419     
0112                  00420 day_plus_blink              ; Функция обработки перед переходом в другой режим
0112   3001           00421     movlw 0x1               ; Задержка, для защиты от дребезга          
0113   2???           00422     call delay                          
0114   2???           00423     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
0115   08C1           00424     movf Cnt,1              ;Если нет, то циклим
0116   1D03           00425     btfss STATUS,Z                      
0117   2???           00426     goto day_plus_blink
0118   3008           00427     movlw 0x8               ;Если клавиша отжата, то установим NumPressKey = 8
0119   00C3           00428     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
011A   2???           00429     goto change_day         ;После чего переходим к изменению дня недели
011B   0008           00430     return
                      00431     
011C                  00432 alarm_plus_blink            ; Функция обработки перед переходом в другой режим
011C   3001           00433     movlw 0x1               ; Задержка, для защиты от дребезга          
011D   2???           00434     call delay                          
011E   2???           00435     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
011F   08C1           00436     movf Cnt,1              ;Если нет, то циклим
0120   1D03           00437     btfss STATUS,Z                      
0121   2???           00438     goto alarm_plus_blink
0122   3009           00439     movlw 0x9               ;Если клавиша отжата, то установим NumPressKey = 9
0123   00C3           00440     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
0124   2???           00441     goto change_alarm       ;После чего переходим к изменению будильника
0125   0008           00442     return
                      00443     ;--------------------------------------------------------
                      00444     
0126                  00445 write                       ;Процедура записи байта к контроллер HD
0126   1303           00446     bcf STATUS, RP1
0127   1283           00447     bcf STATUS, RP0
0128   0086           00448     movwf PORTB
0129   1507           00449     bsf PORTC, 2
012A   3001           00450     movlw 0x01
012B   2???           00451     call delay
012C   1107           00452     bcf PORTC, 2
012D   0008           00453     return
                      00454 ; перед вызовом этой процедуры в W помещается байт, который надо записать в HD. Далее
                      00455 ;он передается в PORTB и формируется отрицательный перепад на RC2, путем предваритель-
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00456 ;ной  его  установки  в  «1»,  удержания  этого уровня в течение некоторого времени (опреде-
                      00457 ;ляемого временем задержки delay  при  W=1) и сброса его в «0».
                      00458         
012E                  00459 delay                       ;Процедура  задержки,  время  которой  можно
012E   1303           00460     bcf   STATUS, RP1       ;регулировать, задавая число в W
012F   1283           00461     bcf   STATUS, RP0
0130   00A7           00462     movwf   fCOUNTER2
0131   01A6           00463     clrf    fCOUNTER
                      00464     
0132                  00465 BD_Loop
0132   0064           00466     clrwdt
0133   0BA6           00467     decfsz  fCOUNTER, f
0134   2???           00468     goto    BD_Loop
0135   0BA7           00469     decfsz  fCOUNTER2, f
0136   2???           00470     goto    BD_Loop
0137   0008           00471     return
                      00472 
0138                  00473 delay_one_sec
                      00474  ; Задержка 1 000 000 машинных циклов
0138   30FE           00475     movlw       .254
0139   00A3           00476     movwf       Reg_1
013A   3011           00477     movlw       .17
013B   00A4           00478     movwf       Reg_2
013C   3006           00479     movlw       .6
013D   00A5           00480     movwf       Reg_3
013E   0BA3           00481     decfsz      Reg_1,F
013F   2???           00482     goto        $-1
0140   0064           00483     clrwdt
0141   0BA4           00484     decfsz      Reg_2,F
0142   2???           00485     goto        $-4
0143   0BA5           00486     decfsz      Reg_3,F
0144   2???           00487     goto        $-6
0145   0000           00488     nop
0146   0000           00489     nop
0147   0008           00490     return
                      00491     ;==========================================
                      00492     
0148                  00493 LCD_one
                      00494 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00495 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  1-ой 
                      00496 ;строки:  ячейку  с  адресом  (10000000). Это  необходимо  для  вывода  
                      00497 ;времени и дня недели на первой строке индикатора.
0148   1007           00498     bcf PORTC, 0
0149   3080           00499     movlw b'10000000'   
014A   2???           00500     call write
014B   1407           00501     bsf PORTC,0
                      00502 ;Отрисовка первой строки
                      00503 ; Отрисовка Н2
014C   2???           00504     call paintH2
                      00505 ; Отрисовка Н1
014D   2???           00506     call paintH1
014E   303A           00507     movlw ':'
014F   2???           00508     call write
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00509 ; Отрисовка М2
0150   2???           00510     call paintM2
                      00511 ; Отрисовка М1
0151   2???           00512     call paintM1
0152   303A           00513     movlw ':'
0153   2???           00514     call write
                      00515 ; Отрисовка S2
0154   2???           00516     call paintS2
                      00517 ; Отрисовка S1
0155   2???           00518     call paintS1
0156   3020           00519     movlw ' '
0157   2???           00520     call write
0158   3020           00521     movlw ' '
0159   2???           00522     call write
                      00523 ;Отрисовка дня недели
015A   2???           00524     call printDay
                      00525 
015B   0008           00526     return
                      00527     
                      00528     ;==========================================
                      00529     
                      00530 ; Собственно механизм последовательного моргания при настройке времени
015C                  00531 paintH2                         ;Моргание десятков часов
015C   3001           00532     movlw 0x1                   ;Если NumPressKey = 1, то включаем моргание
015D   0643           00533     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
015E   1D03           00534     btfss STATUS, 0x02          ;включае один из методов, отвечающих
015F   2???           00535     goto blink_on_H2            ;за отрисовку. Один отрисовывает значение времени,
0160   0AC0           00536     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0161   1C40           00537     btfss Blink, 0              ;Если NumPressKey != 1, то проверяем следующую функцию
0162   2???           00538     goto blink_on_H2            ;и отрисовываем постоянно значение
0163   2???           00539     goto blink_off_H2
0164                  00540 blink_off_H2
0164   3020           00541     movlw ' '
0165   2???           00542     call write
0166   2???           00543     goto return_H2
0167                  00544 blink_on_H2
0167   0831           00545     movfw TIME_HH2
0168   2???           00546     call write
0169                  00547 return_H2    
0169   0008           00548     return
                      00549     ;-----------
016A                  00550 paintH1                         ;Моргание единиц часов
016A   3002           00551     movlw 0x2                   ;Если NumPressKey = 2, то включаем моргание
016B   0643           00552     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
016C   1D03           00553     btfss STATUS, 0x02          ;включае один из методов, отвечающих
016D   2???           00554     goto blink_on_H1            ;за отрисовку. Один отрисовывает значение времени,
016E   0AC0           00555     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
016F   1C40           00556     btfss Blink, 0              ;Если NumPressKey != 2, то проверяем следующую функцию
0170   2???           00557     goto blink_on_H1            ;и отрисовываем постоянно значение
0171   2???           00558     goto blink_off_H1
0172                  00559 blink_off_H1
0172   3020           00560     movlw ' '
0173   2???           00561     call write
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0174   2???           00562     goto return_H1
0175                  00563 blink_on_H1
0175   0830           00564     movfw TIME_HH1
0176   2???           00565     call write
0177                  00566 return_H1
0177   0008           00567     return
                      00568     ;------------
0178                  00569 paintM2                         ;Моргание десятков минут
0178   3003           00570     movlw 0x3                   ;Если NumPressKey = 3, то включаем моргание
0179   0643           00571     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
017A   1D03           00572     btfss STATUS, 0x02          ;включае один из методов, отвечающих
017B   2???           00573     goto blink_on_M2            ;за отрисовку. Один отрисовывает значение времени,
017C   0AC0           00574     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
017D   1C40           00575     btfss Blink, 0              ;Если NumPressKey != 3, то проверяем следующую функцию
017E   2???           00576     goto blink_on_M2            ;и отрисовываем постоянно значение
017F   2???           00577     goto blink_off_M2
0180                  00578 blink_off_M2
0180   3020           00579     movlw ' '
0181   2???           00580     call write
0182   2???           00581     goto return_M2
0183                  00582 blink_on_M2
0183   0833           00583     movfw TIME_MM2
0184   2???           00584     call write
0185                  00585 return_M2
0185   0008           00586     return
                      00587     ;------------
0186                  00588 paintM1                         ;Моргание единиц минут
0186   3004           00589     movlw 0x4                   ;Если NumPressKey = 4, то включаем моргание
0187   0643           00590     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
0188   1D03           00591     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0189   2???           00592     goto blink_on_M1            ;за отрисовку. Один отрисовывает значение времени,
018A   0AC0           00593     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
018B   1C40           00594     btfss Blink, 0              ;Если NumPressKey != 4, то проверяем следующую функцию
018C   2???           00595     goto blink_on_M1            ;и отрисовываем постоянно значение
018D   2???           00596     goto blink_off_M1
018E                  00597 blink_off_M1
018E   3020           00598     movlw ' '
018F   2???           00599     call write
0190   2???           00600     goto return_M1
0191                  00601 blink_on_M1
0191   0832           00602     movfw TIME_MM1
0192   2???           00603     call write
0193                  00604 return_M1
0193   0008           00605     return
                      00606     ;------------
0194                  00607 paintS2                         ;Моргание десятков секунд
0194   3005           00608     movlw 0x5                   ;Если NumPressKey = 5, то включаем моргание
0195   0643           00609     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
0196   1D03           00610     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0197   2???           00611     goto blink_on_S2            ;за отрисовку. Один отрисовывает значение времени,
0198   0AC0           00612     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0199   1C40           00613     btfss Blink, 0              ;Если NumPressKey != 5, то проверяем следующую функцию
019A   2???           00614     goto blink_on_S2            ;и отрисовываем постоянно значение
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019B   2???           00615     goto blink_off_S2
019C                  00616 blink_off_S2
019C   3020           00617     movlw ' '
019D   2???           00618     call write
019E   2???           00619     goto return_S2
019F                  00620 blink_on_S2
019F   0835           00621     movfw TIME_SS2
01A0   2???           00622     call write
01A1                  00623 return_S2
01A1   0008           00624     return
                      00625     ;------------
01A2                  00626 paintS1                         ;Моргание единиц секунд
01A2   3006           00627     movlw 0x6                   ;Если NumPressKey = 6, то включаем моргание
01A3   0643           00628     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01A4   1D03           00629     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01A5   2???           00630     goto blink_on_S1            ;за отрисовку. Один отрисовывает значение времени,
01A6   0AC0           00631     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01A7   1C40           00632     btfss Blink, 0              ;Если NumPressKey != 6, то проверяем следующую функцию
01A8   2???           00633     goto blink_on_S1            ;и отрисовываем постоянно значение
01A9   2???           00634     goto blink_off_S1
01AA                  00635 blink_off_S1
01AA   3020           00636     movlw ' '
01AB   2???           00637     call write
01AC   2???           00638     goto return_S1
01AD                  00639 blink_on_S1
01AD   0834           00640     movfw TIME_SS1
01AE   2???           00641     call write
01AF                  00642 return_S1
01AF   0008           00643     return
                      00644     ;-----------
01B0                  00645 printDay                        ;Моргание дня недели
01B0   3008           00646     movlw 0x8                   ;Если NumPressKey = 8, то включаем моргание
01B1   0643           00647     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01B2   1D03           00648     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01B3   2???           00649     goto blink_on_day           ;за отрисовку. Один отрисовывает значение дня,
01B4   0AC0           00650     incf Blink,1                ;а другой символы пробела. Так создается эффект моргания.
01B5   1C40           00651     btfss Blink, 0              ;Если NumPressKey != 8, то проверяем следующую функцию
01B6   2???           00652     goto blink_on_day           ;и отрисовываем постоянно значение
01B7   2???           00653     goto blink_off_day
01B8                  00654 blink_off_day
01B8   3020           00655     movlw ' '
01B9   2???           00656     call write
01BA   3020           00657     movlw ' '
01BB   2???           00658     call write
01BC   3020           00659     movlw ' '
01BD   2???           00660     call write
01BE   2???           00661     goto return_DAY
01BF                  00662 blink_on_day
01BF   0836           00663     movfw DAY                           
01C0   2???           00664     call DEC
01C1                  00665 return_DAY
01C1   0008           00666     return
                      00667     ;==========================================   
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00668     
01C2                  00669 LCD_two
01C2   1007           00670     bcf PORTC, 0
01C3   30C4           00671     movlw b'11000100'
01C4   2???           00672     call write
                      00673 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00674 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  2-ой
                      00675 ;строки:  ячейку  с  адресом  (11000100). Это  необходимо  для  вывода  фразы  «ALARM» и будильника на в
                            торой строке индикатора.
01C5   1407           00676     bsf PORTC,0             ; установка RC0=1, для последующей передачи
                      00677                             ;кодов символов второй строки на дисплей. Об-
                      00678                             ;ратите внимание на то, что нигде не требуется
                      00679                             ;изменения  банков  памяти: т.к. все регистры, с
                      00680                             ;которыми работает ПО, находятся в 0-ом банке.
01C6   2???           00681     call paint_ALARM        ;Вызов метода отрисовки
                      00682     
01C7   3020           00683     movlw ' '
01C8   2???           00684     call write
01C9   3020           00685     movlw ' '
01CA   2???           00686     call write
                      00687     
01CB   2???           00688     call paintH2_A          ;Вызов метода отрисовки
01CC   2???           00689     call paintH1_A          ;Вызов метода отрисовки
01CD   303A           00690     movlw ':'
01CE   2???           00691     call write
01CF   2???           00692     call paintM2_A          ;Вызов метода отрисовки
01D0   2???           00693     call paintM1_A          ;Вызов метода отрисовки
01D1   0008           00694     return
                      00695     ;------------------------------------------
01D2                  00696 paintH2_A                       ;Моргание десятков часов будильника
01D2   3009           00697     movlw 0x9                   ;Если NumPressKey = 9, то включаем моргание
01D3   0643           00698     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01D4   1D03           00699     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01D5   2???           00700     goto blink_on_H2_A          ;за отрисовку. Один отрисовывает значение времени,
01D6   0AC0           00701     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01D7   1C40           00702     btfss Blink, 0              ;Если NumPressKey != 9, то проверяем следующую функцию
01D8   2???           00703     goto blink_on_H2_A          ;и отрисовываем постоянно значение
01D9   2???           00704     goto blink_off_H2_A
01DA                  00705 blink_off_H2_A
01DA   3020           00706     movlw ' '
01DB   2???           00707     call write
01DC   2???           00708     goto return_A_H2
01DD                  00709 blink_on_H2_A
01DD   0838           00710     movfw ALARM_HH2
01DE   2???           00711     call write
01DF                  00712 return_A_H2
01DF   0008           00713     return
                      00714     ;-----------
01E0                  00715 paintH1_A
01E0   300A           00716     movlw 0xa                   ; если NumPressKey = 0, то вызываем
01E1   0643           00717     xorwf NumPressKey, w;       
01E2   1D03           00718     btfss STATUS, 0x02          
01E3   2???           00719     goto blink_on_H1_A
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E4   0AC0           00720     incf Blink,1
01E5   1C40           00721     btfss Blink, 0
01E6   2???           00722     goto blink_on_H1_A
01E7   2???           00723     goto blink_off_H1_A
01E8                  00724 blink_off_H1_A
01E8   3020           00725     movlw ' '
01E9   2???           00726     call write
01EA   2???           00727     goto return_A_H1
01EB                  00728 blink_on_H1_A
01EB   0837           00729     movfw ALARM_HH1
01EC   2???           00730     call write
01ED                  00731 return_A_H1
01ED   0008           00732     return
                      00733     ;------------
01EE                  00734 paintM2_A
01EE   300B           00735     movlw 0xb                   ; если NumPressKey = 0, то вызываем
01EF   0643           00736     xorwf NumPressKey, w;       
01F0   1D03           00737     btfss STATUS, 0x02          
01F1   2???           00738     goto blink_on_M2_A
01F2   0AC0           00739     incf Blink,1
01F3   1C40           00740     btfss Blink, 0
01F4   2???           00741     goto blink_on_M2_A
01F5   2???           00742     goto blink_off_M2_A
01F6                  00743 blink_off_M2_A
01F6   3020           00744     movlw ' '
01F7   2???           00745     call write
01F8   2???           00746     goto return_A_M2
01F9                  00747 blink_on_M2_A
01F9   083A           00748     movfw ALARM_MM2
01FA   2???           00749     call write
01FB                  00750 return_A_M2
01FB   0008           00751     return
                      00752     ;------------
01FC                  00753 paintM1_A
01FC   300C           00754     movlw 0xc                   ; если NumPressKey = 0, то вызываем
01FD   0643           00755     xorwf NumPressKey, w;       
01FE   1D03           00756     btfss STATUS, 0x02          
01FF   2???           00757     goto blink_on_M1_A
0200   0AC0           00758     incf Blink,1
0201   1C40           00759     btfss Blink, 0
0202   2???           00760     goto blink_on_M1_A
0203   2???           00761     goto blink_off_M1_A
0204                  00762 blink_off_M1_A
0204   3020           00763     movlw ' '
0205   2???           00764     call write
0206   2???           00765     goto return_A_M1
0207                  00766 blink_on_M1_A
0207   0839           00767     movfw ALARM_MM1
0208   2???           00768     call write
0209                  00769 return_A_M1
0209   0008           00770     return
                      00771     ;----------
020A                  00772 paint_ALARM
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020A   3001           00773     movlw .1                    ; если NumPressKey = 0, то вызываем
020B   0642           00774     xorwf Blink_Alarm, w;       
020C   1D03           00775     btfss STATUS, 0x02          
020D   2???           00776     goto blink_on_ALARM
020E   0AC0           00777     incf Blink,1
020F   1C40           00778     btfss Blink, 0
0210   2???           00779     goto blink_on_ALARM
0211   2???           00780     goto blink_off_ALARM
0212                  00781 blink_off_ALARM
0212   1088           00782     bcf PORTD,0x01
0213   3020           00783     movlw ' '
0214   2???           00784     call write
0215   3020           00785     movlw ' '
0216   2???           00786     call write
0217   3020           00787     movlw ' '
0218   2???           00788     call write
0219   3020           00789     movlw ' '
021A   2???           00790     call write
021B   3020           00791     movlw ' '
021C   2???           00792     call write
021D   2???           00793     goto return_ALARM
021E                  00794 blink_on_ALARM
021E   1488           00795     bsf PORTD,0x01
021F   3041           00796     movlw 'A'
0220   2???           00797     call write
0221   304C           00798     movlw 'L'
0222   2???           00799     call write
0223   3041           00800     movlw 'A'
0224   2???           00801     call write
0225   3052           00802     movlw 'R'
0226   2???           00803     call write
0227   304D           00804     movlw 'M'
0228   2???           00805     call write
0229                  00806 return_ALARM
0229   0008           00807     return
                      00808     ;-----------
                      00809     
                      00810     ;==========================================
                      00811      
                      00812     
022A                  00813 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
022A   1283           00814     bank0                   ; переход в нулевой банк, для нормального вызова функции из тела программы
022B   1303           00815     bcf STATUS, RP1
022C   01BB           00816     clrf Key1               ; обнуление кодов клавиш
022D   01BC           00817     clrf Key2 
022E   01BD           00818     clrf Key3
022F   01BE           00819     clrf Key4  
0230   01BF           00820     clrf Key9  
0231   01C1           00821     clrf Cnt  
0232                  00822 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
0232   1405           00823     bsf PORTA,0             ; подача питания
0233   1085           00824     bcf PORTA,1
0234   1105           00825     bcf PORTA,2 
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00826     ;movlw .24
                      00827     ;call small_delay
0235   0805           00828     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0236   3938           00829     andlw 0x38
0237   1903           00830     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
0238   2???           00831     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00832     ;movlw .250
                      00833     ;call small_delay  
0239   1985           00834     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
023A   0ABB           00835     incf Key1,F
023B   1A05           00836     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
023C   0ABE           00837     incf Key4,F
                      00838     
023D                  00839 col2                        ; сканируем второй столбец, где нам нужна клавиша 2
023D   1005           00840     bcf PORTA,0             ; подача питания
023E   1485           00841     bsf PORTA,1
023F   1105           00842     bcf PORTA,2 
                      00843     ;movlw .24
                      00844     ;sd
0240   0805           00845     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0241   3938           00846     andlw 0x38
0242   1903           00847     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0243   2???           00848     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00849     ;movlw .250
                      00850     ;sd
0244   1985           00851     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0245   0ABC           00852     incf Key2,F
0246                  00853 col3                ; сканируем третий столбец, где нам нужна клавиша 3
0246   1005           00854     bcf PORTA,0             ; подача питания
0247   1085           00855     bcf PORTA,1
0248   1505           00856     bsf PORTA,2
                      00857     ;movlw .24
                      00858     ;sd
0249   0805           00859     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
024A   3938           00860     andlw 0x38
024B   1903           00861     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
024C   2???           00862     goto end_keyb           ; если Z=0, то пропускаем строку
                      00863     ;movlw .250
                      00864     ;sd
024D   1985           00865     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
024E   0ABD           00866     incf Key3,F
024F   1A85           00867     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
0250   0ABF           00868     incf Key9,F
                      00869  
0251                  00870 end_keyb 
0251   183B           00871     btfsc Key1,0
0252   0AC1           00872     incf Cnt,F
0253   183C           00873     btfsc Key2,0
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0254   0AC1           00874     incf Cnt,F
0255   183D           00875     btfsc Key3,0
0256   0AC1           00876     incf Cnt,F
0257   183E           00877     btfsc Key4,0
0258   0AC1           00878     incf Cnt,F
0259   183F           00879     btfsc Key9,0
025A   0AC1           00880     incf Cnt,F
025B   0008           00881     return                  ; выход из функции
                      00882     
                      00883 ;==============================================
                      00884 
025C                  00885 change_time                 ; функция изменения времени
025C   2???           00886     call Keyboard           ; спрашиваем клавиатуру
025D   183B           00887     btfsc Key1,0
025E   2???           00888     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
025F   183C           00889     btfsc Key2,0
0260   2???           00890     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0261   183D           00891     btfsc Key3,0
0262   2???           00892     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
0263   183E           00893     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0264   2???           00894     goto change_HMS
                      00895     
0265   2???           00896     call LCD_one
0266   2???           00897     call delay_one_sec          ; задержка пока на 1сек
0267   2???           00898     goto change_time
                      00899     
                      00900     ;----------------------------------------
0268                  00901 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
0268   3001           00902     movlw 0x1                           
0269   2???           00903     call delay                          ;задержка крч
026A   2???           00904     call Keyboard                       ;опрос клавиатуры что бы выяснить
026B   08C1           00905     movf Cnt,1                          ;отжата клавиша или нет
026C   1D03           00906     btfss STATUS,Z                      ;если нет, то циклим
026D   2???           00907     goto correct_T_plus             
026E   3001           00908     movlw 0x1                   ; если NumPressKey = 0, то вызываем
026F   0643           00909     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0270   1903           00910     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0271   2???           00911     call correct_H2
                      00912     
0272   3002           00913     movlw 0x2                   ; если NumPressKey = 1, то вызываем
0273   0643           00914     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0274   1903           00915     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0275   2???           00916     call correct_H1
                      00917 
0276   3003           00918     movlw 0x3                   ; если NumPressKey = 2, то вызываем
0277   0643           00919     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0278   1903           00920     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0279   2???           00921     call correct_M2
                      00922     
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027A   3004           00923     movlw 0x4                   ; если NumPressKey = 3, то вызываем
027B   0643           00924     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
027C   1903           00925     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
027D   2???           00926     call correct_M1
                      00927     
027E   3005           00928     movlw 0x5                   ; если NumPressKey = 4, то вызываем
027F   0643           00929     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0280   1903           00930     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0281   2???           00931     call correct_S2
                      00932     
0282   3006           00933     movlw 0x6                   ; если NumPressKey = 5, то вызываем
0283   0643           00934     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0284   1903           00935     btfsc STATUS, 0x02          ; если нет, выходим из функции
0285   2???           00936     call correct_S1
                      00937     
0286   0008           00938     return
                      00939     
                      00940     ;----------------------------------------
                      00941     
0287                  00942 correct_H2                      ; функцию коррекции переменной H2.
0287   0AB1           00943     incf TIME_HH2,1     ; инкремент временной переменной для Н2
0288   3033           00944     movlw 0x33                  ; if !=3, переходим обратно в функцию
0289   0631           00945     xorwf TIME_HH2, w   ; correct_T_plus и проверяем там следующее условие
028A   1D03           00946     btfss STATUS, 0x02
028B   2???           00947     goto return_COR_H2
028C   3030           00948     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
028D   00B1           00949     movwf       TIME_HH2
028E                  00950 return_COR_H2
028E   0008           00951     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00952     
028F                  00953 correct_H1                      ; функцию коррекции переменной H1.
028F   0AB0           00954     incf TIME_HH1,1     ; инкремент временной переменной для Н1
0290   3032           00955     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
0291   0631           00956     xorwf TIME_HH2, w   ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00957                                 ; ограничить единицы при десятках = 2   
0292   1903           00958     btfsc STATUS, 0x02
0293   2???           00959     goto three_H1                       
0294   303A           00960     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
0295   0630           00961 t1  xorwf TIME_HH1, w   
0296   1D03           00962     btfss STATUS, 0x02
0297   2???           00963     goto return_COR_H1
0298   3030           00964     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
0299   00B0           00965     movwf       TIME_HH1
029A                  00966 return_COR_H1
029A   0008           00967     return
                      00968     
029B                  00969 three_H1
029B   3034           00970     movlw 0x34                  ; предел для обнуления при переменной = 2
029C   2???           00971     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00972     
029D                  00973 correct_M2                      ; функцию коррекции переменной M2.
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029D   0AB3           00974     incf TIME_MM2,1
029E   3036           00975     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
029F   0633           00976     xorwf TIME_MM2, w;
02A0   1D03           00977     btfss STATUS, 0x02
02A1   2???           00978     goto return_COR_M2
02A2   3030           00979     movlw       0x30
02A3   00B3           00980     movwf       TIME_MM2
02A4                  00981 return_COR_M2
02A4   0008           00982     return
                      00983     
02A5                  00984 correct_M1                      ; функцию коррекции переменной M1.
02A5   0AB2           00985     incf TIME_MM1,1
02A6   303A           00986     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02A7   0632           00987     xorwf TIME_MM1, w;
02A8   1D03           00988     btfss STATUS, 0x02
02A9   2???           00989     goto return_COR_M1
02AA   3030           00990     movlw       0x30
02AB   00B2           00991     movwf       TIME_MM1
02AC                  00992 return_COR_M1
02AC   0008           00993     return
                      00994     
02AD                  00995 correct_S2                      ; функцию коррекции переменной S2.
02AD   0AB5           00996     incf TIME_SS2,1
02AE   3036           00997     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
02AF   0635           00998     xorwf TIME_SS2, w;
02B0   1D03           00999     btfss STATUS, 0x02
02B1   2???           01000     goto return_COR_S2
02B2   3030           01001     movlw       0x30
02B3   00B5           01002     movwf       TIME_SS2
02B4                  01003 return_COR_S2
02B4   0008           01004     return
                      01005     
02B5                  01006 correct_S1                      ; функцию коррекции переменной S1.
02B5   0AB4           01007     incf TIME_SS1,1
02B6   303A           01008     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02B7   0634           01009     xorwf TIME_SS1, w;
02B8   1D03           01010     btfss STATUS, 0x02
02B9   2???           01011     goto return_COR_S1
02BA   3030           01012     movlw       0x30
02BB   00B4           01013     movwf       TIME_SS1
02BC                  01014 return_COR_S1
02BC   0008           01015     return
                      01016     
                      01017     ;----------------------------------------
                      01018     
02BD                  01019 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
02BD   3001           01020     movlw 0x1                           
02BE   2???           01021     call delay                          ;задержка крч
02BF   2???           01022     call Keyboard                       ;опрос клавиатуры что бы выяснить
02C0   08C1           01023     movf Cnt,1                          ;отжата клавиша или нет
02C1   1D03           01024     btfss STATUS,Z                      ;если нет, то циклим
02C2   2???           01025     goto correct_T_minus                  
02C3   3001           01026     movlw 0x1                   ; если NumPressKey = 0, то вызываем
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C4   0643           01027     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
02C5   1903           01028     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02C6   2???           01029     call correct_H2_minus
                      01030     
02C7   3002           01031     movlw 0x2                   ; если NumPressKey = 1, то вызываем
02C8   0643           01032     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
02C9   1903           01033     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02CA   2???           01034     call correct_H1_minus
                      01035 
02CB   3003           01036     movlw 0x3                   ; если NumPressKey = 2, то вызываем
02CC   0643           01037     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
02CD   1903           01038     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02CE   2???           01039     call correct_M2_minus
                      01040     
02CF   3004           01041     movlw 0x4                   ; если NumPressKey = 3, то вызываем
02D0   0643           01042     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
02D1   1903           01043     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02D2   2???           01044     call correct_M1_minus
                      01045     
02D3   3005           01046     movlw 0x5                   ; если NumPressKey = 4, то вызываем
02D4   0643           01047     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
02D5   1903           01048     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02D6   2???           01049     call correct_S2_minus
                      01050     
02D7   3006           01051     movlw 0x6                   ; если NumPressKey = 5, то вызываем
02D8   0643           01052     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
02D9   1903           01053     btfsc STATUS, 0x02          ; если нет, выходим из функции
02DA   2???           01054     call correct_S1_minus
                      01055     
02DB   0008           01056     return
                      01057     
                      01058     ;----------------------------------------
                      01059     
02DC                  01060 correct_H2_minus                ; функцию коррекции переменной H2.
02DC   03B1           01061     decf TIME_HH2,1     ; декремент временной переменной для Н2
02DD   302F           01062     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
02DE   0631           01063     xorwf TIME_HH2, w   ; correct_T_ и проверяем там следующее условие
02DF   1D03           01064     btfss STATUS, 0x02
02E0   2???           01065     goto return_COR_H2_MIN
02E1   3032           01066     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
02E2   00B1           01067     movwf       TIME_HH2
02E3                  01068 return_COR_H2_MIN
02E3   0008           01069     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01070     
02E4                  01071 correct_H1_minus                ; функцию коррекции переменной H1.
02E4   03B0           01072     decf TIME_HH1,1     ; декремент временной переменной для Н1
02E5   302F           01073     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
02E6   0630           01074     xorwf TIME_HH1, w   ; correct_T_ и проверяем там следующее условие
                      01075                                         
02E7   1D03           01076     btfss STATUS, 0x02
02E8   2???           01077     goto return_COR_H1_MIN              
02E9   3032           01078     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EA   0631           01079     xorwf TIME_HH2, w   
02EB   1903           01080     btfsc STATUS, 0x02
02EC   2???           01081     goto three_H1_minus
02ED   3039           01082     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
02EE   00B0           01083 t2  movwf       TIME_HH1
02EF                  01084 return_COR_H1_MIN
02EF   0008           01085     return
                      01086     
02F0                  01087 three_H1_minus
02F0   3033           01088     movlw 0x33                  ; значение для присваивания при Н2 = 2.
02F1   2???           01089     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      01090     
02F2                  01091 correct_M2_minus                        ; функцию коррекции переменной M2.
02F2   03B3           01092     decf TIME_MM2,1
02F3   302F           01093     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
02F4   0633           01094     xorwf TIME_MM2, w;
02F5   1D03           01095     btfss STATUS, 0x02
02F6   2???           01096     goto return_COR_M2_MIN
02F7   3035           01097     movlw       0x35
02F8   00B3           01098     movwf       TIME_MM2
02F9                  01099 return_COR_M2_MIN
02F9   0008           01100     return
                      01101     
02FA                  01102 correct_M1_minus                        ; функцию коррекции переменной M1.
02FA   03B2           01103     decf TIME_MM1,1
02FB   302F           01104     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
02FC   0632           01105     xorwf TIME_MM1, w;
02FD   1D03           01106     btfss STATUS, 0x02
02FE   2???           01107     goto return_COR_M1_MIN
02FF   3039           01108     movlw       0x39
0300   00B2           01109     movwf       TIME_MM1
0301                  01110 return_COR_M1_MIN
0301   0008           01111     return
                      01112     
0302                  01113 correct_S2_minus                        ; функцию коррекции переменной S2.
0302   03B5           01114     decf TIME_SS2,1
0303   302F           01115     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0304   0635           01116     xorwf TIME_SS2, w;
0305   1D03           01117     btfss STATUS, 0x02
0306   2???           01118     goto return_COR_S2_MIN
0307   3035           01119     movlw       0x35
0308   00B5           01120     movwf       TIME_SS2
0309                  01121 return_COR_S2_MIN
0309   0008           01122     return
                      01123     
030A                  01124 correct_S1_minus                        ; функцию коррекции переменной S1.
030A   03B4           01125     decf TIME_SS1,1
030B   302F           01126     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
030C   0634           01127     xorwf TIME_SS1, w;
030D   1D03           01128     btfss STATUS, 0x02
030E   2???           01129     goto return_COR_S1_MIN
030F   3039           01130     movlw       0x39
0310   00B4           01131     movwf       TIME_SS1
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0311                  01132 return_COR_S1_MIN
0311   0008           01133     return
                      01134     
                      01135     ;==============================================
                      01136     
0312                  01137 save_T                          ; функция проверки и сохранения времени
0312   3001           01138     movlw 0x1                           
0313   2???           01139     call delay                          ;задержка крч
0314   2???           01140     call Keyboard                       ;опрос клавиатуры что бы выяснить
0315   08C1           01141     movf Cnt,1                          ;отжата клавиша или нет
0316   1D03           01142     btfss STATUS,Z                      ;если нет, то циклим
0317   2???           01143     goto save_T
0318   3006           01144     movlw 0x6                   ; если происходит переполнение NumPressKey
0319   0643           01145     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
031A   1903           01146     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
031B   2???           01147     goto START                  ; в постоянные
031C   0AC3           01148     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
031D   2???           01149     goto change_time            ; его и возвращаемся в функцию изменения времени
                      01150     
031E                  01151 change_HMS
031E   3001           01152     movlw 0x1                           
031F   2???           01153     call delay                          ;задержка крч
0320   2???           01154     call Keyboard                       ;опрос клавиатуры что бы выяснить
0321   08C1           01155     movf Cnt,1                          ;отжата клавиша или нет
0322   1D03           01156     btfss STATUS,Z                      ;если нет, то циклим
0323   2???           01157     goto change_HMS
0324   0846           01158     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
0325   00B1           01159     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0326   0845           01160     movfw TEMP_TIME_HH1         ; значение)
0327   00B0           01161     movwf TIME_HH1
0328   0848           01162     movfw TEMP_TIME_MM2         
0329   00B3           01163     movwf TIME_MM2
032A   0847           01164     movfw TEMP_TIME_MM1         
032B   00B2           01165     movwf TIME_MM1
032C   084A           01166     movfw TEMP_TIME_SS2         
032D   00B5           01167     movwf TIME_SS2
032E   0849           01168     movfw TEMP_TIME_SS1         
032F   00B4           01169     movwf TIME_SS1
0330   2???           01170     goto START                  ; возврат в основной цикл
                      01171     
                      01172     ;==============================================
                      01173     ;==============================================
                      01174     ;==============================================
                      01175     
0331                  01176 change_day                  ; функция изменения дня недели
0331   2???           01177     call Keyboard
0332   183B           01178     btfsc Key1,0
0333   2???           01179     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0334   183C           01180     btfsc Key2,0
0335   2???           01181     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0336   183D           01182     btfsc Key3,0            ; выход из настройки времени в основной цикл без сохранения результата
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0337   2???           01183     goto save_end_day
0338   183E           01184     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0339   2???           01185     goto save_day_ch
                      01186     
033A   2???           01187     call LCD_one
033B   2???           01188     call delay_one_sec          ; задержка пока на 1сек
033C   2???           01189     goto change_day
                      01190     
033D                  01191 plus_day_ch
033D   3001           01192     movlw 0x1                           
033E   2???           01193     call delay                          ;задержка крч
033F   2???           01194     call Keyboard                       ;опрос клавиатуры что бы выяснить
0340   08C1           01195     movf Cnt,1                          ;отжата клавиша или нет
0341   1D03           01196     btfss STATUS,Z                      ;если нет, то циклим
0342   2???           01197     goto plus_day_ch
0343   0AB6           01198     incf DAY,1
0344   3007           01199     movlw .7                    ; inc переменной День
0345   0636           01200     xorwf DAY, w;
0346   1D03           01201     btfss STATUS, 0x02          ; is not working 
0347   2???           01202     goto change_day                     ; 
0348   3000           01203     movlw .0
0349   00B6           01204     movwf DAY
034A   2???           01205     goto change_day
                      01206     
034B                  01207 minus_day_ch
034B   3001           01208     movlw 0x1                           
034C   2???           01209     call delay                          ;задержка крч
034D   2???           01210     call Keyboard                       ;опрос клавиатуры что бы выяснить
034E   08C1           01211     movf Cnt,1                          ;отжата клавиша или нет
034F   1D03           01212     btfss STATUS,Z                      ;если нет, то циклим
0350   2???           01213     goto minus_day_ch
0351   03B6           01214     decf DAY,1
0352   30FF           01215     movlw .255                  ; inc переменной День
0353   0636           01216     xorwf DAY, w;
0354   1D03           01217     btfss STATUS, 0x02          ; is not working 
0355   2???           01218     goto change_day                     
0356   3006           01219     movlw .6
0357   00B6           01220     movwf DAY
0358   2???           01221     goto change_day
                      01222     
0359                  01223 save_day_ch
0359   3001           01224     movlw 0x1                           
035A   2???           01225     call delay                          ;задержка крч
035B   2???           01226     call Keyboard                       ;опрос клавиатуры что бы выяснить
035C   08C1           01227     movf Cnt,1                          ;отжата клавиша или нет
035D   1D03           01228     btfss STATUS,Z                      ;если нет, то циклим
035E   2???           01229     goto save_day_ch
035F   084B           01230     movfw TEMP_DAY
0360   00B6           01231     movwf DAY
0361   2???           01232     goto START
                      01233     
0362                  01234 save_end_day
0362   3001           01235     movlw 0x1                           
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0363   2???           01236     call delay                          ;задержка крч
0364   2???           01237     call Keyboard                       ;опрос клавиатуры что бы выяснить
0365   08C1           01238     movf Cnt,1                          ;отжата клавиша или нет
0366   1D03           01239     btfss STATUS,Z                      ;если нет, то циклим
0367   2???           01240     goto save_end_day
0368   2???           01241     goto START
                      01242     ;==============================================
                      01243     ;==============================================
                      01244     ;==============================================
                      01245     
                      01246     ;==============================================
0369                  01247 change_alarm                
0369   2???           01248     call Keyboard           ; спрашиваем клавиатуру
036A   183B           01249     btfsc Key1,0
036B   2???           01250     call correct_A_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
036C   183C           01251     btfsc Key2,0
036D   2???           01252     call correct_A_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
036E   183D           01253     btfsc Key3,0
036F   2???           01254     goto save_A             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
0370   183E           01255     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0371   2???           01256     goto change_AHMS
                      01257     
0372   2???           01258     call LCD_two
                      01259     
0373   2???           01260     call delay_one_sec          ; задержка пока на 1сек
0374   2???           01261     goto change_alarm
                      01262     
                      01263     ;----------------------------------------
                      01264     
0375                  01265 correct_A_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
0375   3001           01266     movlw 0x1                           
0376   2???           01267     call delay                          ;задержка крч
0377   2???           01268     call Keyboard                       ;опрос клавиатуры что бы выяснить
0378   08C1           01269     movf Cnt,1                          ;отжата клавиша или нет
0379   1D03           01270     btfss STATUS,Z                      ;если нет, то циклим
037A   2???           01271     goto correct_A_plus                     
037B   3009           01272     movlw 0x9                   ; если NumPressKey = 0, то вызываем
037C   0643           01273     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
037D   1903           01274     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
037E   2???           01275     call correct_H2_A
                      01276     
037F   300A           01277     movlw 0xa           ; если NumPressKey = 1, то вызываем
0380   0643           01278     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0381   1903           01279     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0382   2???           01280     call correct_H1_A
                      01281 
0383   300B           01282     movlw 0xb                   ; если NumPressKey = 2, то вызываем
0384   0643           01283     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0385   1903           01284     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0386   2???           01285     call correct_M2_A
                      01286     
0387   300C           01287     movlw 0xc                   ; если NumPressKey = 3, то вызываем
0388   0643           01288     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0389   1903           01289     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
038A   2???           01290     call correct_M1_A
                      01291     
038B   0008           01292     return
                      01293     
                      01294     ;----------------------------------------
                      01295     
038C                  01296 correct_H2_A                    ; функцию коррекции переменной H2.
038C   0AB8           01297     incf ALARM_HH2,1    ; инкремент временной переменной для Н2
038D   3033           01298     movlw 0x33                  ; if !=3, переходим обратно в функцию
038E   0638           01299     xorwf ALARM_HH2, w  ; correct_T_plus и проверяем там следующее условие
038F   1D03           01300     btfss STATUS, 0x02
0390   2???           01301     goto return_COR_H2_A
0391   3030           01302     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
0392   00B8           01303     movwf       ALARM_HH2
0393                  01304 return_COR_H2_A
0393   0008           01305     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      01306     
0394                  01307 correct_H1_A                    ; функцию коррекции переменной H1.
0394   0AB7           01308     incf ALARM_HH1,1    ; инкремент временной переменной для Н1
0395   3032           01309     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
0396   0638           01310     xorwf ALARM_HH2, w  ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01311                                 ; ограничить единицы при десятках = 2   
0397   1903           01312     btfsc STATUS, 0x02
0398   2???           01313     goto three_H1_A                     
0399   303A           01314     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
039A   0637           01315 ta1 xorwf ALARM_HH1, w  
039B   1D03           01316     btfss STATUS, 0x02
039C   2???           01317     goto return_COR_H1_A
039D   3030           01318     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
039E   00B7           01319     movwf       ALARM_HH1
039F                  01320 return_COR_H1_A
039F   0008           01321     return
                      01322     
03A0                  01323 three_H1_A
03A0   3034           01324     movlw 0x34                  ; предел для обнуления при переменной = 2
03A1   2???           01325     goto ta1                    ; возврат к метке t1 для продолжения корректной работы
                      01326     
03A2                  01327 correct_M2_A                    ; функцию коррекции переменной M2.
03A2   0ABA           01328     incf ALARM_MM2,1
03A3   3036           01329     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
03A4   063A           01330     xorwf ALARM_MM2, w;
03A5   1D03           01331     btfss STATUS, 0x02
03A6   2???           01332     goto return_COR_M2_A
03A7   3030           01333     movlw       0x30
03A8   00BA           01334     movwf       ALARM_MM2
03A9                  01335 return_COR_M2_A
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A9   0008           01336     return
                      01337     
03AA                  01338 correct_M1_A                    ; функцию коррекции переменной M1.
03AA   0AB9           01339     incf ALARM_MM1,1
03AB   303A           01340     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
03AC   0639           01341     xorwf ALARM_MM1, w;
03AD   1D03           01342     btfss STATUS, 0x02
03AE   2???           01343     goto return_COR_M1_A
03AF   3030           01344     movlw       0x30
03B0   00B9           01345     movwf       ALARM_MM1
03B1                  01346 return_COR_M1_A
03B1   0008           01347     return
                      01348     
                      01349     ;----------------------------------------
                      01350     
03B2                  01351 correct_A_minus                 ; функция типа switch для ввода отдельных символов(декремент)
03B2   3001           01352     movlw 0x1                           
03B3   2???           01353     call delay                          ;задержка крч
03B4   2???           01354     call Keyboard                       ;опрос клавиатуры что бы выяснить
03B5   08C1           01355     movf Cnt,1                          ;отжата клавиша или нет
03B6   1D03           01356     btfss STATUS,Z                      ;если нет, то циклим
03B7   2???           01357     goto correct_A_minus
03B8   3009           01358     movlw 0x9                   ; если NumPressKey = 0, то вызываем
03B9   0643           01359     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
03BA   1903           01360     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03BB   2???           01361     call correct_H2_minus_A
                      01362     
03BC   300A           01363     movlw 0xa                   ; если NumPressKey = 1, то вызываем
03BD   0643           01364     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03BE   1903           01365     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03BF   2???           01366     call correct_H1_minus_A
                      01367 
03C0   300B           01368     movlw 0xb                   ; если NumPressKey = 2, то вызываем
03C1   0643           01369     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
03C2   1903           01370     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C3   2???           01371     call correct_M2_minus_A
                      01372     
03C4   300C           01373     movlw 0xc                   ; если NumPressKey = 3, то вызываем
03C5   0643           01374     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
03C6   1903           01375     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C7   2???           01376     call correct_M1_minus_A
                      01377     
03C8   0008           01378     return
                      01379     
                      01380     ;----------------------------------------
                      01381     
03C9                  01382 correct_H2_minus_A              ; функцию коррекции переменной H2.
03C9   03B8           01383     decf ALARM_HH2,1    ; декремент временной переменной для Н2
03CA   302F           01384     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
03CB   0638           01385     xorwf ALARM_HH2, w  ; correct_T_ и проверяем там следующее условие
03CC   1D03           01386     btfss STATUS, 0x02
03CD   2???           01387     goto return_COR_H2_A_minus
03CE   3032           01388     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            сятка часов
03CF   00B8           01389     movwf       ALARM_HH2
03D0                  01390 return_COR_H2_A_minus
03D0   0008           01391     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01392     
03D1                  01393 correct_H1_minus_A              ; функцию коррекции переменной H1.
03D1   03B7           01394     decf ALARM_HH1,1    ; декремент временной переменной для Н1
03D2   302F           01395     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
03D3   0637           01396     xorwf ALARM_HH1, w  ; correct_T_ и проверяем там следующее условие
                      01397                                         
03D4   1D03           01398     btfss STATUS, 0x02
03D5   2???           01399     goto return_COR_H1_A_minus          
03D6   3032           01400     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
03D7   0638           01401     xorwf ALARM_HH2, w  
03D8   1903           01402     btfsc STATUS, 0x02
03D9   2???           01403     goto three_H1_minus_A
03DA   3039           01404     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
03DB   00B7           01405 ta2 movwf       ALARM_HH1
03DC                  01406 return_COR_H1_A_minus
03DC   0008           01407     return
                      01408     
03DD                  01409 three_H1_minus_A
03DD   3033           01410     movlw 0x33                  ; значение для присваивания при Н2 = 2.
03DE   2???           01411     goto ta2                    ; возврат к метке t2 для продолжения корректной работы
                      01412     
03DF                  01413 correct_M2_minus_A                      ; функцию коррекции переменной M2.
03DF   03BA           01414     decf ALARM_MM2,1
03E0   302F           01415     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
03E1   063A           01416     xorwf ALARM_MM2, w;
03E2   1D03           01417     btfss STATUS, 0x02
03E3   2???           01418     goto return_COR_M2_A_minus
03E4   3035           01419     movlw       0x35
03E5   00BA           01420     movwf       ALARM_MM2
03E6                  01421 return_COR_M2_A_minus
03E6   0008           01422     return
                      01423     
03E7                  01424 correct_M1_minus_A                      ; функцию коррекции переменной M1.
03E7   03B9           01425     decf ALARM_MM1,1
03E8   302F           01426     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
03E9   0639           01427     xorwf ALARM_MM1, w;
03EA   1D03           01428     btfss STATUS, 0x02
03EB   2???           01429     goto return_COR_M1_A_minus
03EC   3039           01430     movlw       0x39
03ED   00B9           01431     movwf       ALARM_MM1
03EE                  01432 return_COR_M1_A_minus
03EE   0008           01433     return
                      01434     
                      01435     ;==============================================
                      01436     
03EF                  01437 save_A                          ; функция проверки и сохранения времени
03EF   3001           01438     movlw 0x1                           
03F0   2???           01439     call delay                          ;задержка крч
03F1   2???           01440     call Keyboard                       ;опрос клавиатуры что бы выяснить
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F2   08C1           01441     movf Cnt,1                          ;отжата клавиша или нет
03F3   1D03           01442     btfss STATUS,Z                      ;если нет, то циклим
03F4   2???           01443     goto save_A
03F5   300D           01444     movlw 0xd                   ; если происходит переполнение NumPressKey
03F6   0643           01445     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
03F7   1903           01446     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
03F8   2???           01447     goto START                  ; в постоянные
03F9   0AC3           01448     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
03FA   2???           01449     goto change_alarm           ; его и возвращаемся в функцию изменения времени
                      01450     
03FB                  01451 change_AHMS
03FB   3001           01452     movlw 0x1                           
03FC   2???           01453     call delay                          ;задержка крч
03FD   2???           01454     call Keyboard                       ;опрос клавиатуры что бы выяснить
03FE   08C1           01455     movf Cnt,1                          ;отжата клавиша или нет
03FF   1D03           01456     btfss STATUS,Z                      ;если нет, то циклим
0400   2???           01457     goto change_AHMS
0401   084D           01458     movfw TEMP_ALARM_HH2                ; записываем значения временных переменных в постоянные (NPK 
0402   00B8           01459     movwf ALARM_HH2             ; необходим для определения ячейки, в которую записываем
0403   084C           01460     movfw TEMP_ALARM_HH1                ; значение)
0404   00B7           01461     movwf ALARM_HH1
0405   084F           01462     movfw TEMP_ALARM_MM2                
0406   00BA           01463     movwf ALARM_MM2
0407   084E           01464     movfw TEMP_ALARM_MM1                
0408   00B9           01465     movwf ALARM_MM1
0409   2???           01466     goto START                  ; возврат в основной цикл
                      01467     
                      01468     ;==============================================
                      01469     ;==============================================
                      01470     ;==============================================
                      01471                             
                      01472 ;small_delay:                   ; задержка для драйвера
                      01473 ;    movwf fCOUNTER1
                      01474 ;    clrwdt
                      01475 ;    decfsz fCOUNTER1,F
                      01476 ;    goto $-2
                      01477 ;    return
                      01478     
Warning[205]: Found directive in column 1. (end)
                      01479 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           00000132
BF                                00000000
BRGH                              00000002
Blink                             00000040
Blink_Alarm                       00000042
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Cnt                               00000041
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               000000CF
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key9                              0000003F
Keyboard                          0000022A
LCD_one                           00000148
LCD_two                           000001C2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULL_BA_NAB                       000000C3
NumAlarmBit                       00000050
NumPressKey                       00000043
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Reg_1                             00000023
Reg_2                             00000024
Reg_3                             00000025
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000044
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_013F                      0000013F
_.org_0_0142                      00000142
_.org_0_0144                      00000144
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

_XT_OSC                           00003FFD
__16F877                          00000001
alarm_plus_blink                  0000011C
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
blinkON                           000000C7
blink_off_ALARM                   00000212
blink_off_H1                      00000172
blink_off_H1_A                    000001E8
blink_off_H2                      00000164
blink_off_H2_A                    000001DA
blink_off_M1                      0000018E
blink_off_M1_A                    00000204
blink_off_M2                      00000180
blink_off_M2_A                    000001F6
blink_off_S1                      000001AA
blink_off_S2                      0000019C
blink_off_day                     000001B8
blink_on_ALARM                    0000021E
blink_on_H1                       00000175
blink_on_H1_A                     000001EB
blink_on_H2                       00000167
blink_on_H2_A                     000001DD
blink_on_M1                       00000191
blink_on_M1_A                     00000207
blink_on_M2                       00000183
blink_on_M2_A                     000001F9
blink_on_S1                       000001AD
blink_on_S2                       0000019F
blink_on_day                      000001BF
change_AHMS                       000003FB
change_HMS                        0000031E
change_alarm                      00000369
change_day                        00000331
change_time                       0000025C
col1                              00000232
col2                              0000023D
col3                              00000246
correct_A_minus                   000003B2
correct_A_plus                    00000375
correct_H1                        0000028F
correct_H1_A                      00000394
correct_H1_minus                  000002E4
correct_H1_minus_A                000003D1
correct_H2                        00000287
correct_H2_A                      0000038C
correct_H2_minus                  000002DC
correct_H2_minus_A                000003C9
correct_M1                        000002A5
correct_M1_A                      000003AA
correct_M1_minus                  000002FA
correct_M1_minus_A                000003E7
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

correct_M2                        0000029D
correct_M2_A                      000003A2
correct_M2_minus                  000002F2
correct_M2_minus_A                000003DF
correct_S1                        000002B5
correct_S1_minus                  0000030A
correct_S2                        000002AD
correct_S2_minus                  00000302
correct_T_minus                   000002BD
correct_T_plus                    00000268
day_plus_blink                    00000112
delay                             0000012E
delay_one_sec                     00000138
end_ALARM                         000000CC
end_clock                         0000009C
end_keyb                          00000251
exday                             00000108
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            000000F4
if_S_ONE_ZERO                     000000A2
if_S_TWO_ZERO                     000000A7
if_T_AT_H1                        000000B1
if_T_AT_H2                        000000AC
if_T_AT_M1                        000000BB
if_T_AT_M2                        000000B6
inc_BA                            000000C0
minus_day_ch                      0000034B
monday                            000000D8
paintH1                           0000016A
paintH1_A                         000001E0
paintH2                           0000015C
paintH2_A                         000001D2
paintM1                           00000186
paintM1_A                         000001FC
paintM2                           00000178
paintM2_A                         000001EE
paintS1                           000001A2
paintS2                           00000194
paint_ALARM                       0000020A
plus_day_ch                       0000033D
printDay                          000001B0
return_ALARM                      00000229
return_A_H1                       000001ED
return_A_H2                       000001DF
return_A_M1                       00000209
return_A_M2                       000001FB
return_COR_H1                     0000029A
return_COR_H1_A                   0000039F
return_COR_H1_A_minus             000003DC
return_COR_H1_MIN                 000002EF
return_COR_H2                     0000028E
MPASM 5.75                          MAIN.ASM   10-26-2017  13:19:51         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

return_COR_H2_A                   00000393
return_COR_H2_A_minus             000003D0
return_COR_H2_MIN                 000002E3
return_COR_M1                     000002AC
return_COR_M1_A                   000003B1
return_COR_M1_A_minus             000003EE
return_COR_M1_MIN                 00000301
return_COR_M2                     000002A4
return_COR_M2_A                   000003A9
return_COR_M2_A_minus             000003E6
return_COR_M2_MIN                 000002F9
return_COR_S1                     000002BC
return_COR_S1_MIN                 00000311
return_COR_S2                     000002B4
return_COR_S2_MIN                 00000309
return_DAY                        000001C1
return_H1                         00000177
return_H2                         00000169
return_M1                         00000193
return_M2                         00000185
return_S1                         000001AF
return_S2                         000001A1
saturday                          000000FB
save_A                            000003EF
save_T                            00000312
save_day_ch                       00000359
save_end_day                      00000362
sunday                            00000102
t1                                00000295
t2                                000002EE
ta1                               0000039A
ta2                               000003DB
ten_clock                         00000095
three_H1                          0000029B
three_H1_A                        000003A0
three_H1_minus                    000002F0
three_H1_minus_A                  000003DD
thursday                          000000ED
time_plus_blink                   00000109
tuesday                           000000DF
wait                              
wednesday                         000000E6
write                             00000126

Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

