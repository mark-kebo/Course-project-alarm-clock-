MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.7                                                    *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013 ;директивы  типа  контроллера,  под-
                      00014 ;ключения  заголовочного  файла  и  вы-
                      00015 ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ;директивы, позволяющие заменять в теле  ПО  команды,  указанные  после
                      00019 ;этой  директивы  (bcf  ,  bsf)  –  метками bank0, bank1. Обратную замену производит компилятор
  00000020            00020 WAIT                equ     0x20
  00000023            00021 Reg_1               equ     0x23    ;Регистры, используемые для задержек
  00000024            00022 Reg_2               equ     0x24
  00000025            00023 Reg_3               equ     0x25
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30    ;Регистр, который хранит значение единиц часов
  00000031            00027 TIME_HH2            equ     0x31    ;Регистр, который хранит значение десятков часов
  00000032            00028 TIME_MM1            equ     0x32    ;Регистр, который хранит значение единиц минут
  00000033            00029 TIME_MM2            equ     0x33    ;Регистр, который хранит значение десятков минут
  00000034            00030 TIME_SS1            equ     0x34    ;Регистр, который хранит значение единиц секунд
  00000035            00031 TIME_SS2            equ     0x35    ;Регистр, который хранит значение десятков секунд
  00000036            00032 DAY                 equ     0x36    ;Регистр, который хранит значение дня недели
  00000037            00033 ALARM_HH1           equ     0x37    ;Регистр, который хранит значение единиц часов для будильника
  00000038            00034 ALARM_HH2           equ     0x38    ;Регистр, который хранит значение десятков часов для будильника
  00000039            00035 ALARM_MM1           equ     0x39    ;Регистр, который хранит значение единиц минут для будильника
  0000003A            00036 ALARM_MM2           equ     0x3A    ;Регистр, который хранит значение десятков минут для будильника
  0000003B            00037 Key1                equ     0x3B    ;Регистры, которые хранят состояние клавиш в драйвере  
  0000003C            00038 Key2                equ     0x3C    ;клавиатуры Keyboard
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key9                equ     0x3F
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Blink               equ     0x40    ;Регистр, для управления морганием элементов экрана
  00000041            00043 Cnt                 equ     0x41    ;Регистр, который хранит состояние клавиши в драйвере (нажата или не
                            т)
  00000042            00044 Blink_Alarm         equ     0x42    ;Управляющий регистр, который выполняет функцию включения\выключения
                             будильника
  00000043            00045 NumPressKey         equ     0x43    ;Управляющий регистр-метка, для посимвольного изменения значений и в
                            ыбора моргающего элемента
  00000044            00046 fCOUNTER1           equ     0x44    ;Регистр используемый для задержек    
  00000045            00047 TEMP_TIME_HH1       equ     0x45    ;Регистры, который хранит значения: часов, минут, секунд основного в
                            ремени;
  00000046            00048 TEMP_TIME_HH2       equ     0x46    ;значение дня и минут, часов будильника. Нужены для сохранения текущ
                            их значений
  00000047            00049 TEMP_TIME_MM1       equ     0x47    ;перед изменением в соответствующих режимах
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumAlarmBit         equ     0x50    ;Так же, как Blink_Alarm, управляет корректным включением и выключен
                            ием будильника
                      00059     
                      00060 wait  macro     time
                      00061     movlw    (time/5)-1
                      00062     movwf    WAIT
                      00063     call    wait5u
                      00064     endm
                      00065 ;макрос паузы с именем wait. Особенность этого макроса состоит в том, что
                      00066 ;у  него  имеется  параметр  –  time.  При вызове  макроса  значение  параметра
                      00067 ;указывается  после  имени  макроса  в виде  целого  десятичного  числа  крат-
                      00068 ;ного  5  (в  данном  примере).  В  теле макроса  это  число  подставляется  в
                      00069 ;«переменную» time и далее используется вычисленное значение (которое в
                      00070 ;данном случае  выступает  в  роли  константы, записываемой в W). Вместе с
                      00071 ;процедурой  wait5u  длительность  задержки,  обеспечиваемая  макросом
                      00072 ;равна time микросекунд
                      00073     org 0x0000
0000   0183           00074     clrf STATUS
0001   3000           00075     movlw 0x00
0002   008A           00076     movwf PCLATH
0003   2???           00077     goto begin
                      00078 ;Выбор нулевой страницы памяти команд и размещение на ней откомпилированного кода
                      00079 
0004                  00080 begin
0004   1683           00081     bank1                       ;Выбор первого банка памяти. Для вы-
                      00082                                 ;зова используется метка bank1, объяв-
                      00083                                 ;ленная выше директивой #define.
0005   308F           00084     movlw 0x8F                  ;Установка  максимального  времени
0006   0081           00085     movwf OPTION_REG            ;срабатывания  сторожевого  таймера  и его сброс
0007   0064           00086     clrwdt
0008   018B           00087     clrf INTCON                 ;Отключение  прерываний  и  их  обработки
0009   018C           00088     clrf PIE1
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   018D           00089     clrf PIE2
000B   3000           00090     movlw .0                    ;Конфигурирование  портов  А, В, С, Е, D
000C   0086           00091     movwf TRISB
000D   0087           00092     movwf TRISC
000E   0089           00093     movwf TRISE
000F   30F8           00094     movlw b'11111000' 
0010   0085           00095     movwf TRISA 
0011   3000           00096     movlw b'00000000'           
0012   0088           00097     movwf TRISD
0013   300F           00098     movlw b'00001111'
0014   0081           00099     movwf OPTION_REG
0015   019F           00100     clrf ADCON1 
0016   149F           00101     bsf ADCON1,0x01 
0017   151F           00102     bsf ADCON1,0x02 
0018   1283           00103     bank0                       ;Подготовка к передаче команд на контроллер
0019   01BB           00104     clrf Key1    
001A   01BC           00105     clrf Key2       
001B   01BD           00106     clrf Key3       
001C   01BE           00107     clrf Key4              
001D   01BF           00108     clrf Key9               
001E   01C1           00109     clrf Cnt                
001F   0187           00110     clrf PORTC
0020   0188           00111     clrf PORTD
0021   3001           00112     movlw 0x01
0022   2???           00113     call write
0023   300F           00114     movlw 0x0f
0024   2???           00115     call delay
                      00116 ;Передача команды Clear  Display для очистки дисплея и установки счетчика адреса видеопа-
                      00117 ;мяти  на  нулевой  адрес  (первое  знакоместо  в верхней строке), с необходимой задержкой
0025   0064           00118     clrwdt
0026   3038           00119     movlw 0x38
0027   2???           00120     call write
0028   300F           00121     movlw 0x0f
0029   2???           00122     call delay
                      00123 
                      00124 ;Передача команды Function Set для установки режима  2-х  строчного  индикатора,  размера
                      00125 ;знакоместа 5х7 и 8 разрядной шины данных
002A   3006           00126     movlw 0x06
002B   2???           00127     call write
002C   300F           00128     movlw 0x0f
002D   2???           00129     call delay
                      00130 ;Передача  команды  Entry  Mode  Set  для  установки режима увеличения счетчика адреса ви-
                      00131 ;деопамяти, после каждой записи символа в нее, при неподвижности видеопамяти относительно индикатора
002E   300C           00132     movlw 0x0c
002F   2???           00133     call write
0030   300F           00134     movlw 0x0f
0031   2???           00135     call delay
                      00136 ;Передача  команды  Display  ON/OFF  control для включения дисплея с отключенным курсо-
                      00137 ;ром.  На  этом  этап инициализации дисплея закончен.
0032   3036           00138     movlw       0x36            ;в основной цикл программы
0033   00B7           00139     movwf       ALARM_HH1
0034   3030           00140     movlw       0x30
0035   00B5           00141     movwf       TIME_SS2 
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0036   00B4           00142     movwf       TIME_SS1        ;Присвоение начальных значений регистров времени и дня,
0037   00B9           00143     movwf       ALARM_MM1       ;а так же обнуление управляющих регистров до перехода 
0038   00B5           00144     movwf       TIME_SS2        ;в основной цикл программы
0039   00B0           00145     movwf       TIME_HH1
003A   00B1           00146     movwf       TIME_HH2
003B   00B2           00147     movwf       TIME_MM1
003C   00B3           00148     movwf       TIME_MM2
003D   00B8           00149     movwf       ALARM_HH2
003E   00BA           00150     movwf       ALARM_MM2
003F   3000           00151     movlw       .0
0040   00B6           00152     movwf       DAY
0041   00C2           00153     movwf       Blink_Alarm
0042   00D0           00154     movwf       NumAlarmBit
0043   3000           00155     movlw       b'00000000'
0044   00C0           00156     movwf       Blink
                      00157 
0045                  00158 START                           ;Метка начала основного цикла программы
0045   3000           00159     movlw .0                    ;Записываем значения времени, дня и обнуление управляющего регистра 
0046   00C2           00160     movwf Blink_Alarm           ;в начале каждого прохода основного цикла
0047   0831           00161     movfw TIME_HH2              
0048   00C6           00162     movwf TEMP_TIME_HH2         
0049   0830           00163     movfw TIME_HH1              
004A   00C5           00164     movwf TEMP_TIME_HH1
004B   0833           00165     movfw TIME_MM2              
004C   00C8           00166     movwf TEMP_TIME_MM2
004D   0832           00167     movfw TIME_MM1              
004E   00C7           00168     movwf TEMP_TIME_MM1
004F   0835           00169     movfw TIME_SS2              
0050   00CA           00170     movwf TEMP_TIME_SS2
0051   0834           00171     movfw TIME_SS1              
0052   00C9           00172     movwf TEMP_TIME_SS1
0053   0836           00173     movfw DAY
0054   00CB           00174     movwf TEMP_DAY
0055   3000           00175     movlw 0x00
0056   00C3           00176     movwf NumPressKey           ; NumPressKey каждый раз устанавливаем в начальное значение
0057   0837           00177     movfw ALARM_HH1
0058   00CC           00178     movwf TEMP_ALARM_HH1
0059   0838           00179     movfw ALARM_HH2
005A   00CD           00180     movwf TEMP_ALARM_HH2
005B   0839           00181     movfw ALARM_MM1
005C   00CE           00182     movwf TEMP_ALARM_MM1
005D   083A           00183     movfw ALARM_MM2
005E   00CF           00184     movwf TEMP_ALARM_MM2
                      00185     
005F   2???           00186     call Keyboard               ; Читаем клавиатуру
0060   183B           00187     btfsc Key1,0                ; Проверка нажатия клавиши "1",  если нажата, то переходим 
0061   2???           00188     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
0062   183C           00189     btfsc Key2,0                ; Проверка нажатия клавиши "2",  если нажата, то переходим 
0063   2???           00190     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
0064   183D           00191     btfsc Key3,0                ; Проверка нажатия клавиши "3",  если нажата, то переходим 
0065   2???           00192     call alarm_plus_blink       ; к изменению будильника, нет - тогда едем дальше
                      00193         
0066   2???           00194     call LCD_one                ;Отрисовка первой строки на дисплее             
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00195 
                      00196     ;Счет единиц секунд (0-9) - TIME_SS1 all-41
0067   0AB4           00197     incf TIME_SS1,1
0068   303A           00198     movlw 0x3A                  ; Выполняем инкремент значения единиц секунд и если
0069   0634           00199     xorwf TIME_SS1, w;          ; это значение !=10, то переходим к метке конца обработки времени 
006A   1D03           00200     btfss STATUS, 0x02          ; Если же значение секунды = 10, то обнуляем его и переходим к обработке
006B   2???           00201     goto v_nop                  ; десятков секунд 
006C   3030           00202     movlw 0x30                  ; (37)
006D   00B4           00203     movwf TIME_SS1
                      00204 
                      00205     ;Счет десятков секунд (0-5) - TIME_SS2
006E   0AB5           00206     incf TIME_SS2,1             ; Выполняем инкремент значения десятков секунд и если
006F   3036           00207     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
0070   0635           00208     xorwf TIME_SS2, w;          ; Если же значение секунды = 6, то обнуляем его и переходим к обработке
0071   1D03           00209     btfss STATUS, 0x02          ; единиц минут
0072   2???           00210     goto c_nop                  ; (31)
0073   3030           00211     movlw 0x30
0074   00B5           00212     movwf       TIME_SS2
                      00213         
                      00214     ;Счет единиц минут (0-9) - TIME_MM1
0075   0AB2           00215     incf TIME_MM1,1             ; Выполняем инкремент значения единиц минут и если
0076   303A           00216     movlw 0x3A                  ; это значение !=10, то переходим к метке конца обработки времени 
0077   0632           00217     xorwf TIME_MM1, w           ; Если же значение минуты = 10, то обнуляем его и переходим к обработке
0078   1D03           00218     btfss STATUS, 0x02          ; десятков минут
0079   2???           00219     goto x_nop                  ; (25)
007A   3030           00220     movlw 0x30
007B   00B2           00221     movwf       TIME_MM1
                      00222 
                      00223     ;Счет десятков минут (0-5) - TIME_MM2(5)
007C   0AB3           00224     incf TIME_MM2,1             ; Выполняем инкремент значения десятков минут и если
007D   3036           00225     movlw 0x36                  ; это значение !=6, то переходим к метке конца обработки времени
007E   0633           00226     xorwf TIME_MM2, w           ; Если же значение минуты = 6, то обнуляем его и переходим к обработке
007F   1D03           00227     btfss STATUS, 0x02          ; единиц часов
0080   2???           00228     goto z_nop                  ;(19)
0081   3030           00229     movlw 0x30
0082   00B3           00230     movwf       TIME_MM2
                      00231 
                      00232     ;Счет единиц и десятков часов - TIME_НН2, TIME_НН1(17)
0083   0AB0           00233     incf TIME_HH1,1             ; Выполняем инкремент значения единиц часов и если
0084   3034           00234     movlw 0x34                  ; это значение !=4, то переходим к метке работы с единицами 
0085   0630           00235     xorwf TIME_HH1, w;          ; часов до 10.
0086   1D03           00236     btfss STATUS, 0x02
0087   2???           00237     goto ten_clock_five
0088   3032           00238     movlw 0x32                  ; Если значение десятков часов !=2, то тка же работаем
0089   0631           00239     xorwf TIME_HH2, w;          ; с форматом до 10, пройдя по метке
008A   1D03           00240     btfss STATUS, 0x02
008B   2???           00241     goto ten_clock_one
008C   3030           00242     movlw 0x30                  ; Обнуление десятков и единиц часов
008D   00B0           00243     movwf       TIME_HH1
008E   00B1           00244     movwf       TIME_HH2
008F   0AB6           00245     incf    DAY,1               ; Инкремент переменной Деня, для перехода в новый день в 00:00
0090   3007           00246     movlw       .7              ; Обнуление переменной при достижении воскресенья,
0091   0636           00247     xorwf DAY, w;               ; что бы при 00:00:00 перейти в понедельник
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0092   1D03           00248     btfss STATUS, 0x02                   
0093   2???           00249     goto two_nop                        
0094   3000           00250     movlw       .0
0095   00B6           00251     movwf       DAY
0096   2???           00252     goto end_clock
                      00253         
0097                  00254 ten_clock_five                  ;для уравновешивания тактов
Warning[211]: Extraneous arguments on the line.
0097   0000           00255     nop nop nop
0098   2???           00256     goto ten_clock
0099                  00257 ten_clock_one
0099   2???           00258     goto ten_clock              ;для уравновешивания тактов
                      00259         
009A                  00260 ten_clock
009A   303A           00261     movlw 0x3A                  ; Если значение единиц часов !=10, то 
009B   0630           00262     xorwf TIME_HH1, w;          ; переходим в конец обработки времени.
009C   1D03           00263     btfss STATUS, 0x02          ; Если значение = 10, то инкрементируем десятки часов
009D   2???           00264     goto three_nop              ; и обнуляем значение единиц
Message[305]: Using default destination of 1 (file).
009E   0AB1           00265     incf    TIME_HH2
009F   3030           00266     movlw 0x30
00A0   00B0           00267     movwf       TIME_HH1
00A1   2???           00268     goto end_clock
Warning[211]: Extraneous arguments on the line.
00A2   0000           00269 v_nop       nop nop nop nop nop nop nop         ;Колибровка работы программы 
Warning[211]: Extraneous arguments on the line.
00A3   0000           00270 c_nop       nop nop nop nop nop nop nop         ;в зависимости от условий
Warning[211]: Extraneous arguments on the line.
00A4   0000           00271 x_nop       nop nop nop nop nop nop nop 
Warning[211]: Extraneous arguments on the line.
00A5   0000           00272 z_nop       nop nop nop nop nop nop nop nop nop                 
Warning[211]: Extraneous arguments on the line.
00A6   0000           00273             nop nop nop nop nop nop nop nop nop
00A7   0000           00274 three_nop   nop                 ;для уравновешивания тактов
Warning[211]: Extraneous arguments on the line.
00A8   0000           00275 two_nop     nop nop
00A9                  00276 end_clock                       ; Метка конца работы со времинем
00A9   0064           00277     clrwdt                      ; Чистим на всякий
                      00278     
                      00279 ;Обработка будильника
00AA   3001           00280     movlw .1                    ; Проверяем, равен ли единице управляющий регистр
00AB   0650           00281     xorwf NumAlarmBit, w
00AC   1903           00282     btfsc STATUS, 0x02
00AD   2???           00283     goto delay_seven                    ; Если равен переходим сразу в функцию опроса клавиши 9         
00AE   3030           00284     movlw 0x30                  ; Если единицы секунд = 0, то
00AF   0634           00285     xorwf TIME_SS1, w;          ; переходим к проверке десятков секунд, аналогичную проверку
00B0   1903           00286     btfsc STATUS, 0x02          ; выполняем и там. Если не равно 0, то переходим по метке к
00B1   2???           00287     goto if_S_TWO_ZERO          ; концу обработки будильника
00B2   2???           00288     goto delay_six   
00B3                  00289 if_S_TWO_ZERO    
00B3   3030           00290     movlw 0x30                  
00B4   0635           00291     xorwf TIME_SS2, w;
00B5   1903           00292     btfsc STATUS, 0x02
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   2???           00293     goto if_T_AT_H2             ; Переход к проверке на равенство десятков часов и будильника
00B7   2???           00294     goto delay_five    
                      00295         
00B8                  00296 if_T_AT_H2                      ; Если значения десятков будильника и реального времени равны, то
00B8   0831           00297     movfw TIME_HH2              ; переходим к проверке единиц. Если нет, то оканчиваем проверку 
00B9   0638           00298     xorwf ALARM_HH2, w;         ; будильника.
00BA   1903           00299     btfsc STATUS, 0x02          ; Аналогичную проверку проводим и для минут.
00BB   2???           00300     goto if_T_AT_H1
00BC   2???           00301     goto delay_four
                      00302     
00BD                  00303 if_T_AT_H1                      ; Проверка единиц часа у часов и будильника
00BD   0830           00304     movfw TIME_HH1              
00BE   0637           00305     xorwf ALARM_HH1, w;         
00BF   1903           00306     btfsc STATUS, 0x02
00C0   2???           00307     goto if_T_AT_M2
00C1   2???           00308     goto delay_three
                      00309     
00C2                  00310 if_T_AT_M2                      ; Проверка десятков минут часов и будильника
00C2   0833           00311     movfw TIME_MM2              
00C3   063A           00312     xorwf ALARM_MM2, w;         
00C4   1903           00313     btfsc STATUS, 0x02
00C5   2???           00314     goto if_T_AT_M1
00C6   2???           00315     goto delay_two
                      00316     
00C7                  00317 if_T_AT_M1                      ; Проверка единиц минут часов и будильника
00C7   0832           00318     movfw TIME_MM1              
00C8   0639           00319     xorwf ALARM_MM1, w;         
00C9   1903           00320     btfsc STATUS, 0x02
00CA   2???           00321     goto inc_BA                 ; Если все значения совпали, то переходим к метке,
00CB   2???           00322     goto delay_one              ; где присваиваем управляющему регистру Blink_Alarm 
                      00323                                 ; единицу, после чего переходим в функцию
00CC                  00324 inc_BA                          ; опроса клавиатуры, для ожидания нажатия кнопки
00CC   3001           00325     movlw .1                    ; 9, для обнуления управляющих регистров, что
00CD   00C2           00326     movwf Blink_Alarm           ; отключает звуковой сигнал и моргание экрана
00CE   2???           00327     goto blinkON
                      00328     
00CF                  00329 NULL_BA_NAB                     ; Обнуление управляющих регистров
00CF   3000           00330     movlw .0
00D0   00D0           00331     movwf NumAlarmBit
00D1   00C2           00332     movwf Blink_Alarm
00D2   2???           00333     goto end_ALARM
                      00334     
00D3                  00335 blinkON
00D3   2???           00336     call Keyboard           ; Спрашиваем клавиатуру
00D4   183F           00337     btfsc Key9,0
00D5   2???           00338     goto NULL_BA_NAB        ; Если нажали кнопку 9 переходим в функцию, где обнуляем управляющие регистр
                            ы
00D6   3001           00339     movlw .1                ; Если нет, то устанавливаем NumAlarmBit=1 для непрерывного моргания и звуко
                            вого сигнала
00D7   00D0           00340     movwf NumAlarmBit       ; пока не нажата 9.
Warning[211]: Extraneous arguments on the line.
00D8   0000           00341     nop nop nop
00D9                  00342 end_ALARM                   ;Метка конца обработки будильника
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D9   2???           00343     call LCD_two            ;Отрисовка второй строки
00DA   2???           00344     call delay_one_sec      ;Задержка пока на 1сек
00DB   2???           00345     goto START              ; конец основного цикла (должен быть = 1сек)
                      00346 
                      00347     ;--------------------------------------------------------
                      00348     ;--------------------------------------------------------
                      00349     
                      00350 ; Процедура типа switch для выбора и отрисовки дня недели
Message[305]: Using default destination of 1 (file).
00DC   0782           00351 DEC addwf PCL           ;в зависимости от переданного значения
00DD   2???           00352     goto monday
00DE   2???           00353     goto tuesday
00DF   2???           00354     goto wednesday      
00E0   2???           00355     goto thursday    
00E1   2???           00356     goto friday         
00E2   2???           00357     goto saturday               
00E3   2???           00358     goto sunday         
00E4   0008           00359     return
                      00360 ;Отрисовка дней недели
00E5                  00361 monday                      ;понедельник
00E5   304D           00362     movlw 'M'
00E6   2???           00363     call write
00E7   304F           00364     movlw 'O'
00E8   2???           00365     call write
00E9   304E           00366     movlw 'N'
00EA   2???           00367     call write
00EB   2???           00368     goto exday
00EC                  00369 tuesday                     ;вторник
00EC   3054           00370     movlw 'T'
00ED   2???           00371     call write
00EE   3055           00372     movlw 'U'
00EF   2???           00373     call write
00F0   3045           00374     movlw 'E'
00F1   2???           00375     call write
00F2   2???           00376     goto exday
00F3                  00377 wednesday                   ;среда
00F3   3057           00378     movlw 'W'
00F4   2???           00379     call write
00F5   3045           00380     movlw 'E'
00F6   2???           00381     call write
00F7   3044           00382     movlw 'D'
00F8   2???           00383     call write
00F9   2???           00384     goto exday
00FA                  00385 thursday                    ;четверг
00FA   3054           00386     movlw 'T'
00FB   2???           00387     call write
00FC   3048           00388     movlw 'H'
00FD   2???           00389     call write
00FE   3055           00390     movlw 'U'
00FF   2???           00391     call write
0100   2???           00392     goto exday
0101                  00393 friday                      ;пятница
0101   3046           00394     movlw 'F'
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0102   2???           00395     call write
0103   3052           00396     movlw 'R'
0104   2???           00397     call write
0105   3049           00398     movlw 'I'
0106   2???           00399     call write
0107   2???           00400     goto exday
0108                  00401 saturday                    ;суббота
0108   3053           00402     movlw 'S'
0109   2???           00403     call write
010A   3041           00404     movlw 'A'
010B   2???           00405     call write
010C   3054           00406     movlw 'T'
010D   2???           00407     call write
010E   2???           00408     goto exday
010F                  00409 sunday                      ;воскресенье
010F   3053           00410     movlw 'S'
0110   2???           00411     call write
0111   3055           00412     movlw 'U'
0112   2???           00413     call write
0113   304E           00414     movlw 'N'
0114   2???           00415     call write
0115                  00416 exday                       
0115   0008           00417     return
                      00418 
                      00419     ;--------------------------------------------------------
                      00420     
0116                  00421 time_plus_blink             ; Функция обработки перед переходом в другой режим
0116   3001           00422     movlw 0x1               ; Задержка, для защиты от дребезга
0117   2???           00423     call delay                          
0118   2???           00424     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
0119   08C1           00425     movf Cnt,1              ;Если нет, то циклим
011A   1D03           00426     btfss STATUS,Z                      
011B   2???           00427     goto time_plus_blink
011C   0AC3           00428     incf NumPressKey,1      ;Если клавиша отжата, то инкрементируем NumPressKey
011D   2???           00429     goto change_time        ;для выбора ячейки, в которой будут изменяться значения.
011E   0008           00430     return                  ;После чего переходим к изменению времени
                      00431     
011F                  00432 day_plus_blink              ; Функция обработки перед переходом в другой режим
011F   3001           00433     movlw 0x1               ; Задержка, для защиты от дребезга          
0120   2???           00434     call delay                          
0121   2???           00435     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
0122   08C1           00436     movf Cnt,1              ;Если нет, то циклим
0123   1D03           00437     btfss STATUS,Z                      
0124   2???           00438     goto day_plus_blink
0125   3008           00439     movlw 0x8               ;Если клавиша отжата, то установим NumPressKey = 8
0126   00C3           00440     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
0127   2???           00441     goto change_day         ;После чего переходим к изменению дня недели
0128   0008           00442     return
                      00443     
0129                  00444 alarm_plus_blink            ; Функция обработки перед переходом в другой режим
0129   3001           00445     movlw 0x1               ; Задержка, для защиты от дребезга          
012A   2???           00446     call delay                          
012B   2???           00447     call Keyboard           ;Опрос клавиатуры что бы выяснить отжата клавиша или нет
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012C   08C1           00448     movf Cnt,1              ;Если нет, то циклим
012D   1D03           00449     btfss STATUS,Z                      
012E   2???           00450     goto alarm_plus_blink
012F   3009           00451     movlw 0x9               ;Если клавиша отжата, то установим NumPressKey = 9
0130   00C3           00452     movwf NumPressKey       ;для выбора ячейки, в которой будут изменяться значения.
0131   2???           00453     goto change_alarm       ;После чего переходим к изменению будильника
0132   0008           00454     return
                      00455     ;--------------------------------------------------------
                      00456     
0133                  00457 write                       ;Процедура записи байта к контроллер HD
0133   1303           00458     bcf STATUS, RP1
0134   1283           00459     bcf STATUS, RP0
0135   0086           00460     movwf PORTB
0136   1507           00461     bsf PORTC, 2
0137   3001           00462     movlw 0x01
0138   2???           00463     call delay
0139   1107           00464     bcf PORTC, 2
013A   0008           00465     return
                      00466 ; перед вызовом этой процедуры в W помещается байт, который надо записать в HD. Далее
                      00467 ;он передается в PORTB и формируется отрицательный перепад на RC2, путем предваритель-
                      00468 ;ной  его  установки  в  «1»,  удержания  этого уровня в течение некоторого времени (опреде-
                      00469 ;ляемого временем задержки delay  при  W=1) и сброса его в «0».
                      00470         
013B                  00471 delay                       ;Процедура  задержки,  время  которой  можно
013B   1303           00472     bcf   STATUS, RP1       ;регулировать, задавая число в W
013C   1283           00473     bcf   STATUS, RP0
013D   00A7           00474     movwf   fCOUNTER2
013E   01A6           00475     clrf    fCOUNTER
                      00476     
013F                  00477 BD_Loop
013F   0064           00478     clrwdt
0140   0BA6           00479     decfsz  fCOUNTER, f
0141   2???           00480     goto    BD_Loop
0142   0BA7           00481     decfsz  fCOUNTER2, f
0143   2???           00482     goto    BD_Loop
0144   0008           00483     return
                      00484 
0145                  00485 delay_one_sec                   ;Колибровочные задержки
                      00486 ;для корректного времени работы
                      00487 ;программы в зависимости от разных условий
                      00488 ;выполениня определенных команд, т.к. в 
                      00489 ;любом случае основной цикл должен выполняться 
                      00490 ;за 1 сек
                      00491 ; Задержка 775 567 машинных циклов
                      00492 ; Задержка 772 567 машинных циклов
0145   3003           00493             movlw       .3
0146   00A3           00494             movwf       Reg_1
0147   30EB           00495             movlw       .235
0148   00A4           00496             movwf       Reg_2
0149   3004           00497             movlw       .4
014A   00A5           00498             movwf       Reg_3
014B   0BA3           00499             decfsz      Reg_1,F
014C   2???           00500             goto        $-1
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014D   0064           00501             clrwdt
014E   0BA4           00502             decfsz      Reg_2,F
014F   2???           00503             goto        $-4
0150   0BA5           00504             decfsz      Reg_3,F
0151   2???           00505             goto        $-6
0152   0008           00506     return   
0153                  00507 delay_one
0153   3014           00508     movlw       .20
0154   00A3           00509     movwf       Reg_1
0155   0BA3           00510     decfsz      Reg_1,F
0156   2???           00511     goto        $-1
0157   0064           00512     clrwdt
0158   0000           00513     nop
0159   2???           00514     goto end_ALARM
                      00515             
015A                  00516 delay_two
015A   3016           00517     movlw       .22
015B   00A3           00518     movwf       Reg_1
015C   0BA3           00519     decfsz      Reg_1,F
015D   2???           00520     goto        $-1
015E   0064           00521     clrwdt
015F   0000           00522     nop
0160   2???           00523     goto end_ALARM
                      00524             
0161                  00525 delay_three
0161   3018           00526     movlw       .24
0162   00A3           00527     movwf       Reg_1
0163   0BA3           00528     decfsz      Reg_1,F
0164   2???           00529     goto        $-1
0165   0064           00530     clrwdt
0166   0000           00531     nop
0167   2???           00532     goto end_ALARM
                      00533             
0168                  00534 delay_four
0168   301A           00535     movlw       .26
0169   00A3           00536     movwf       Reg_1
016A   0BA3           00537     decfsz      Reg_1,F
016B   2???           00538     goto        $-1
016C   0064           00539     clrwdt
016D   0000           00540     nop
016E   2???           00541     goto end_ALARM
                      00542             
016F                  00543 delay_five
016F   301C           00544     movlw       .28
0170   00A3           00545     movwf       Reg_1
0171   0BA3           00546     decfsz      Reg_1,F
0172   2???           00547     goto        $-1
0173   0064           00548     clrwdt
0174   0000           00549     nop
0175   2???           00550     goto end_ALARM
                      00551             
0176                  00552 delay_six
0176   301E           00553     movlw       .30
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0177   00A3           00554     movwf       Reg_1
0178   0BA3           00555     decfsz      Reg_1,F
0179   2???           00556     goto        $-1
017A   0064           00557     clrwdt
017B   0000           00558     nop
017C   2???           00559     goto end_ALARM
                      00560             
017D                  00561 delay_seven
017D   3021           00562     movlw       .33
017E   00A3           00563     movwf       Reg_1
017F   0BA3           00564     decfsz      Reg_1,F
0180   2???           00565     goto        $-1
0181   0064           00566     clrwdt
0182   0000           00567     nop
0183   2???           00568     goto inc_BA 
                      00569     ;==========================================
                      00570 
0184                  00571 LCD_one
                      00572 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00573 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  1-ой 
                      00574 ;строки:  ячейку  с  адресом  (10000000). Это  необходимо  для  вывода  
                      00575 ;времени и дня недели на первой строке индикатора.
0184   1007           00576     bcf PORTC, 0
0185   3080           00577     movlw b'10000000'   
0186   2???           00578     call write
0187   1407           00579     bsf PORTC,0
                      00580 ;Отрисовка первой строки
                      00581 ; Отрисовка Н2
0188   2???           00582     call paintH2
                      00583 ; Отрисовка Н1
0189   2???           00584     call paintH1
018A   303A           00585     movlw ':'
018B   2???           00586     call write
                      00587 ; Отрисовка М2
018C   2???           00588     call paintM2
                      00589 ; Отрисовка М1
018D   2???           00590     call paintM1
018E   303A           00591     movlw ':'
018F   2???           00592     call write
                      00593 ; Отрисовка S2
0190   2???           00594     call paintS2
                      00595 ; Отрисовка S1
0191   2???           00596     call paintS1
0192   3020           00597     movlw ' '
0193   2???           00598     call write
0194   3020           00599     movlw ' '
0195   2???           00600     call write
                      00601 ;Отрисовка дня недели
0196   2???           00602     call printDay
                      00603 
0197   0008           00604     return
                      00605     
                      00606     ;==========================================
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00607     
                      00608 ; Собственно механизм последовательного моргания при настройке времени
0198                  00609 paintH2                         ;Моргание десятков часов
0198   3001           00610     movlw 0x1                   ;Если NumPressKey = 1, то включаем моргание
0199   0643           00611     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
019A   1D03           00612     btfss STATUS, 0x02          ;включае один из методов, отвечающих
019B   2???           00613     goto blink_on_H2            ;за отрисовку. Один отрисовывает значение времени,
019C   0AC0           00614     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
019D   1C40           00615     btfss Blink, 0              ;Если NumPressKey != 1, то проверяем следующую функцию
019E   2???           00616     goto blink_on_H2            ;и отрисовываем постоянно значение
019F   2???           00617     goto blink_off_H2
01A0                  00618 blink_off_H2
01A0   3020           00619     movlw ' '
01A1   2???           00620     call write
01A2   2???           00621     goto return_H2
01A3                  00622 blink_on_H2
01A3   0831           00623     movfw TIME_HH2
01A4   2???           00624     call write
01A5                  00625 return_H2    
01A5   0008           00626     return
                      00627     ;-----------
01A6                  00628 paintH1                         ;Моргание единиц часов
01A6   3002           00629     movlw 0x2                   ;Если NumPressKey = 2, то включаем моргание
01A7   0643           00630     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01A8   1D03           00631     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01A9   2???           00632     goto blink_on_H1            ;за отрисовку. Один отрисовывает значение времени,
01AA   0AC0           00633     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01AB   1C40           00634     btfss Blink, 0              ;Если NumPressKey != 2, то проверяем следующую функцию
01AC   2???           00635     goto blink_on_H1            ;и отрисовываем постоянно значение
01AD   2???           00636     goto blink_off_H1
01AE                  00637 blink_off_H1
01AE   3020           00638     movlw ' '
01AF   2???           00639     call write
01B0   2???           00640     goto return_H1
01B1                  00641 blink_on_H1
01B1   0830           00642     movfw TIME_HH1
01B2   2???           00643     call write
01B3                  00644 return_H1
01B3   0008           00645     return
                      00646     ;------------
01B4                  00647 paintM2                         ;Моргание десятков минут
01B4   3003           00648     movlw 0x3                   ;Если NumPressKey = 3, то включаем моргание
01B5   0643           00649     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01B6   1D03           00650     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01B7   2???           00651     goto blink_on_M2            ;за отрисовку. Один отрисовывает значение времени,
01B8   0AC0           00652     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01B9   1C40           00653     btfss Blink, 0              ;Если NumPressKey != 3, то проверяем следующую функцию
01BA   2???           00654     goto blink_on_M2            ;и отрисовываем постоянно значение
01BB   2???           00655     goto blink_off_M2
01BC                  00656 blink_off_M2
01BC   3020           00657     movlw ' '
01BD   2???           00658     call write
01BE   2???           00659     goto return_M2
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BF                  00660 blink_on_M2
01BF   0833           00661     movfw TIME_MM2
01C0   2???           00662     call write
01C1                  00663 return_M2
01C1   0008           00664     return
                      00665     ;------------
01C2                  00666 paintM1                         ;Моргание единиц минут
01C2   3004           00667     movlw 0x4                   ;Если NumPressKey = 4, то включаем моргание
01C3   0643           00668     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01C4   1D03           00669     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01C5   2???           00670     goto blink_on_M1            ;за отрисовку. Один отрисовывает значение времени,
01C6   0AC0           00671     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01C7   1C40           00672     btfss Blink, 0              ;Если NumPressKey != 4, то проверяем следующую функцию
01C8   2???           00673     goto blink_on_M1            ;и отрисовываем постоянно значение
01C9   2???           00674     goto blink_off_M1
01CA                  00675 blink_off_M1
01CA   3020           00676     movlw ' '
01CB   2???           00677     call write
01CC   2???           00678     goto return_M1
01CD                  00679 blink_on_M1
01CD   0832           00680     movfw TIME_MM1
01CE   2???           00681     call write
01CF                  00682 return_M1
01CF   0008           00683     return
                      00684     ;------------
01D0                  00685 paintS2                         ;Моргание десятков секунд
01D0   3005           00686     movlw 0x5                   ;Если NumPressKey = 5, то включаем моргание
01D1   0643           00687     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01D2   1D03           00688     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01D3   2???           00689     goto blink_on_S2            ;за отрисовку. Один отрисовывает значение времени,
01D4   0AC0           00690     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01D5   1C40           00691     btfss Blink, 0              ;Если NumPressKey != 5, то проверяем следующую функцию
01D6   2???           00692     goto blink_on_S2            ;и отрисовываем постоянно значение
01D7   2???           00693     goto blink_off_S2
01D8                  00694 blink_off_S2
01D8   3020           00695     movlw ' '
01D9   2???           00696     call write
01DA   2???           00697     goto return_S2
01DB                  00698 blink_on_S2
01DB   0835           00699     movfw TIME_SS2
01DC   2???           00700     call write
01DD                  00701 return_S2
01DD   0008           00702     return
                      00703     ;------------
01DE                  00704 paintS1                         ;Моргание единиц секунд
01DE   3006           00705     movlw 0x6                   ;Если NumPressKey = 6, то включаем моргание
01DF   0643           00706     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01E0   1D03           00707     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01E1   2???           00708     goto blink_on_S1            ;за отрисовку. Один отрисовывает значение времени,
01E2   0AC0           00709     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
01E3   1C40           00710     btfss Blink, 0              ;Если NumPressKey != 6, то проверяем следующую функцию
01E4   2???           00711     goto blink_on_S1            ;и отрисовываем постоянно значение
01E5   2???           00712     goto blink_off_S1
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E6                  00713 blink_off_S1
01E6   3020           00714     movlw ' '
01E7   2???           00715     call write
01E8   2???           00716     goto return_S1
01E9                  00717 blink_on_S1
01E9   0834           00718     movfw TIME_SS1
01EA   2???           00719     call write
01EB                  00720 return_S1
01EB   0008           00721     return
                      00722     ;-----------
01EC                  00723 printDay                        ;Моргание дня недели
01EC   3008           00724     movlw 0x8                   ;Если NumPressKey = 8, то включаем моргание
01ED   0643           00725     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
01EE   1D03           00726     btfss STATUS, 0x02          ;включае один из методов, отвечающих
01EF   2???           00727     goto blink_on_day           ;за отрисовку. Один отрисовывает значение дня,
01F0   0AC0           00728     incf Blink,1                ;а другой символы пробела. Так создается эффект моргания.
01F1   1C40           00729     btfss Blink, 0              ;Если NumPressKey != 8, то проверяем следующую функцию
01F2   2???           00730     goto blink_on_day           ;и отрисовываем постоянно значение
01F3   2???           00731     goto blink_off_day
01F4                  00732 blink_off_day
01F4   3020           00733     movlw ' '
01F5   2???           00734     call write
01F6   3020           00735     movlw ' '
01F7   2???           00736     call write
01F8   3020           00737     movlw ' '
01F9   2???           00738     call write
01FA   2???           00739     goto return_DAY
01FB                  00740 blink_on_day
01FB   0836           00741     movfw DAY                           
01FC   2???           00742     call DEC
01FD                  00743 return_DAY
01FD   0008           00744     return
                      00745     ;==========================================   
                      00746     
01FE                  00747 LCD_two
01FE   1007           00748     bcf PORTC, 0
01FF   30C4           00749     movlw b'11000100'
0200   2???           00750     call write
                      00751 ;Установка RC0=0, для последующей передачи команды  на  контроллер  HD.  Передается  ко-
                      00752 ;манда Set DDRAM address,  устанавливающая счетчик  адреса  видеопамяти  на  начало  2-ой
                      00753 ;строки:  ячейку  с  адресом  (11000100). Это  необходимо  для  вывода  фразы  «ALARM» и будильника на в
                            торой строке индикатора.
0201   1407           00754     bsf PORTC,0                 ; установка RC0=1, для последующей передачи
                      00755                                 ;кодов символов второй строки на дисплей. Об-
                      00756                                 ;ратите внимание на то, что нигде не требуется
                      00757                                 ;изменения  банков  памяти: т.к. все регистры, с
                      00758                                 ;которыми работает ПО, находятся в 0-ом банке.
0202   2???           00759     call paint_ALARM            ;Вызов метода отрисовки
                      00760     
0203   3020           00761     movlw ' '
0204   2???           00762     call write
0205   3020           00763     movlw ' '
0206   2???           00764     call write
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00765     
0207   2???           00766     call paintH2_A              ;Вызов метода отрисовки
0208   2???           00767     call paintH1_A              ;Вызов метода отрисовки
0209   303A           00768     movlw ':'
020A   2???           00769     call write
020B   2???           00770     call paintM2_A              ;Вызов метода отрисовки
020C   2???           00771     call paintM1_A              ;Вызов метода отрисовки
020D   0008           00772     return
                      00773     ;------------------------------------------
020E                  00774 paintH2_A                       ;Моргание десятков часов будильника
020E   3009           00775     movlw 0x9                   ;Если NumPressKey = 9, то включаем моргание
020F   0643           00776     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
0210   1D03           00777     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0211   2???           00778     goto blink_on_H2_A          ;за отрисовку. Один отрисовывает значение времени,
0212   0AC0           00779     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0213   1C40           00780     btfss Blink, 0              ;Если NumPressKey != 9, то проверяем следующую функцию
0214   2???           00781     goto blink_on_H2_A          ;и отрисовываем постоянно значение
0215   2???           00782     goto blink_off_H2_A
0216                  00783 blink_off_H2_A
0216   3020           00784     movlw ' '
0217   2???           00785     call write
0218   2???           00786     goto return_A_H2
0219                  00787 blink_on_H2_A
0219   0838           00788     movfw ALARM_HH2
021A   2???           00789     call write
021B                  00790 return_A_H2
021B   0008           00791     return
                      00792     ;-----------
021C                  00793 paintH1_A                       ;Моргание единиц часов будильника
021C   300A           00794     movlw 0xa                   ;Если NumPressKey = 10, то включаем моргание
021D   0643           00795     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
021E   1D03           00796     btfss STATUS, 0x02          ;включае один из методов, отвечающих
021F   2???           00797     goto blink_on_H1_A          ;за отрисовку. Один отрисовывает значение времени,
0220   0AC0           00798     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
0221   1C40           00799     btfss Blink, 0              ;Если NumPressKey != 10, то проверяем следующую функцию
0222   2???           00800     goto blink_on_H1_A          ;и отрисовываем постоянно значение
0223   2???           00801     goto blink_off_H1_A
0224                  00802 blink_off_H1_A
0224   3020           00803     movlw ' '
0225   2???           00804     call write
0226   2???           00805     goto return_A_H1
0227                  00806 blink_on_H1_A
0227   0837           00807     movfw ALARM_HH1
0228   2???           00808     call write
0229                  00809 return_A_H1
0229   0008           00810     return
                      00811     ;------------
022A                  00812 paintM2_A                       ;Моргание десятков минут будильника
022A   300B           00813     movlw 0xb                   ;Если NumPressKey = 11, то включаем моргание
022B   0643           00814     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
022C   1D03           00815     btfss STATUS, 0x02          ;включае один из методов, отвечающих
022D   2???           00816     goto blink_on_M2_A          ;за отрисовку. Один отрисовывает значение времени,
022E   0AC0           00817     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022F   1C40           00818     btfss Blink, 0              ;Если NumPressKey != 11, то проверяем следующую функцию
0230   2???           00819     goto blink_on_M2_A          ;и отрисовываем постоянно значение
0231   2???           00820     goto blink_off_M2_A
0232                  00821 blink_off_M2_A
0232   3020           00822     movlw ' '
0233   2???           00823     call write
0234   2???           00824     goto return_A_M2
0235                  00825 blink_on_M2_A
0235   083A           00826     movfw ALARM_MM2
0236   2???           00827     call write
0237                  00828 return_A_M2
0237   0008           00829     return
                      00830     ;------------
0238                  00831 paintM1_A                       ;Моргание единиц минут будильника
0238   300C           00832     movlw 0xc                   ;Если NumPressKey = 12, то включаем моргание
0239   0643           00833     xorwf NumPressKey, w;       ;В зависимости от регистра Blink поочередно
023A   1D03           00834     btfss STATUS, 0x02          ;включае один из методов, отвечающих
023B   2???           00835     goto blink_on_M1_A          ;за отрисовку. Один отрисовывает значение времени,
023C   0AC0           00836     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
023D   1C40           00837     btfss Blink, 0              ;Если NumPressKey != 12, то проверяем следующую функцию
023E   2???           00838     goto blink_on_M1_A          ;и отрисовываем постоянно значение
023F   2???           00839     goto blink_off_M1_A
0240                  00840 blink_off_M1_A
0240   3020           00841     movlw ' '
0241   2???           00842     call write
0242   2???           00843     goto return_A_M1
0243                  00844 blink_on_M1_A
0243   0839           00845     movfw ALARM_MM1
0244   2???           00846     call write
0245                  00847 return_A_M1
0245   0008           00848     return
                      00849     ;----------
0246                  00850 paint_ALARM                     ;Моргание надписи будильника
0246   3001           00851     movlw .1                    ;Если Blink_Alarm = 1, то включаем моргание
0247   0642           00852     xorwf Blink_Alarm, w;       ;В зависимости от регистра Blink поочередно
0248   1D03           00853     btfss STATUS, 0x02          ;включае один из методов, отвечающих
0249   2???           00854     goto blink_on_ALARM_nop             ;за отрисовку. Один отрисовывает значение времени,
024A   0AC0           00855     incf Blink,1                ;а другой символ пробела. Так создается эффект моргания.
024B   1C40           00856     btfss Blink, 0              ;Если Blink_Alarm != 1, то проверяем следующую функцию
024C   2???           00857     goto blink_on_ALARM         ;и отрисовываем постоянно значение
024D   2???           00858         goto blink_off_ALARM
024E                  00859 blink_off_ALARM
024E   1088           00860     bcf PORTD,0x01
024F   3020           00861     movlw ' '
0250   2???           00862     call write
0251   3020           00863     movlw ' '
0252   2???           00864     call write
0253   3020           00865     movlw ' '
0254   2???           00866     call write
0255   3020           00867     movlw ' '
0256   2???           00868     call write
0257   3020           00869     movlw ' '
0258   2???           00870     call write
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0259   2???           00871     goto return_ALARM
Warning[211]: Extraneous arguments on the line.
025A   0000           00872 blink_on_ALARM_nop nop nop nop
025B                  00873 blink_on_ALARM
025B   1488           00874     bsf PORTD,0x01
025C   3041           00875     movlw 'A'
025D   2???           00876     call write
025E   304C           00877     movlw 'L'
025F   2???           00878     call write
0260   3041           00879     movlw 'A'
0261   2???           00880     call write
0262   3052           00881     movlw 'R'
0263   2???           00882     call write
0264   304D           00883     movlw 'M'
0265   2???           00884     call write
0266                  00885 return_ALARM
0266   0008           00886     return
                      00887     ;==========================================
                      00888     
0267                  00889 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
0267   1283           00890     bank0                   ; переход в нулевой банк, для нормального вызова функции из тела программы
0268   1303           00891     bcf STATUS, RP1
0269   01BB           00892     clrf Key1               ; обнуление кодов клавиш
026A   01BC           00893     clrf Key2 
026B   01BD           00894     clrf Key3
026C   01BE           00895     clrf Key4  
026D   01BF           00896     clrf Key9  
026E   01C1           00897     clrf Cnt  
026F                  00898 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
026F   1405           00899     bsf PORTA,0             ; подача питания
0270   1085           00900     bcf PORTA,1
0271   1105           00901     bcf PORTA,2 
                      00902     ;movlw .24
                      00903     ;call small_delay
0272   0805           00904     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0273   3938           00905     andlw 0x38
0274   1903           00906     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
0275   2???           00907     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00908     ;movlw .250
                      00909     ;call small_delay  
0276   1985           00910     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
0277   0ABB           00911     incf Key1,F
0278   1A05           00912     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
0279   0ABE           00913     incf Key4,F
                      00914     
027A                  00915 col2                        ; сканируем второй столбец, где нам нужна клавиша 2
027A   1005           00916     bcf PORTA,0             ; подача питания
027B   1485           00917     bsf PORTA,1
027C   1105           00918     bcf PORTA,2 
                      00919     ;movlw .24
                      00920     ;sd
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027D   0805           00921     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
027E   3938           00922     andlw 0x38
027F   1903           00923     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0280   2???           00924     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00925     ;movlw .250
                      00926     ;sd
0281   1985           00927     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0282   0ABC           00928     incf Key2,F
0283                  00929 col3                        ; сканируем третий столбец, где нам нужна клавиша 3
0283   1005           00930     bcf PORTA,0             ; подача питания
0284   1085           00931     bcf PORTA,1
0285   1505           00932     bsf PORTA,2
                      00933     ;movlw .24
                      00934     ;sd
0286   0805           00935     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0287   3938           00936     andlw 0x38
0288   1903           00937     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
0289   2???           00938     goto nop_end_key        ; если Z=0, то пропускаем строку
                      00939     ;movlw .250
                      00940     ;sd
028A   1985           00941     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
028B   0ABD           00942     incf Key3,F
028C   1A85           00943     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
028D   0ABF           00944     incf Key9,F
028E   2???           00945     goto end_keyb
                      00946  
Warning[211]: Extraneous arguments on the line.
028F   0000           00947 nop_end_key nop nop nop nop nop nop
0290                  00948 end_keyb                    ;Метод, для записи в Cnt = 1, если нажата клавиша (нужен для преверки, отпущ
                            ена ли клавиша)
0290   183B           00949     btfsc Key1,0
0291   0AC1           00950     incf Cnt,F
0292   183C           00951     btfsc Key2,0
0293   0AC1           00952     incf Cnt,F
0294   183D           00953     btfsc Key3,0
0295   0AC1           00954     incf Cnt,F
0296   183E           00955     btfsc Key4,0
0297   0AC1           00956     incf Cnt,F
0298   183F           00957     btfsc Key9,0
0299   0AC1           00958     incf Cnt,F
029A   0008           00959     return                  ; выход из функции
                      00960     
                      00961 ;==============================================
                      00962 
029B                  00963 change_time                 ; функция изменения времени
029B   2???           00964     call Keyboard           ; спрашиваем клавиатуру
029C   183B           00965     btfsc Key1,0
029D   2???           00966     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
029E   183C           00967     btfsc Key2,0
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029F   2???           00968     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
02A0   183D           00969     btfsc Key3,0
02A1   2???           00970     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
02A2   183E           00971     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
02A3   2???           00972     goto change_HMS
                      00973     
02A4   2???           00974     call LCD_one            ; Отрисовка первой строки
02A5   2???           00975     call delay_one_sec          ; задержка пока на 1сек
02A6   2???           00976     goto change_time
                      00977     
                      00978     ;----------------------------------------
02A7                  00979 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
02A7   3001           00980     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
02A8   2???           00981     call delay                          
02A9   2???           00982     call Keyboard               ;опрос клавиатуры что бы выяснить
02AA   08C1           00983     movf Cnt,1                  ;отжата клавиша или нет
02AB   1D03           00984     btfss STATUS,Z              ;если нет, то циклим
02AC   2???           00985     goto correct_T_plus             
02AD   3001           00986     movlw 0x1                   ; если NumPressKey = 1, то вызываем
02AE   0643           00987     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
02AF   1903           00988     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B0   2???           00989     call correct_H2
                      00990     
02B1   3002           00991     movlw 0x2                   ; если NumPressKey = 2, то вызываем
02B2   0643           00992     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
02B3   1903           00993     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B4   2???           00994     call correct_H1
                      00995 
02B5   3003           00996     movlw 0x3                   ; если NumPressKey = 3, то вызываем
02B6   0643           00997     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
02B7   1903           00998     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02B8   2???           00999     call correct_M2
                      01000     
02B9   3004           01001     movlw 0x4                   ; если NumPressKey = 4, то вызываем
02BA   0643           01002     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
02BB   1903           01003     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02BC   2???           01004     call correct_M1
                      01005     
02BD   3005           01006     movlw 0x5                   ; если NumPressKey = 5, то вызываем
02BE   0643           01007     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
02BF   1903           01008     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02C0   2???           01009     call correct_S2
                      01010     
02C1   3006           01011     movlw 0x6                   ; если NumPressKey = 6, то вызываем
02C2   0643           01012     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
02C3   1903           01013     btfsc STATUS, 0x02          ; если нет, выходим из функции
02C4   2???           01014     call correct_S1
                      01015     
02C5   0008           01016     return
                      01017     
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01018     ;----------------------------------------
                      01019     
02C6                  01020 correct_H2                      ; функцию коррекции переменной H2.
02C6   0AB1           01021     incf TIME_HH2,1             ; инкремент переменной Н2
02C7   3033           01022     movlw 0x33                  ; Если !=3, переходим обратно в функцию
02C8   0631           01023     xorwf TIME_HH2, w           ; correct_T_plus и проверяем там следующее условие
02C9   1D03           01024     btfss STATUS, 0x02
02CA   2???           01025     goto return_COR_H2
02CB   3030           01026     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
02CC   00B1           01027     movwf       TIME_HH2
02CD                  01028 return_COR_H2
02CD   0008           01029     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      01030     
02CE                  01031 correct_H1                      ; функцию коррекции переменной H1.
02CE   0AB0           01032     incf TIME_HH1,1             ; инкремент переменной Н1
02CF   3032           01033     movlw 0x32                  ; Если = 2, переходим в функцию three_H1, которая служит для 
02D0   0631           01034     xorwf TIME_HH2, w           ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01035                                 ; ограничить единицы при десятках = 2   
02D1   1903           01036     btfsc STATUS, 0x02
02D2   2???           01037     goto three_H1                       
02D3   303A           01038     movlw 0x3a                  ; если переменная = 0 или = 1, то максимальная единица для обнуления - 9
                            .
02D4   0630           01039 t1  xorwf TIME_HH1, w   
02D5   1D03           01040     btfss STATUS, 0x02
02D6   2???           01041     goto return_COR_H1
02D7   3030           01042     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
02D8   00B0           01043     movwf       TIME_HH1
02D9                  01044 return_COR_H1
02D9   0008           01045     return
                      01046     
02DA                  01047 three_H1
02DA   3034           01048     movlw 0x34                  ; предел для обнуления при переменной = 2
02DB   2???           01049     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      01050     
02DC                  01051 correct_M2                      ; функцию коррекции переменной M2.
02DC   0AB3           01052     incf TIME_MM2,1
02DD   3036           01053     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
02DE   0633           01054     xorwf TIME_MM2, w;
02DF   1D03           01055     btfss STATUS, 0x02
02E0   2???           01056     goto return_COR_M2
02E1   3030           01057     movlw       0x30
02E2   00B3           01058     movwf       TIME_MM2
02E3                  01059 return_COR_M2
02E3   0008           01060     return
                      01061     
02E4                  01062 correct_M1                      ; функцию коррекции переменной M1.
02E4   0AB2           01063     incf TIME_MM1,1
02E5   303A           01064     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02E6   0632           01065     xorwf TIME_MM1, w;
02E7   1D03           01066     btfss STATUS, 0x02
02E8   2???           01067     goto return_COR_M1
02E9   3030           01068     movlw       0x30
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EA   00B2           01069     movwf       TIME_MM1
02EB                  01070 return_COR_M1
02EB   0008           01071     return
                      01072     
02EC                  01073 correct_S2                      ; функцию коррекции переменной S2.
02EC   0AB5           01074     incf TIME_SS2,1
02ED   3036           01075     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
02EE   0635           01076     xorwf TIME_SS2, w;
02EF   1D03           01077     btfss STATUS, 0x02
02F0   2???           01078     goto return_COR_S2
02F1   3030           01079     movlw       0x30
02F2   00B5           01080     movwf       TIME_SS2
02F3                  01081 return_COR_S2
02F3   0008           01082     return
                      01083     
02F4                  01084 correct_S1                      ; функцию коррекции переменной S1.
02F4   0AB4           01085     incf TIME_SS1,1
02F5   303A           01086     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
02F6   0634           01087     xorwf TIME_SS1, w;
02F7   1D03           01088     btfss STATUS, 0x02
02F8   2???           01089     goto return_COR_S1
02F9   3030           01090     movlw       0x30
02FA   00B4           01091     movwf       TIME_SS1
02FB                  01092 return_COR_S1
02FB   0008           01093     return
                      01094     
                      01095     ;----------------------------------------
                      01096     
02FC                  01097 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
02FC   3001           01098     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
02FD   2???           01099     call delay                          
02FE   2???           01100     call Keyboard               ;опрос клавиатуры что бы выяснить
02FF   08C1           01101     movf Cnt,1                  ;отжата клавиша или нет
0300   1D03           01102     btfss STATUS,Z              ;если нет, то циклим
0301   2???           01103     goto correct_T_minus                  
0302   3001           01104     movlw 0x1                   ; если NumPressKey = 1, то вызываем
0303   0643           01105     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0304   1903           01106     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0305   2???           01107     call correct_H2_minus
                      01108     
0306   3002           01109     movlw 0x2                   ; если NumPressKey = 2, то вызываем
0307   0643           01110     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0308   1903           01111     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0309   2???           01112     call correct_H1_minus
                      01113 
030A   3003           01114     movlw 0x3                   ; если NumPressKey = 3, то вызываем
030B   0643           01115     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
030C   1903           01116     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
030D   2???           01117     call correct_M2_minus
                      01118     
030E   3004           01119     movlw 0x4                   ; если NumPressKey = 4, то вызываем
030F   0643           01120     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0310   1903           01121     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0311   2???           01122     call correct_M1_minus
                      01123     
0312   3005           01124     movlw 0x5                   ; если NumPressKey = 5, то вызываем
0313   0643           01125     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0314   1903           01126     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0315   2???           01127     call correct_S2_minus
                      01128     
0316   3006           01129     movlw 0x6                   ; если NumPressKey = 6, то вызываем
0317   0643           01130     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0318   1903           01131     btfsc STATUS, 0x02          ; если нет, выходим из функции
0319   2???           01132     call correct_S1_minus
                      01133     
031A   0008           01134     return
                      01135     ;----------------------------------------
                      01136     
031B                  01137 correct_H2_minus                ; функцию коррекции переменной H2.
031B   03B1           01138     decf TIME_HH2,1             ; декремент переменной Н2
031C   302F           01139     movlw 0x2f                  ; Если !=2f, переходим обратно в функцию
031D   0631           01140     xorwf TIME_HH2, w           ; correct_T_ и проверяем там следующее условие
031E   1D03           01141     btfss STATUS, 0x02
031F   2???           01142     goto return_COR_H2_MIN
0320   3032           01143     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
0321   00B1           01144     movwf       TIME_HH2
0322                  01145 return_COR_H2_MIN
0322   0008           01146     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01147     
0323                  01148 correct_H1_minus                ; функцию коррекции переменной H1.
0323   03B0           01149     decf TIME_HH1,1             ; декремент переменной Н1
0324   302F           01150     movlw 0x2f                  ; Если != 2f, переходим обратно в функцию 
0325   0630           01151     xorwf TIME_HH1, w           ; correct_T_ и проверяем там следующее условие
                      01152                                         
0326   1D03           01153     btfss STATUS, 0x02
0327   2???           01154     goto return_COR_H1_MIN              
0328   3032           01155     movlw 0x32                  ; если переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0329   0631           01156     xorwf TIME_HH2, w   
032A   1903           01157     btfsc STATUS, 0x02
032B   2???           01158     goto three_H1_minus
032C   3039           01159     movlw       0x39            ; если переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
032D   00B0           01160 t2  movwf       TIME_HH1
032E                  01161 return_COR_H1_MIN
032E   0008           01162     return
                      01163     
032F                  01164 three_H1_minus
032F   3033           01165     movlw 0x33                  ; значение для присваивания при Н2 = 2.
0330   2???           01166     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      01167     
0331                  01168 correct_M2_minus                ; функцию коррекции переменной M2.
0331   03B3           01169     decf TIME_MM2,1
0332   302F           01170     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0333   0633           01171     xorwf TIME_MM2, w;
0334   1D03           01172     btfss STATUS, 0x02
0335   2???           01173     goto return_COR_M2_MIN
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0336   3035           01174     movlw       0x35
0337   00B3           01175     movwf       TIME_MM2
0338                  01176 return_COR_M2_MIN
0338   0008           01177     return
                      01178     
0339                  01179 correct_M1_minus                ; функцию коррекции переменной M1.
0339   03B2           01180     decf TIME_MM1,1
033A   302F           01181     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
033B   0632           01182     xorwf TIME_MM1, w;
033C   1D03           01183     btfss STATUS, 0x02
033D   2???           01184     goto return_COR_M1_MIN
033E   3039           01185     movlw       0x39
033F   00B2           01186     movwf       TIME_MM1
0340                  01187 return_COR_M1_MIN
0340   0008           01188     return
                      01189     
0341                  01190 correct_S2_minus                ; функцию коррекции переменной S2.
0341   03B5           01191     decf TIME_SS2,1
0342   302F           01192     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0343   0635           01193     xorwf TIME_SS2, w;
0344   1D03           01194     btfss STATUS, 0x02
0345   2???           01195     goto return_COR_S2_MIN
0346   3035           01196     movlw       0x35
0347   00B5           01197     movwf       TIME_SS2
0348                  01198 return_COR_S2_MIN
0348   0008           01199     return
                      01200     
0349                  01201 correct_S1_minus                ; функцию коррекции переменной S1.
0349   03B4           01202     decf TIME_SS1,1
034A   302F           01203     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
034B   0634           01204     xorwf TIME_SS1, w;
034C   1D03           01205     btfss STATUS, 0x02
034D   2???           01206     goto return_COR_S1_MIN
034E   3039           01207     movlw       0x39
034F   00B4           01208     movwf       TIME_SS1
0350                  01209 return_COR_S1_MIN
0350   0008           01210     return
                      01211     
                      01212     ;==============================================
                      01213     
0351                  01214 save_T                          ; функция проверки и сохранения времени
0351   3001           01215     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
0352   2???           01216     call delay                  
0353   2???           01217     call Keyboard               ;опрос клавиатуры что бы выяснить
0354   08C1           01218     movf Cnt,1                  ;отжата клавиша или нет
0355   1D03           01219     btfss STATUS,Z              ;если нет, то циклим
0356   2???           01220     goto save_T
0357   3006           01221     movlw 0x6                   ; если происходит переполнение NumPressKey
0358   0643           01222     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
0359   1903           01223     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
035A   2???           01224     goto START                  ; в постоянные
035B   0AC3           01225     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
035C   2???           01226     goto change_time            ; его и возвращаемся в функцию изменения времени
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01227     
035D                  01228 change_HMS
035D   3001           01229     movlw 0x1                           
035E   2???           01230     call delay                  ;Задержка для борьбы с дребезгом контактов
035F   2???           01231     call Keyboard               ;опрос клавиатуры что бы выяснить
0360   08C1           01232     movf Cnt,1                  ;отжата клавиша или нет
0361   1D03           01233     btfss STATUS,Z              ;если нет, то циклим
0362   2???           01234     goto change_HMS
0363   0846           01235     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
0364   00B1           01236     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0365   0845           01237     movfw TEMP_TIME_HH1         ; значение)
0366   00B0           01238     movwf TIME_HH1
0367   0848           01239     movfw TEMP_TIME_MM2         
0368   00B3           01240     movwf TIME_MM2
0369   0847           01241     movfw TEMP_TIME_MM1         
036A   00B2           01242     movwf TIME_MM1
036B   084A           01243     movfw TEMP_TIME_SS2         
036C   00B5           01244     movwf TIME_SS2
036D   0849           01245     movfw TEMP_TIME_SS1         
036E   00B4           01246     movwf TIME_SS1
036F   2???           01247     goto START                  ; возврат в основной цикл
                      01248     
                      01249     ;==============================================
                      01250     ;==============================================
                      01251     
0370                  01252 change_day                      ; функция изменения дня недели
0370   2???           01253     call Keyboard
0371   183B           01254     btfsc Key1,0
0372   2???           01255     goto plus_day_ch            ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбра
                            нное число (inc)
0373   183C           01256     btfsc Key2,0
0374   2???           01257     goto minus_day_ch           ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбра
                            нное число (dec)
0375   183D           01258     btfsc Key3,0                ; если нажали кнопку 3 переходим в функцию, которая сохраняет результат
0376   2???           01259     goto save_end_day
0377   183E           01260     btfsc Key4,0                ; если нажали кнопку 4 переходим в функцию, которая отменяет все изменен
                            ия
0378   2???           01261     goto save_day_ch
                      01262     
0379   2???           01263     call LCD_one                ; Отрисовка первой строки на дисплее
037A   2???           01264     call delay_one_sec          ; задержка пока на 1сек
037B   2???           01265     goto change_day
                      01266     
037C                  01267 plus_day_ch
037C   3001           01268     movlw 0x1                           
037D   2???           01269     call delay                  ;Задержка для борьбы с дребезгом контактов
037E   2???           01270     call Keyboard               ;опрос клавиатуры что бы выяснить
037F   08C1           01271     movf Cnt,1                  ;отжата клавиша или нет
0380   1D03           01272     btfss STATUS,Z              ;если нет, то циклим
0381   2???           01273     goto plus_day_ch
0382   0AB6           01274     incf DAY,1                  ;Инкремент регистра День
0383   3007           01275     movlw .7                    ;Если день равен 7, то обнуляем
0384   0636           01276     xorwf DAY, w;               ;после чего возвращаемся в функцию изменения дня
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0385   1D03           01277     btfss STATUS, 0x02          ;Если не равен 7, то просто возвращаемся в функцию
0386   2???           01278     goto change_day                     
0387   3000           01279     movlw .0
0388   00B6           01280     movwf DAY
0389   2???           01281     goto change_day
                      01282     
038A                  01283 minus_day_ch
038A   3001           01284     movlw 0x1                           
038B   2???           01285     call delay                  ;Задержка для борьбы с дребезгом контактов
038C   2???           01286     call Keyboard               ;опрос клавиатуры что бы выяснить
038D   08C1           01287     movf Cnt,1                  ;отжата клавиша или нет
038E   1D03           01288     btfss STATUS,Z              ;если нет, то циклим
038F   2???           01289     goto minus_day_ch
0390   03B6           01290     decf DAY,1
0391   30FF           01291     movlw .255                  ;Декремент регистра День
0392   0636           01292     xorwf DAY, w;               ;Если день равен 255, то присваиваем регистру 6
0393   1D03           01293     btfss STATUS, 0x02          ;после чего возвращаемся в функцию изменения дня
0394   2???           01294     goto change_day             ;Если не равен 255, то просто возвращаемся в функцию
0395   3006           01295     movlw .6
0396   00B6           01296     movwf DAY
0397   2???           01297     goto change_day
                      01298     
0398                  01299 save_day_ch
0398   3001           01300     movlw 0x1                           
0399   2???           01301     call delay                  ;Задержка для борьбы с дребезгом контактов
039A   2???           01302     call Keyboard               ;опрос клавиатуры что бы выяснить
039B   08C1           01303     movf Cnt,1                  ;отжата клавиша или нет
039C   1D03           01304     btfss STATUS,Z              ;если нет, то циклим
039D   2???           01305     goto save_day_ch
039E   084B           01306     movfw TEMP_DAY              ;Присваиваем значение временного регистра постоянному
039F   00B6           01307     movwf DAY                   ;что бы отменить изменения и выходим в основной цикл
03A0   2???           01308     goto START
                      01309     
03A1                  01310 save_end_day
03A1   3001           01311     movlw 0x1                           
03A2   2???           01312     call delay                  ;Задержка для борьбы с дребезгом контактов
03A3   2???           01313     call Keyboard               ;опрос клавиатуры что бы выяснить
03A4   08C1           01314     movf Cnt,1                  ;отжата клавиша или нет
03A5   1D03           01315     btfss STATUS,Z              ;если нет, то циклим
03A6   2???           01316     goto save_end_day
03A7   2???           01317     goto START                  ;Возвращаемся в основной цикл
                      01318     ;==============================================
                      01319     ;==============================================
03A8                  01320 change_alarm                    ; функция изменения времени будильника
03A8   2???           01321     call Keyboard               ; спрашиваем клавиатуру
03A9   183B           01322     btfsc Key1,0
03AA   2???           01323     call correct_A_plus         ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбра
                            нное число (inc)
03AB   183C           01324     btfsc Key2,0
03AC   2???           01325     call correct_A_minus        ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбра
                            нное число (dec)
03AD   183D           01326     btfsc Key3,0
03AE   2???           01327     goto save_A                 ; переход к другой цифре путем инкремента NPK, при переполнения переменн
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ой происходит сохранение результата и выход в основной цикл
03AF   183E           01328     btfsc Key4,0                ; выход из настройки времени в основной цикл без сохранения результата
03B0   2???           01329     goto change_AHMS
                      01330     
03B1   2???           01331     call LCD_two                ; отрисовка второй строки
                      01332     
03B2   2???           01333     call delay_one_sec          ; задержка пока на 1сек
03B3   2???           01334     goto change_alarm
                      01335     
                      01336     ;----------------------------------------
                      01337     
03B4                  01338 correct_A_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
03B4   3001           01339     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
03B5   2???           01340     call delay                  
03B6   2???           01341     call Keyboard               ;опрос клавиатуры что бы выяснить
03B7   08C1           01342     movf Cnt,1                  ;отжата клавиша или нет
03B8   1D03           01343     btfss STATUS,Z              ;если нет, то циклим
03B9   2???           01344     goto correct_A_plus                     
03BA   3009           01345     movlw 0x9                   ; если NumPressKey = 9, то вызываем
03BB   0643           01346     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
03BC   1903           01347     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03BD   2???           01348     call correct_H2_A
                      01349     
03BE   300A           01350     movlw 0xa                   ; если NumPressKey = а, то вызываем
03BF   0643           01351     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03C0   1903           01352     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C1   2???           01353     call correct_H1_A
                      01354 
03C2   300B           01355     movlw 0xb                   ; если NumPressKey = b, то вызываем
03C3   0643           01356     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
03C4   1903           01357     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C5   2???           01358     call correct_M2_A
                      01359     
03C6   300C           01360     movlw 0xc                   ; если NumPressKey = c, то вызываем
03C7   0643           01361     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
03C8   1903           01362     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03C9   2???           01363     call correct_M1_A
                      01364     
03CA   0008           01365     return
                      01366     
                      01367     ;----------------------------------------
                      01368     
03CB                  01369 correct_H2_A                    ; функцию коррекции переменной H2.
03CB   0AB8           01370     incf ALARM_HH2,1            ; инкремент переменной Н2
03CC   3033           01371     movlw 0x33                  ; Если !=3, переходим обратно в функцию
03CD   0638           01372     xorwf ALARM_HH2, w          ; correct_A_plus и проверяем там следующее условие
03CE   1D03           01373     btfss STATUS, 0x02
03CF   2???           01374     goto return_COR_H2_A
03D0   3030           01375     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
03D1   00B8           01376     movwf       ALARM_HH2
03D2                  01377 return_COR_H2_A
03D2   0008           01378     return                      ; и идем обратно в correct_A_plus и проверяем там следующее условие
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01379     
03D3                  01380 correct_H1_A                    ; функцию коррекции переменной H1.
03D3   0AB7           01381     incf ALARM_HH1,1            ; инкремент переменной Н1
03D4   3032           01382     movlw 0x32                  ; Если = 2, переходим в функцию three_H1_A, которая служит для 
03D5   0638           01383     xorwf ALARM_HH2, w          ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01384                                 ; ограничить единицы при десятках = 2   
03D6   1903           01385     btfsc STATUS, 0x02
03D7   2???           01386     goto three_H1_A                     
03D8   303A           01387     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обнyления - 9
                            .
03D9   0637           01388 ta1 xorwf ALARM_HH1, w  
03DA   1D03           01389     btfss STATUS, 0x02
03DB   2???           01390     goto return_COR_H1_A
03DC   3030           01391     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
03DD   00B7           01392     movwf       ALARM_HH1
03DE                  01393 return_COR_H1_A
03DE   0008           01394     return
                      01395     
03DF                  01396 three_H1_A
03DF   3034           01397     movlw 0x34                  ; предел для обнуления при переменной = 2
03E0   2???           01398     goto ta1                    ; возврат к метке ta1 для продолжения корректной работы
                      01399     
03E1                  01400 correct_M2_A                    ; функцию коррекции переменной M2.
03E1   0ABA           01401     incf ALARM_MM2,1
03E2   3036           01402     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
03E3   063A           01403     xorwf ALARM_MM2, w;
03E4   1D03           01404     btfss STATUS, 0x02
03E5   2???           01405     goto return_COR_M2_A
03E6   3030           01406     movlw       0x30
03E7   00BA           01407     movwf       ALARM_MM2
03E8                  01408 return_COR_M2_A
03E8   0008           01409     return
                      01410     
03E9                  01411 correct_M1_A                    ; функцию коррекции переменной M1.
03E9   0AB9           01412     incf ALARM_MM1,1
03EA   303A           01413     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
03EB   0639           01414     xorwf ALARM_MM1, w;
03EC   1D03           01415     btfss STATUS, 0x02
03ED   2???           01416     goto return_COR_M1_A
03EE   3030           01417     movlw       0x30
03EF   00B9           01418     movwf       ALARM_MM1
03F0                  01419 return_COR_M1_A
03F0   0008           01420     return
                      01421     
                      01422     ;----------------------------------------
                      01423     
03F1                  01424 correct_A_minus                 ; функция типа switch для ввода отдельных символов(декремент)
03F1   3001           01425     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов
03F2   2???           01426     call delay                          
03F3   2???           01427     call Keyboard               ;опрос клавиатуры что бы выяснить
03F4   08C1           01428     movf Cnt,1                  ;отжата клавиша или нет
03F5   1D03           01429     btfss STATUS,Z              ;если нет, то циклим
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F6   2???           01430     goto correct_A_minus
03F7   3009           01431     movlw 0x9                   ; если NumPressKey = 9, то вызываем
03F8   0643           01432     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
03F9   1903           01433     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03FA   2???           01434     call correct_H2_minus_A
                      01435     
03FB   300A           01436     movlw 0xa                   ; если NumPressKey = a, то вызываем
03FC   0643           01437     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
03FD   1903           01438     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
03FE   2???           01439     call correct_H1_minus_A
                      01440 
03FF   300B           01441     movlw 0xb                   ; если NumPressKey = b, то вызываем
0400   0643           01442     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0401   1903           01443     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0402   2???           01444     call correct_M2_minus_A
                      01445     
0403   300C           01446     movlw 0xc                   ; если NumPressKey = c, то вызываем
0404   0643           01447     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0405   1903           01448     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0406   2???           01449     call correct_M1_minus_A
                      01450     
0407   0008           01451     return
                      01452     
                      01453     ;----------------------------------------
                      01454     
0408                  01455 correct_H2_minus_A              ; функцию коррекции переменной H2.
0408   03B8           01456     decf ALARM_HH2,1            ; декремент переменной Н2
0409   302F           01457     movlw 0x2f                  ; Если !=2f, переходим обратно в функцию
040A   0638           01458     xorwf ALARM_HH2, w          ; correct_А_minus и проверяем там следующее условие
040B   1D03           01459     btfss STATUS, 0x02
040C   2???           01460     goto return_COR_H2_A_minus
040D   3032           01461     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
040E   00B8           01462     movwf       ALARM_HH2
040F                  01463 return_COR_H2_A_minus
040F   0008           01464     return                      ; и идем обратно в correct_А_minus и проверяем там следующее условие
                      01465     
0410                  01466 correct_H1_minus_A              ; функцию коррекции переменной H1.
0410   03B7           01467     decf ALARM_HH1,1            ; декремент переменной Н1
0411   302F           01468     movlw 0x2f                  ; Если != 2f, переходим обратно в функцию 
0412   0637           01469     xorwf ALARM_HH1, w          ; correct_А_minus и проверяем там следующее условие
                      01470                                         
0413   1D03           01471     btfss STATUS, 0x02
0414   2???           01472     goto return_COR_H1_A_minus          
0415   3032           01473     movlw 0x32                  ; если переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0416   0638           01474     xorwf ALARM_HH2, w  
0417   1903           01475     btfsc STATUS, 0x02
0418   2???           01476     goto three_H1_minus_A
0419   3039           01477     movlw       0x39            ; если переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
041A   00B7           01478 ta2 movwf       ALARM_HH1
041B                  01479 return_COR_H1_A_minus
041B   0008           01480     return
                      01481     
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041C                  01482 three_H1_minus_A
041C   3033           01483     movlw 0x33                  ; значение для присваивания при Н2 = 2.
041D   2???           01484     goto ta2                    ; возврат к метке tа2 для продолжения корректной работы
                      01485     
041E                  01486 correct_M2_minus_A              ; функцию коррекции переменной M2.
041E   03BA           01487     decf ALARM_MM2,1
041F   302F           01488     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
0420   063A           01489     xorwf ALARM_MM2, w;
0421   1D03           01490     btfss STATUS, 0x02
0422   2???           01491     goto return_COR_M2_A_minus
0423   3035           01492     movlw       0x35
0424   00BA           01493     movwf       ALARM_MM2
0425                  01494 return_COR_M2_A_minus
0425   0008           01495     return
                      01496     
0426                  01497 correct_M1_minus_A              ; функцию коррекции переменной M1.
0426   03B9           01498     decf ALARM_MM1,1
0427   302F           01499     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0428   0639           01500     xorwf ALARM_MM1, w;
0429   1D03           01501     btfss STATUS, 0x02
042A   2???           01502     goto return_COR_M1_A_minus
042B   3039           01503     movlw       0x39
042C   00B9           01504     movwf       ALARM_MM1
042D                  01505 return_COR_M1_A_minus
042D   0008           01506     return
                      01507     
                      01508     ;==============================================
                      01509     
042E                  01510 save_A                          ; функция проверки и сохранения времени
042E   3001           01511     movlw 0x1                   ;Задержка для борьбы с дребезгом контактов      
042F   2???           01512     call delay                          
0430   2???           01513     call Keyboard               ;опрос клавиатуры что бы выяснить
0431   08C1           01514     movf Cnt,1                  ;отжата клавиша или нет
0432   1D03           01515     btfss STATUS,Z              ;если нет, то циклим
0433   2???           01516     goto save_A
0434   300D           01517     movlw 0xd                   ; если происходит переполнение NumPressKey
0435   0643           01518     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
0436   1903           01519     btfsc STATUS, 0x02          ; и мы выходим из меню настройки
0437   2???           01520     goto START                  
0438   0AC3           01521     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
0439   2???           01522     goto change_alarm           ; его и возвращаемся в функцию изменения времени
                      01523     
043A                  01524 change_AHMS
043A   3001           01525     movlw 0x1                           
043B   2???           01526     call delay                  ;Задержка для борьбы с дребезгом контактов
043C   2???           01527     call Keyboard               ;опрос клавиатуры что бы выяснить
043D   08C1           01528     movf Cnt,1                  ;отжата клавиша или нет
043E   1D03           01529     btfss STATUS,Z              ;если нет, то циклим
043F   2???           01530     goto change_AHMS
0440   084D           01531     movfw TEMP_ALARM_HH2        ; записываем значения временных переменных в постоянные (NPK 
0441   00B8           01532     movwf ALARM_HH2             ; необходим для определения ячейки, в которую записываем
0442   084C           01533     movfw TEMP_ALARM_HH1        ; значение)
0443   00B7           01534     movwf ALARM_HH1
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0444   084F           01535     movfw TEMP_ALARM_MM2                
0445   00BA           01536     movwf ALARM_MM2
0446   084E           01537     movfw TEMP_ALARM_MM1                
0447   00B9           01538     movwf ALARM_MM1
0448   2???           01539     goto START                  ; возврат в основной цикл
                      01540     
                      01541     ;==============================================
                      01542     ;==============================================
                      01543                             
                      01544 ;small_delay:                   ; задержка для драйвера
                      01545 ;    movwf fCOUNTER1
                      01546 ;    clrwdt
                      01547 ;    decfsz fCOUNTER1,F
                      01548 ;    goto $-2
                      01549 ;    return
                      01550     
Warning[205]: Found directive in column 1. (end)
                      01551 end  ; конец программы
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           0000013F
BF                                00000000
BRGH                              00000002
Blink                             00000040
Blink_Alarm                       00000042
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Cnt                               00000041
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               000000DC
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key9                              0000003F
Keyboard                          00000267
LCD_one                           00000184
LCD_two                           000001FE
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULL_BA_NAB                       000000CF
NumAlarmBit                       00000050
NumPressKey                       00000043
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Reg_1                             00000023
Reg_2                             00000024
Reg_3                             00000025
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000045
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_014C                      0000014C
_.org_0_014F                      0000014F
_.org_0_0151                      00000151
_.org_0_0156                      00000156
_.org_0_015D                      0000015D
_.org_0_0164                      00000164
_.org_0_016B                      0000016B
_.org_0_0172                      00000172
_.org_0_0179                      00000179
_.org_0_0180                      00000180
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
alarm_plus_blink                  00000129
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
blinkON                           000000D3
blink_off_ALARM                   0000024E
blink_off_H1                      000001AE
blink_off_H1_A                    00000224
blink_off_H2                      000001A0
blink_off_H2_A                    00000216
blink_off_M1                      000001CA
blink_off_M1_A                    00000240
blink_off_M2                      000001BC
blink_off_M2_A                    00000232
blink_off_S1                      000001E6
blink_off_S2                      000001D8
blink_off_day                     000001F4
blink_on_ALARM                    0000025B
blink_on_ALARM_nop                0000025A
blink_on_H1                       000001B1
blink_on_H1_A                     00000227
blink_on_H2                       000001A3
blink_on_H2_A                     00000219
blink_on_M1                       000001CD
blink_on_M1_A                     00000243
blink_on_M2                       000001BF
blink_on_M2_A                     00000235
blink_on_S1                       000001E9
blink_on_S2                       000001DB
blink_on_day                      000001FB
c_nop                             000000A3
change_AHMS                       0000043A
change_HMS                        0000035D
change_alarm                      000003A8
change_day                        00000370
change_time                       0000029B
col1                              0000026F
col2                              0000027A
col3                              00000283
correct_A_minus                   000003F1
correct_A_plus                    000003B4
correct_H1                        000002CE
correct_H1_A                      000003D3
correct_H1_minus                  00000323
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

correct_H1_minus_A                00000410
correct_H2                        000002C6
correct_H2_A                      000003CB
correct_H2_minus                  0000031B
correct_H2_minus_A                00000408
correct_M1                        000002E4
correct_M1_A                      000003E9
correct_M1_minus                  00000339
correct_M1_minus_A                00000426
correct_M2                        000002DC
correct_M2_A                      000003E1
correct_M2_minus                  00000331
correct_M2_minus_A                0000041E
correct_S1                        000002F4
correct_S1_minus                  00000349
correct_S2                        000002EC
correct_S2_minus                  00000341
correct_T_minus                   000002FC
correct_T_plus                    000002A7
day_plus_blink                    0000011F
delay                             0000013B
delay_five                        0000016F
delay_four                        00000168
delay_one                         00000153
delay_one_sec                     00000145
delay_seven                       0000017D
delay_six                         00000176
delay_three                       00000161
delay_two                         0000015A
end_ALARM                         000000D9
end_clock                         000000A9
end_keyb                          00000290
exday                             00000115
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            00000101
if_S_TWO_ZERO                     000000B3
if_T_AT_H1                        000000BD
if_T_AT_H2                        000000B8
if_T_AT_M1                        000000C7
if_T_AT_M2                        000000C2
inc_BA                            000000CC
minus_day_ch                      0000038A
monday                            000000E5
nop_end_key                       0000028F
paintH1                           000001A6
paintH1_A                         0000021C
paintH2                           00000198
paintH2_A                         0000020E
paintM1                           000001C2
paintM1_A                         00000238
paintM2                           000001B4
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

paintM2_A                         0000022A
paintS1                           000001DE
paintS2                           000001D0
paint_ALARM                       00000246
plus_day_ch                       0000037C
printDay                          000001EC
return_ALARM                      00000266
return_A_H1                       00000229
return_A_H2                       0000021B
return_A_M1                       00000245
return_A_M2                       00000237
return_COR_H1                     000002D9
return_COR_H1_A                   000003DE
return_COR_H1_A_minus             0000041B
return_COR_H1_MIN                 0000032E
return_COR_H2                     000002CD
return_COR_H2_A                   000003D2
return_COR_H2_A_minus             0000040F
return_COR_H2_MIN                 00000322
return_COR_M1                     000002EB
return_COR_M1_A                   000003F0
return_COR_M1_A_minus             0000042D
return_COR_M1_MIN                 00000340
return_COR_M2                     000002E3
return_COR_M2_A                   000003E8
return_COR_M2_A_minus             00000425
return_COR_M2_MIN                 00000338
return_COR_S1                     000002FB
return_COR_S1_MIN                 00000350
return_COR_S2                     000002F3
return_COR_S2_MIN                 00000348
return_DAY                        000001FD
return_H1                         000001B3
return_H2                         000001A5
return_M1                         000001CF
return_M2                         000001C1
return_S1                         000001EB
return_S2                         000001DD
saturday                          00000108
save_A                            0000042E
save_T                            00000351
save_day_ch                       00000398
save_end_day                      000003A1
sunday                            0000010F
t1                                000002D4
t2                                0000032D
ta1                               000003D9
ta2                               0000041A
ten_clock                         0000009A
ten_clock_five                    00000097
ten_clock_one                     00000099
three_H1                          000002DA
three_H1_A                        000003DF
MPASM 5.75                          MAIN.ASM   11-2-2017  1:15:58         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

three_H1_minus                    0000032F
three_H1_minus_A                  0000041C
three_nop                         000000A7
thursday                          000000FA
time_plus_blink                   00000116
tuesday                           000000EC
two_nop                           000000A8
v_nop                             000000A2
wait                              
wednesday                         000000F3
write                             00000133
x_nop                             000000A4
z_nop                             000000A5

Errors   :     0
Warnings :    13 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

