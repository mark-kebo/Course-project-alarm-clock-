MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00002 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00003 errorlevel   -302
                      00004         ;  директивы  типа  контроллера,  под-
                      00005         ;ключения  заголовочного  файла  и  вы-
                      00006         ;вода сообщений об ошибках
                      00007 #define   bank0  bcf STATUS,  RP0
                      00008 #define   bank1  bsf STATUS,  RP0
                      00009 ; директивы, позволяющие заменять в
                      00010         ;теле  ПО  команды,  указанные  после
                      00011         ;этой  директивы  (bcf  ,  bsf)  –  метками
                      00012         ;bank0, bank1. Обратную замену произ-
                      00013         ;водит компилятор
  00000020            00014 WAIT        equ     0x20
  00000026            00015 fCOUNTER    equ     0x26
  00000027            00016 fCOUNTER2   equ     0x27
  00000030            00017 TIME_HH1    equ     0x30
  00000031            00018 TIME_HH2    equ     0x31
  00000032            00019 TIME_MM1    equ     0x32
  00000033            00020 TIME_MM2    equ     0x33
  00000034            00021 TIME_SS1    equ     0x34
  00000035            00022 TIME_SS2    equ     0x35
  00000036            00023 DAY         equ     0x36
  00000037            00024 ALARM_HH1   equ     0x37
  00000038            00025 ALARM_HH2   equ     0x38
  00000039            00026 ALARM_MM1   equ     0x39
  0000003A            00027 ALARM_MM2   equ     0x3A
  0000003B            00028 Key1        equ     0x3B
  0000003C            00029 Key2        equ     0x3C
  0000003D            00030 Key3        equ     0x3D
  0000003E            00031 Key4        equ     0x3E
  0000003F            00032 Key5        equ     0x3F
  00000040            00033 Key6        equ     0x40
  00000041            00034 Key7        equ     0x41
  00000042            00035 Key8        equ     0x42
  00000043            00036 Key9        equ     0x43
  00000044            00037 fCOUNTER1   equ     0x44
  00000045            00038 TEMP_TIME_HH1    equ        0x45
  00000046            00039 TEMP_TIME_HH2    equ        0x46
  00000047            00040 TEMP_TIME_MM1    equ        0x47
  00000048            00041 TEMP_TIME_MM2    equ        0x48
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000049            00042 TEMP_TIME_SS1    equ        0x49
  0000004A            00043 TEMP_TIME_SS2    equ        0x4A
  0000004B            00044 TEMP_DAY         equ        0x4B
  0000004C            00045 TEMP_ALARM_HH1   equ        0x4C
  0000004D            00046 TEMP_ALARM_HH2   equ        0x4D
  0000004E            00047 TEMP_ALARM_MM1   equ        0x4E
  0000004F            00048 TEMP_ALARM_MM2   equ        0x4F
  00000050            00049 NumPressKey      equ        0x50
                      00050     ;вспомогательные  регистры,  назначе-
                      00051         ;ние которых приведено в комментариях
  0002                00052     constant   DS = .2
  0002                00053     constant   RST = .2
                      00054         ;  директивы,  ставящие в  соответствие
                      00055         ;меткам DS  и  RST  значение  0.  Анало-
                      00056         ;гия директив equ для имен регистров.
                      00057 
                      00058 wait  macro     time
                      00059     movlw    (time/5)-1
                      00060     movwf    WAIT
                      00061     call    wait5u
                      00062     endm
                      00063         ;макрос паузы с именем wait. Особен-
                      00064         ;ность этого макроса состоит в том, что
                      00065         ;у  него  имеется  параметр  –  time.  При
                      00066         ;вызове  макроса  значение  параметра
                      00067         ;указывается  после  имени  макроса  в
                      00068         ;виде  целого  десятичного  числа  крат-
                      00069         ;ного  5  (в  данном  примере).  В  теле
                      00070         ;макроса  это  число  подставляется  в
                      00071         ;«переменную» time и далее использу-
                      00072         ;ется вычисленное значение (которое в
                      00073         ;данном случае  выступает  в  роли  кон-
                      00074         ;станты, записываемой в W). Вместе с
                      00075         ;процедурой  wait5u  длительность  за-
                      00076         ;держки,  обеспечиваемая  макросом
                      00077         ;равна time микросекунд
                      00078 
                      00079     org 0x0000
0000   0183           00080     clrf STATUS
0001   3000           00081     movlw 0x00
0002   008A           00082     movwf PCLATH
0003   2???           00083     goto begin
                      00084         ;выбор нулевой страницы памяти ко-
                      00085         ;манд и размещение на ней откомпили-
                      00086         ;рованного кода
                      00087 
0004                  00088 begin
0004   1683           00089     bank1  ; выбор первого банка памяти. Для вы-
                      00090         ;зова используется метка bank1, объяв-
                      00091         ;ленная выше директивой #define
0005   308F           00092     movlw 0x8F
0006   0081           00093     movwf OPTION_REG
0007   0064           00094     clrwdt
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095         ;установка  максимального  времени
                      00096         ;срабатывания  сторожевого  таймера  и
                      00097         ;его сброс
0008   018B           00098     clrf INTCON
0009   018C           00099     clrf PIE1
000A   018D           00100     clrf PIE2
                      00101         ;отключение  прерываний  и  их  обработки
000B   3000           00102     movlw .0
000C   0086           00103     movwf TRISB
000D   0087           00104     movwf TRISC
000E   0089           00105     movwf TRISE
                      00106         ; конфигурирование  портов  В, С, Е
000F   30F8           00107     movlw b'11111000' 
0010   0085           00108     movwf TRISA 
0011   3000           00109     movlw b'00000000'
0012   0088           00110     movwf TRISD
0013   300F           00111     movlw b'00001111'
0014   0081           00112     movwf OPTION_REG
                      00113         ;конфигурирование  RD0  как  входа
                      00114         ;для  установки  на  нем  «1»  в  качестве
                      00115         ;исходного  состояния  интерфейса  «1-Wire»
0015   019F           00116     clrf ADCON1 
0016   149F           00117     bsf ADCON1,0x01 
0017   151F           00118     bsf ADCON1,0x02 
0018   1283           00119     bank0
0019   01BB           00120     clrf Key1    
001A   01BC           00121     clrf Key2       
001B   01BD           00122     clrf Key3       
001C   01BE           00123     clrf Key4       
001D   01BF           00124     clrf Key5      
001E   01C0           00125     clrf Key6       
001F   01C1           00126     clrf Key7      
0020   01C2           00127     clrf Key8      
0021   01C3           00128     clrf Key9       
0022   0187           00129     clrf PORTC
0023   0188           00130     clrf PORTD
                      00131 ; подготовка к передаче команд на контроллер
                      00132 ;HD путем установки RC0=0
0024   3001           00133     movlw 0x01
0025   2???           00134     call write
0026   300F           00135     movlw 0x0f
0027   2???           00136     call delay
                      00137 ; передача команды Clear  Display для очистки
                      00138 ;дисплея и установки счетчика адреса видеопа-
                      00139 ;мяти  на  нулевой  адрес  (первое  знакоместо  в
                      00140 ;верхней строке), с необходимой задержкой
0028   0064           00141     clrwdt
0029   3038           00142     movlw 0x38
002A   2???           00143     call write
002B   300F           00144     movlw 0x0f
002C   2???           00145     call delay
                      00146 
                      00147 ; передача команды Function Set для установки
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ;режима  2-х  строчного  индикатора,  размера
                      00149 ;знакоместа 5х7 и 8 разрядной шины данных
002D   3006           00150     movlw 0x06
002E   2???           00151     call write
002F   300F           00152     movlw 0x0f
0030   2???           00153     call delay
                      00154 ;передача  команды  Entry  Mode  Set  для  уста-
                      00155 ;новки режима увеличения счетчика адреса ви-
                      00156 ;деопамяти, после каждой записи символа в нее,
                      00157 ;при неподвижности видеопамяти относительно
                      00158 ;индикатора
0031   300C           00159     movlw 0x0c
0032   2???           00160     call write
0033   300F           00161     movlw 0x0f
0034   2???           00162     call delay
                      00163 ;  передача  команды  Display  ON/OFF  control
                      00164 ;для включения дисплея с отключенным курсо-
                      00165 ;ром.  На  этом  этап инициализации дисплея за-
                      00166 ;кончен.
0035   3030           00167         movlw   0x30
0036   00B0           00168         movwf   TIME_HH1
0037   00B1           00169         movwf   TIME_HH2
0038   00B2           00170         movwf   TIME_MM1
0039   00B3           00171         movwf   TIME_MM2
003A   00B4           00172         movwf   TIME_SS1
003B   00B5           00173         movwf   TIME_SS2
003C   00B7           00174         movwf   ALARM_HH1
003D   00B8           00175         movwf   ALARM_HH2
003E   00B9           00176         movwf   ALARM_MM1
003F   00BA           00177         movwf   ALARM_MM2
0040   3000           00178         movlw   .0
0041   00B6           00179         movwf   DAY
                      00180 
0042                  00181 START
0042   3030           00182         movlw   0x30
0043   00D0           00183         movwf   NumPressKey     ; обнуление регистров при каждом проходе основного цикла
0044   00C5           00184         movwf   TEMP_TIME_HH1
0045   00C6           00185         movwf   TEMP_TIME_HH2
0046   00C7           00186         movwf   TEMP_TIME_MM1
0047   00C8           00187         movwf   TEMP_TIME_MM2
0048   00C9           00188         movwf   TEMP_TIME_SS1
0049   00CA           00189         movwf   TEMP_TIME_SS2
004A   00CC           00190         movwf   TEMP_ALARM_HH1
004B   00CD           00191         movwf   TEMP_ALARM_HH2
004C   00CE           00192         movwf   TEMP_ALARM_MM1
004D   00CF           00193         movwf   TEMP_ALARM_MM2
004E   3000           00194         movlw   .0
004F   00CB           00195         movwf   TEMP_DAY
0050   2???           00196         call Keyboard           ; читаем клавиатуру
0051   183B           00197         btfsc Key1,0            ; проверка нажатия клавиши "1",  если нажата, то переходим 
0052   2???           00198         goto change_time        ; к изменению времени, нет - тогда проверяем клавишу 2
0053   183C           00199         btfsc Key2,0            ; проверка нажатия клавиши "2",  если нажата, то переходим 
0054   2???           00200         goto change_day         ; к изменению дня недели, нет - тогда проверяем клавишу 3
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201         
0055   1007           00202         bcf PORTC, 0
0056   3080           00203         movlw b'10000000'       ; установка адреса
0057   2???           00204         call write
0058   1407           00205         bsf PORTC,0
                      00206 
                      00207         ;Отрисовка первой строки
0059   0831           00208         movfw TIME_HH2
005A   2???           00209         call write
005B   0830           00210         movfw TIME_HH1
005C   2???           00211         call write
005D   303A           00212         movlw ':'
005E   2???           00213         call write
005F   0833           00214         movfw TIME_MM2
0060   2???           00215         call write
0061   0832           00216         movfw TIME_MM1
0062   2???           00217         call write
0063   303A           00218         movlw ':'
0064   2???           00219         call write
0065   0835           00220         movfw TIME_SS2
0066   2???           00221         call write
0067   0834           00222         movfw TIME_SS1
0068   2???           00223         call write
                      00224 
0069   3020           00225         movlw ' '
006A   2???           00226         call write
006B   3020           00227         movlw ' '
006C   2???           00228         call write
006D   0836           00229         movfw   DAY                             
006E   2???           00230         call    DEC                             
                      00231 
                      00232         ;Счет десятков секунд (0-6) - TIME_SS1
006F   0AB4           00233         incf TIME_SS1,1
0070   303A           00234         movlw 0x3A                      ; if !=10
0071   0634           00235         xorwf TIME_SS1, w;
0072   1D03           00236         btfss STATUS, 0x02
0073   2???           00237         goto end_clock
                      00238         ;обнуление TIME_MM1
0074   3030           00239         movlw 0x30
0075   00B4           00240         movwf   TIME_SS1
                      00241 
                      00242         ;Счет десятков секунд (0-6) - TIME_SS2
0076   0AB5           00243         incf TIME_SS2,1
0077   3036           00244         movlw 0x36                      ; if !=6
0078   0635           00245         xorwf TIME_SS2, w;
0079   1D03           00246         btfss STATUS, 0x02
007A   2???           00247         goto end_clock
                      00248         ;обнуление TIME_MM2
007B   3030           00249         movlw 0x30
007C   00B5           00250         movwf   TIME_SS2
                      00251         
                      00252         ;Счет десятков минут (0-6) - TIME_MM1
007D   0AB2           00253         incf TIME_MM1,1
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   303A           00254         movlw 0x3A                      ; if !=10
007F   0632           00255         xorwf TIME_MM1, w;
0080   1D03           00256         btfss STATUS, 0x02
0081   2???           00257         goto end_clock
                      00258         ;обнуление TIME_MM1
0082   3030           00259         movlw 0x30
0083   00B2           00260         movwf   TIME_MM1
                      00261 
                      00262         ;Счет десятков минут (0-6) - TIME_MM2
0084   0AB3           00263         incf TIME_MM2,1
0085   3036           00264         movlw 0x36                      ; if !=6
0086   0633           00265         xorwf TIME_MM2, w;
0087   1D03           00266         btfss STATUS, 0x02
0088   2???           00267         goto end_clock
                      00268         ;обнуление TIME_MM2
0089   3030           00269         movlw 0x30
008A   00B3           00270         movwf   TIME_MM2
                      00271 
                      00272         ;Счет десятков единиц часов - TIME_НН2, TIME_НН1
008B   0AB0           00273         incf TIME_HH1,1
008C   3034           00274         movlw 0x34                      ; if !=4
008D   0630           00275         xorwf TIME_HH1, w;
008E   1D03           00276         btfss STATUS, 0x02
008F   2???           00277         goto ten_clock
0090   3032           00278         movlw 0x32                      ; if !=2
0091   0631           00279         xorwf TIME_HH2, w;
0092   1D03           00280         btfss STATUS, 0x02
0093   2???           00281         goto ten_clock
0094   3030           00282         movlw 0x30
0095   00B0           00283         movwf   TIME_HH1
0096   00B1           00284         movwf   TIME_HH2
0097   0AB6           00285         incf    DAY,1
0098   3007           00286         movlw   .7                      ; inc переменной День
0099   0636           00287         xorwf DAY, w;
009A   1D03           00288         btfss STATUS, 0x02              ; Обнуление переменной при достижении воскресенья, 
009B   2???           00289         goto end_clock                  ; что бы при 00:00:00 перейти в понедельник
009C   3000           00290         movlw   .0
009D   00B6           00291         movwf   DAY
                      00292 
                      00293         
Warning[207]: Found label after column 1. (ten_clock)
009E                  00294         ten_clock
009E   303A           00295         movlw 0x3A                      ; if !=10 
009F   0630           00296         xorwf TIME_HH1, w;              ; подпрограмма для работы с форматом 24 часа
00A0   1D03           00297         btfss STATUS, 0x02              ; т.к. 18 часов может быть, а 28 нет, то надо
00A1   2???           00298         goto end_clock                  ; ограничить единицы при десятках = 2
Message[305]: Using default destination of 1 (file).
00A2   0AB1           00299         incf    TIME_HH2
00A3   3030           00300         movlw 0x30
00A4   00B0           00301         movwf   TIME_HH1
                      00302         
00A5                  00303 end_clock
00A5   0064           00304         clrwdt
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00305 
00A6   30FF           00306         movlw 0xff
00A7   2???           00307         call delay ;задержка крч
00A8   30FF           00308         movlw 0xff
00A9   2???           00309         call delay ;задержка крч
00AA   30FF           00310         movlw 0xff
00AB   2???           00311         call delay ;задержка крч
                      00312 
00AC   1007           00313         bcf PORTC, 0
00AD   30C4           00314         movlw b'11000100'
00AE   2???           00315         call write
                      00316 ; Установка RC0=0, для последующей передачи
                      00317 ;команды  на  контроллер  HD.  Передается  ко-
                      00318 ;манда Set DDRAM address,  устанавливающая
                      00319 ;счетчик  адреса  видеопамяти  на  начало  2-ой
                      00320 ;строки:  ячейку  с  адресом  (0х40  =  0100  0000).
                      00321 ;Это  необходимо  для  вывода  фразы  «TEM-
                      00322 ;PERATURA =» на второй строке индикатора.
                      00323 
00AF   1407           00324     bsf PORTC,0  ; установка RC0=1, для последующей передачи
                      00325 ;кодов символов второй строки на дисплей. Об-
                      00326 ;ратите внимание на то, что нигде не требуется
                      00327 ;изменения  банков  памяти: т.к. все регистры, с
                      00328 ;которыми работает ПО, находятся в 0-ом бан-
                      00329 ;ке.
00B0   3041           00330     movlw 'A'
00B1   2???           00331     call write
00B2   304C           00332     movlw 'L'
00B3   2???           00333     call write
00B4   3041           00334     movlw 'A'
00B5   2???           00335     call write
00B6   3052           00336     movlw 'R'
00B7   2???           00337     call write
00B8   304D           00338     movlw 'M'
00B9   2???           00339     call write
00BA   3020           00340     movlw ' '
00BB   2???           00341     call write
00BC   3020           00342     movlw ' '
00BD   2???           00343     call write
00BE   0838           00344     movfw ALARM_HH2
00BF   2???           00345     call write
00C0   0837           00346     movfw ALARM_HH1
00C1   2???           00347     call write
00C2   303A           00348     movlw ':'
00C3   2???           00349     call write
00C4   083A           00350     movfw ALARM_MM2
00C5   2???           00351     call write
00C6   0839           00352     movfw ALARM_MM1
00C7   2???           00353     call write
00C8   2???           00354     goto START
                      00355 
00C9                  00356 write    ; процедура записи байта к контроллер HD
00C9   1303           00357     bcf STATUS, RP1
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   1283           00358     bcf STATUS, RP0
00CB   0086           00359     movwf PORTB
00CC   1507           00360     bsf PORTC, 2
00CD   3001           00361     movlw 0x01
00CE   2???           00362     call delay
00CF   1107           00363     bcf PORTC, 2
00D0   0008           00364     return
                      00365         ; перед вызовом этой процедуры в W помеща-
                      00366         ;ется байт, который надо записать в HD. Далее
                      00367         ;он передается в PORTB и формируется отрица-
                      00368         ;тельный перепад на RC2, путем предваритель-
                      00369         ;ной  его  установки  в  «1»,  удержания  этого
                      00370         ;уровня в течение некоторого времени (опреде-
                      00371         ;ляемого временем задержки delay  при  W=1) и
                      00372         ;сброса его в «0».
                      00373 
                      00374         ;  процедура  задержки,  время  которой  можно
                      00375         ;регулировать, задавая число в W
00D1                  00376 delay
00D1   1303           00377     bcf   STATUS, RP1
00D2   1283           00378     bcf   STATUS, RP0
00D3   00A7           00379     movwf   fCOUNTER2
00D4   01A6           00380     clrf    fCOUNTER
                      00381 
                      00382 
00D5                  00383 BD_Loop
00D5   0064           00384     clrwdt
00D6   0BA6           00385     decfsz  fCOUNTER, f
00D7   2???           00386     goto    BD_Loop
00D8   0BA7           00387     decfsz  fCOUNTER2, f
00D9   2???           00388     goto    BD_Loop
00DA   0008           00389     return
                      00390                             ;==============================================
00DB                  00391 change_time                 ; функция изменения времени
00DB   2???           00392     call Keyboard           ; спрашиваем клавиатуру
00DC   183B           00393     btfsc Key1,0
00DD   2???           00394     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
00DE   183C           00395     btfsc Key2,0
00DF   2???           00396     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
00E0   183D           00397     btfsc Key3,0
00E1   2???           00398     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
00E2   183E           00399     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
00E3   2???           00400     goto START
                      00401     
00E4   1007           00402     bcf PORTC, 0
00E5   3080           00403     movlw b'10000000'
00E6   2???           00404     call write
00E7   1407           00405     bsf PORTC,0
                      00406                             ;Отрисовка первой строки
00E8   0846           00407     movfw TEMP_TIME_HH2
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E9   2???           00408     call write
00EA   0845           00409     movfw TEMP_TIME_HH1
00EB   2???           00410     call write
00EC   303A           00411     movlw ':'
00ED   2???           00412     call write
00EE   0848           00413     movfw TEMP_TIME_MM2
00EF   2???           00414     call write
00F0   0847           00415     movfw TEMP_TIME_MM1
00F1   2???           00416     call write
00F2   303A           00417     movlw ':'
00F3   2???           00418     call write
00F4   084A           00419     movfw TEMP_TIME_SS2
00F5   2???           00420     call write
00F6   0849           00421     movfw TEMP_TIME_SS1
00F7   2???           00422     call write
00F8   2???           00423     goto change_time
                      00424     
                      00425 
                      00426                             ;==============================================
                      00427                             ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
00F9   0782           00428 DEC             addwf   PCL
00FA   2???           00429                 goto monday
00FB   2???           00430                 goto tuesday
00FC   2???           00431                 goto wednesday  
00FD   2???           00432                 goto thursday    
00FE   2???           00433                 goto friday             
00FF   2???           00434                 goto saturday           
0100   2???           00435                 goto sunday             
0101   0008           00436                 return
                      00437                 
                      00438                             ;Отрисовка дней недели
0102                  00439 monday                      ;понедельник
0102   304D           00440     movlw 'M'
0103   2???           00441     call write
0104   304F           00442     movlw 'O'
0105   2???           00443     call write
0106   304E           00444     movlw 'N'
0107   2???           00445     call write
0108   2???           00446     goto exday
0109                  00447 tuesday                     ;вторник
0109   3054           00448     movlw 'T'
010A   2???           00449     call write
010B   3055           00450     movlw 'U'
010C   2???           00451     call write
010D   3045           00452     movlw 'E'
010E   2???           00453     call write
010F   2???           00454     goto exday
0110                  00455 wednesday                   ;среда
0110   3057           00456     movlw 'W'
0111   2???           00457     call write
0112   3045           00458     movlw 'E'
0113   2???           00459     call write
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   3044           00460     movlw 'D'
0115   2???           00461     call write
0116   2???           00462     goto exday
0117                  00463 thursday                    ;четверг
0117   3054           00464     movlw 'T'
0118   2???           00465     call write
0119   3048           00466     movlw 'H'
011A   2???           00467     call write
011B   3055           00468     movlw 'U'
011C   2???           00469     call write
011D   2???           00470     goto exday
011E                  00471 friday                      ;пятница
011E   3046           00472     movlw 'F'
011F   2???           00473     call write
0120   3052           00474     movlw 'R'
0121   2???           00475     call write
0122   3049           00476     movlw 'I'
0123   2???           00477     call write
0124   2???           00478     goto exday
0125                  00479 saturday                    ;суббота
0125   3053           00480     movlw 'S'
0126   2???           00481     call write
0127   3041           00482     movlw 'A'
0128   2???           00483     call write
0129   3054           00484     movlw 'T'
012A   2???           00485     call write
012B   2???           00486     goto exday
012C                  00487 sunday                      ;воскресенье
012C   3053           00488     movlw 'S'
012D   2???           00489     call write
012E   3055           00490     movlw 'U'
012F   2???           00491     call write
0130   304E           00492     movlw 'N'
0131   2???           00493     call write
Warning[207]: Found label after column 1. (exday)
0132                  00494     exday
Warning[203]: Found opcode in column 1. (return)
0132   0008           00495 return
                      00496     
0133                  00497 change_day                  ; функция изменения дня недели
0133   2???           00498     call Keyboard
0134   183B           00499     btfsc Key1,0
0135   2???           00500     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
0136   183C           00501     btfsc Key2,0
0137   2???           00502     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
0138   183E           00503     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
0139   2???           00504     goto START
                      00505     
013A   1007           00506     bcf PORTC, 0
013B   308A           00507     movlw b'10001010'   ; установка адреса
013C   2???           00508     call write
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013D   1407           00509     bsf PORTC,0
                      00510 
                      00511         ;Отрисовка первой строки
013E   084B           00512     movfw       TEMP_DAY                                
013F   2???           00513     call        DEC
                      00514     
0140   2???           00515     goto change_day
                      00516     
0141                  00517 plus_day_ch
0141   30FF           00518     movlw 0xff
0142   2???           00519     call delay              ; задержка крч
0143   30FF           00520     movlw 0xff
0144   2???           00521     call delay              ; задержка крч
0145   0ACB           00522     incf    TEMP_DAY,1
0146   3007           00523     movlw       .7                      ; inc переменной День
0147   064B           00524     xorwf TEMP_DAY, w;
0148   1D03           00525     btfss STATUS, 0x02          ; is not working 
0149   2???           00526     goto change_day                     ; 
014A   3000           00527     movlw       .0
014B   00CB           00528     movwf       TEMP_DAY
014C   2???           00529     goto change_day
                      00530     
014D                  00531 minus_day_ch
014D   30FF           00532     movlw 0xff
014E   2???           00533     call delay              ; задержка крч
014F   30FF           00534     movlw 0xff
0150   2???           00535     call delay              ; задержка крч
0151   0ACB           00536     incf    TEMP_DAY,1
0152   3000           00537     movlw       .0                      ; inc переменной День
0153   064B           00538     xorwf TEMP_DAY, w;
0154   1D03           00539     btfss STATUS, 0x02          ; is not working 
0155   2???           00540     goto change_day                     
0156   3006           00541     movlw       .6
0157   00CB           00542     movwf       TEMP_DAY
0158   2???           00543     goto change_day
                      00544     
                      00545                             ;==============================================
0159                  00546 Keyboard                    ; драйвер клавиатуры для клавиш 1-4
0159   1283           00547     bcf STATUS, RP0         ; переход в нулевой банк, для нормального вызова функции из тела программы
015A   1303           00548     bcf STATUS, RP1
015B   01BB           00549     clrf Key1               ; обнуление кодов клавиш
015C   01BC           00550     clrf Key2 
015D   01BD           00551     clrf Key3
015E   01BE           00552     clrf Key4 
015F   01BF           00553     clrf Key5 
0160   01C0           00554     clrf Key6
0161   01C1           00555     clrf Key7 
0162   01C2           00556     clrf Key8 
0163   01C3           00557     clrf Key9  
0164                  00558 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
0164   1405           00559     bsf PORTA,0             ; подача питания
0165   1085           00560     bcf PORTA,1
0166   1105           00561     bcf PORTA,2 
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00562     ;movlw .24
                      00563     ;call small_delay
0167   0805           00564     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0168   3938           00565     andlw 0x38
0169   1903           00566     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
016A   2???           00567     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00568     ;movlw .250
                      00569     ;call small_delay  
016B   1985           00570     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
016C   0ABB           00571     incf Key1,F
016D   1A05           00572     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
016E   0ABE           00573     incf Key4,F
Warning[207]: Found label after column 1. (col2)
016F                  00574     col2                    ; сканируем второй столбец, где нам нужна клавиша 2
016F   1005           00575     bcf PORTA,0             ; подача питания
0170   1485           00576     bsf PORTA,1
0171   1105           00577     bcf PORTA,2 
                      00578     ;movlw .24
                      00579     ;sd
0172   0805           00580     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
0173   3938           00581     andlw 0x38
0174   1903           00582     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
0175   2???           00583     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00584     ;movlw .250
                      00585     ;sd
0176   1985           00586     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
0177   0ABC           00587     incf Key2,F
0178                  00588 col3                ; сканируем третий столбец, где нам нужна клавиша 3
0178   1005           00589     bcf PORTA,0             ; подача питания
0179   1085           00590     bcf PORTA,1
017A   1505           00591     bsf PORTA,2
                      00592     ;movlw .24
                      00593     ;sd
017B   0805           00594     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
017C   3938           00595     andlw 0x38
017D   1903           00596     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
017E   0008           00597     return                  ; если Z=0, то пропускаем строку
                      00598     ;movlw .250
                      00599     ;sd
017F   1985           00600     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
0180   0ABD           00601     incf Key3,F
0181   0008           00602     return                  ; выход из функции
                      00603     
                      00604                             ;==============================================
0182                  00605 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
0182   30FF           00606     movlw 0xff
0183   2???           00607     call delay              ; задержка крч
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0184   30FF           00608     movlw 0xff
0185   2???           00609     call delay              ; задержка крч                          
0186   3030           00610     movlw 0x30                  ; если NumPressKey = 0, то вызываем
0187   0650           00611     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0188   1903           00612     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0189   2???           00613     call correct_H2
                      00614     
018A   3031           00615     movlw 0x31                  ; если NumPressKey = 1, то вызываем
018B   0650           00616     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
018C   1903           00617     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
018D   2???           00618     call correct_H1
                      00619 
018E   3032           00620     movlw 0x32                  ; если NumPressKey = 2, то вызываем
018F   0650           00621     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0190   1903           00622     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0191   2???           00623     call correct_M2
                      00624     
0192   3033           00625     movlw 0x33                  ; если NumPressKey = 3, то вызываем
0193   0650           00626     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0194   1903           00627     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0195   2???           00628     call correct_M1
                      00629     
0196   3034           00630     movlw 0x34                  ; если NumPressKey = 4, то вызываем
0197   0650           00631     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
0198   1903           00632     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0199   2???           00633     call correct_S2
                      00634     
019A   3035           00635     movlw 0x35                  ; если NumPressKey = 5, то вызываем
019B   0650           00636     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
019C   1903           00637     btfsc STATUS, 0x02          ; если нет, выходим из функции
019D   2???           00638     call correct_S1
                      00639     
019E   0008           00640     return
                      00641     
019F                  00642 correct_H2                      ; функцию коррекции переменной H2.
019F   0AC6           00643     incf TEMP_TIME_HH2,1        ; инкремент временной переменной для Н2
01A0   3033           00644     movlw 0x33                  ; if !=3, переходим обратно в функцию
01A1   0646           00645     xorwf TEMP_TIME_HH2, w      ; correct_T_plus и проверяем там следующее условие
01A2   1D03           00646     btfss STATUS, 0x02
01A3   0008           00647     return
01A4   3030           00648     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
01A5   00C6           00649     movwf       TEMP_TIME_HH2
01A6   0008           00650     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00651     
01A7                  00652 correct_H1                      ; функцию коррекции переменной H1.
01A7   0AC5           00653     incf TEMP_TIME_HH1,1        ; инкремент временной переменной для Н1
01A8   3032           00654     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
01A9   0646           00655     xorwf TEMP_TIME_HH2, w      ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00656                                 ; ограничить единицы при десятках = 2   
01AA   1903           00657     btfsc STATUS, 0x02
01AB   2???           00658     goto three_H1                       
01AC   303A           00659     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AD   0645           00660 t1  xorwf TEMP_TIME_HH1, w      
01AE   1D03           00661     btfss STATUS, 0x02
01AF   0008           00662     return
01B0   3030           00663     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
01B1   00C5           00664     movwf       TEMP_TIME_HH1
01B2   0008           00665     return
                      00666     
01B3                  00667 three_H1
01B3   3034           00668     movlw 0x34                  ; предел для обнуления при переменной = 2
01B4   2???           00669     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00670     
01B5                  00671 correct_M2                      ; функцию коррекции переменной M2.
01B5   0AC8           00672     incf TEMP_TIME_MM2,1
01B6   3036           00673     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01B7   0648           00674     xorwf TEMP_TIME_MM2, w;
01B8   1D03           00675     btfss STATUS, 0x02
01B9   0008           00676     return
01BA   3030           00677     movlw       0x30
01BB   00C8           00678     movwf       TEMP_TIME_MM2
01BC   0008           00679     return
                      00680     
01BD                  00681 correct_M1                      ; функцию коррекции переменной M1.
01BD   0AC7           00682     incf TEMP_TIME_MM1,1
01BE   303A           00683     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01BF   0647           00684     xorwf TEMP_TIME_MM1, w;
01C0   1D03           00685     btfss STATUS, 0x02
01C1   0008           00686     return
01C2   3030           00687     movlw       0x30
01C3   00C7           00688     movwf       TEMP_TIME_MM1
01C4   0008           00689     return
                      00690     
01C5                  00691 correct_S2                      ; функцию коррекции переменной S2.
01C5   0ACA           00692     incf TEMP_TIME_SS2,1
01C6   3036           00693     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
01C7   064A           00694     xorwf TEMP_TIME_SS2, w;
01C8   1D03           00695     btfss STATUS, 0x02
01C9   0008           00696     return
01CA   3030           00697     movlw       0x30
01CB   00CA           00698     movwf       TEMP_TIME_SS2
01CC   0008           00699     return
                      00700     
01CD                  00701 correct_S1                      ; функцию коррекции переменной S1.
01CD   0AC9           00702     incf TEMP_TIME_SS1,1
01CE   303A           00703     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
01CF   0649           00704     xorwf TEMP_TIME_SS1, w;
01D0   1D03           00705     btfss STATUS, 0x02
01D1   0008           00706     return
01D2   3030           00707     movlw       0x30
01D3   00C9           00708     movwf       TEMP_TIME_SS1
01D4   0008           00709     return
                      00710     
01D5                  00711 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D5   30FF           00712     movlw 0xff
01D6   2???           00713     call delay              ; задержка крч
01D7   30FF           00714     movlw 0xff
01D8   2???           00715     call delay              ; задержка крч
01D9   3030           00716     movlw 0x30                  ; если NumPressKey = 0, то вызываем
01DA   0650           00717     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
01DB   1903           00718     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01DC   2???           00719     call correct_H2_minus
                      00720     
01DD   3031           00721     movlw 0x31                  ; если NumPressKey = 1, то вызываем
01DE   0650           00722     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
01DF   1903           00723     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01E0   2???           00724     call correct_H1_minus
                      00725 
01E1   3032           00726     movlw 0x32                  ; если NumPressKey = 2, то вызываем
01E2   0650           00727     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
01E3   1903           00728     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01E4   2???           00729     call correct_M2_minus
                      00730     
01E5   3033           00731     movlw 0x33                  ; если NumPressKey = 3, то вызываем
01E6   0650           00732     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
01E7   1903           00733     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01E8   2???           00734     call correct_M1_minus
                      00735     
01E9   3034           00736     movlw 0x34                  ; если NumPressKey = 4, то вызываем
01EA   0650           00737     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
01EB   1903           00738     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01EC   2???           00739     call correct_S2_minus
                      00740     
01ED   3035           00741     movlw 0x35                  ; если NumPressKey = 5, то вызываем
01EE   0650           00742     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
01EF   1903           00743     btfsc STATUS, 0x02          ; если нет, выходим из функции
01F0   2???           00744     call correct_S1_minus
                      00745     
01F1   0008           00746     return
                      00747     
01F2                  00748 correct_H2_minus                ; функцию коррекции переменной H2.
01F2   03C6           00749     decf TEMP_TIME_HH2,1        ; декремент временной переменной для Н2
01F3   302F           00750     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
01F4   0646           00751     xorwf TEMP_TIME_HH2, w      ; correct_T_ и проверяем там следующее условие
01F5   1D03           00752     btfss STATUS, 0x02
01F6   0008           00753     return
01F7   3032           00754     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
01F8   00C6           00755     movwf       TEMP_TIME_HH2
01F9   0008           00756     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      00757     
01FA                  00758 correct_H1_minus                ; функцию коррекции переменной H1.
01FA   03C5           00759     decf TEMP_TIME_HH1,1        ; декремент временной переменной для Н1
01FB   302F           00760     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
01FC   0645           00761     xorwf TEMP_TIME_HH1, w      ; correct_T_ и проверяем там следующее условие
                      00762                                         
01FD   1D03           00763     btfss STATUS, 0x02
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FE   0008           00764     return              
01FF   3032           00765     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0200   0646           00766     xorwf TEMP_TIME_HH2, w      
0201   1903           00767     btfsc STATUS, 0x02
0202   2???           00768     goto three_H1_minus
0203   3039           00769     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
0204   00C5           00770 t2  movwf       TEMP_TIME_HH1
0205   0008           00771     return
                      00772     
0206                  00773 three_H1_minus
0206   3033           00774     movlw 0x33                  ; значение для присваивания при Н2 = 2.
0207   2???           00775     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      00776     
0208                  00777 correct_M2_minus                        ; функцию коррекции переменной M2.
0208   03C8           00778     decf TEMP_TIME_MM2,1
0209   302F           00779     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
020A   0648           00780     xorwf TEMP_TIME_MM2, w;
020B   1D03           00781     btfss STATUS, 0x02
020C   0008           00782     return
020D   3035           00783     movlw       0x35
020E   00C8           00784     movwf       TEMP_TIME_MM2
020F   0008           00785     return
                      00786     
0210                  00787 correct_M1_minus                        ; функцию коррекции переменной M1.
0210   03C7           00788     decf TEMP_TIME_MM1,1
0211   302F           00789     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0212   0647           00790     xorwf TEMP_TIME_MM1, w;
0213   1D03           00791     btfss STATUS, 0x02
0214   0008           00792     return
0215   3039           00793     movlw       0x39
0216   00C7           00794     movwf       TEMP_TIME_MM1
0217   0008           00795     return
                      00796     
0218                  00797 correct_S2_minus                        ; функцию коррекции переменной S2.
0218   03CA           00798     decf TEMP_TIME_SS2,1
0219   302F           00799     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
021A   064A           00800     xorwf TEMP_TIME_SS2, w;
021B   1D03           00801     btfss STATUS, 0x02
021C   0008           00802     return
021D   3035           00803     movlw       0x35
021E   00CA           00804     movwf       TEMP_TIME_SS2
021F   0008           00805     return
                      00806     
0220                  00807 correct_S1_minus                        ; функцию коррекции переменной S1.
0220   03C9           00808     decf TEMP_TIME_SS1,1
0221   302F           00809     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0222   0649           00810     xorwf TEMP_TIME_SS1, w;
0223   1D03           00811     btfss STATUS, 0x02
0224   0008           00812     return
0225   3039           00813     movlw       0x39
0226   00C9           00814     movwf       TEMP_TIME_SS1
0227   0008           00815     return
                      00816     
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00817     
0228                  00818 save_T                          ; функция проверки и сохранения времени
0228   30FF           00819     movlw 0xff
0229   2???           00820     call delay              ; задержка крч
022A   30FF           00821     movlw 0xff
022B   2???           00822     call delay              ; задержка крч
022C   3036           00823     movlw 0x36                  ; если происходит переполнение NumPressKey
022D   0650           00824     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
022E   1903           00825     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
022F   2???           00826     goto change_HMS             ; в постоянные
                      00827     
0230   0AD0           00828     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
0231   2???           00829     goto change_time            ; его и возвращаемся в функцию изменения времени
                      00830     
0232                  00831 change_HMS
0232   0846           00832     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
0233   00B1           00833     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
0234   0845           00834     movfw TEMP_TIME_HH1         ; значение)
0235   00B0           00835     movwf TIME_HH1
0236   0848           00836     movfw TEMP_TIME_MM2         
0237   00B3           00837     movwf TIME_MM2
0238   0847           00838     movfw TEMP_TIME_MM1         
0239   00B2           00839     movwf TIME_MM1
023A   084A           00840     movfw TEMP_TIME_SS2         
023B   00B5           00841     movwf TIME_SS2
023C   0849           00842     movfw TEMP_TIME_SS1         
023D   00B4           00843     movwf TIME_SS1
023E   2???           00844     goto START                  ; возврат в основной цикл
                      00845     
023F   2???           00846     goto START                  ; возврат в основной цикл
                      00847     
0240                  00848 small_delay:                    ; задержка для драйвера
0240   00C4           00849     movwf fCOUNTER1
0241   0064           00850     clrwdt
0242   0BC4           00851     decfsz fCOUNTER1,F
0243   2???           00852     goto $-2
0244   0008           00853     return
                      00854     
Warning[205]: Found directive in column 1. (end)
                      00855 end  ; конец программы
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           000000D5
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               000000F9
DS                                00000002
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key5                              0000003F
Key6                              00000040
Key7                              00000041
Key8                              00000042
Key9                              00000043
Keyboard                          00000159
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumPressKey                       00000050
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RST                               00000002
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000042
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_0243                      00000243
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
change_HMS                        00000232
MPASM 5.75                       FISH2_4.ASM   10-18-2017  14:58:11         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

change_day                        00000133
change_time                       000000DB
col1                              00000164
col2                              0000016F
col3                              00000178
correct_H1                        000001A7
correct_H1_minus                  000001FA
correct_H2                        0000019F
correct_H2_minus                  000001F2
correct_M1                        000001BD
correct_M1_minus                  00000210
correct_M2                        000001B5
correct_M2_minus                  00000208
correct_S1                        000001CD
correct_S1_minus                  00000220
correct_S2                        000001C5
correct_S2_minus                  00000218
correct_T_minus                   000001D5
correct_T_plus                    00000182
delay                             000000D1
end_clock                         000000A5
exday                             00000132
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            0000011E
minus_day_ch                      0000014D
monday                            00000102
plus_day_ch                       00000141
saturday                          00000125
save_T                            00000228
small_delay                       00000240
sunday                            0000012C
t1                                000001AD
t2                                00000204
ten_clock                         0000009E
three_H1                          000001B3
three_H1_minus                    00000206
thursday                          00000117
tuesday                           00000109
wait                              
wednesday                         00000110
write                             000000C9

Errors   :     0
Warnings :     7 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

