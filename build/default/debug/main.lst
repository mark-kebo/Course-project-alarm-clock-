MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************************
                      00002 ;                                                                              *
                      00003 ;    Filename:  ALARM CLOCK                                                    *
                      00004 ;    Date:      19.10.17                                                       *
                      00005 ;    File Version:   1.4.2                                                     *
                      00006 ;    Author:         Dmitry Vorozhbicky                                        *
                      00007 ;    Company:        GrSU                                                      *
                      00008 ;                                                                              *
                      00009 ;*******************************************************************************  
                      00010 ;processor    PIC16F877
Warning[205]: Found directive in column 1. (include)
                      00011 include  <P16F877.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jul 02 2017
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2017 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
Warning[205]: Found directive in column 1. (errorlevel)
                      00012 errorlevel   -302
                      00013         ;  директивы  типа  контроллера,  под-
                      00014         ;ключения  заголовочного  файла  и  вы-
                      00015         ;вода сообщений об ошибках
                      00016 #define   bank0  bcf STATUS,  RP0
                      00017 #define   bank1  bsf STATUS,  RP0
                      00018 ; директивы, позволяющие заменять в
                      00019         ;теле  ПО  команды,  указанные  после
                      00020         ;этой  директивы  (bcf  ,  bsf)  –  метками
                      00021         ;bank0, bank1. Обратную замену произ-
                      00022         ;водит компилятор
  00000020            00023 WAIT                equ     0x20
  00000026            00024 fCOUNTER            equ     0x26
  00000027            00025 fCOUNTER2           equ     0x27
  00000030            00026 TIME_HH1            equ     0x30
  00000031            00027 TIME_HH2            equ     0x31
  00000032            00028 TIME_MM1            equ     0x32
  00000033            00029 TIME_MM2            equ     0x33
  00000034            00030 TIME_SS1            equ     0x34
  00000035            00031 TIME_SS2            equ     0x35
  00000036            00032 DAY                 equ     0x36
  00000037            00033 ALARM_HH1           equ     0x37
  00000038            00034 ALARM_HH2           equ     0x38
  00000039            00035 ALARM_MM1           equ     0x39
  0000003A            00036 ALARM_MM2           equ     0x3A
  0000003B            00037 Key1                equ     0x3B
  0000003C            00038 Key2                equ     0x3C
  0000003D            00039 Key3                equ     0x3D
  0000003E            00040 Key4                equ     0x3E
  0000003F            00041 Key5                equ     0x3F
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000040            00042 Key6                equ     0x40
  00000041            00043 Key7                equ     0x41
  00000042            00044 Key8                equ     0x42
  00000043            00045 Key9                equ     0x43
  00000044            00046 fCOUNTER1           equ     0x44
  00000045            00047 TEMP_TIME_HH1       equ     0x45
  00000046            00048 TEMP_TIME_HH2       equ     0x46
  00000047            00049 TEMP_TIME_MM1       equ     0x47
  00000048            00050 TEMP_TIME_MM2       equ     0x48
  00000049            00051 TEMP_TIME_SS1       equ     0x49
  0000004A            00052 TEMP_TIME_SS2       equ     0x4A
  0000004B            00053 TEMP_DAY            equ     0x4B
  0000004C            00054 TEMP_ALARM_HH1      equ     0x4C
  0000004D            00055 TEMP_ALARM_HH2      equ     0x4D
  0000004E            00056 TEMP_ALARM_MM1      equ     0x4E
  0000004F            00057 TEMP_ALARM_MM2      equ     0x4F
  00000050            00058 NumPressKey         equ     0x50
  00000051            00059 Blink               equ     0x51
                      00060     ;вспомогательные  регистры,  назначе-
                      00061         ;ние которых приведено в комментариях
  0002                00062     constant   DS = .2
  0002                00063     constant   RST = .2
                      00064         ;  директивы,  ставящие в  соответствие
                      00065         ;меткам DS  и  RST  значение  0.  Анало-
                      00066         ;гия директив equ для имен регистров.
                      00067 
                      00068 wait  macro     time
                      00069     movlw    (time/5)-1
                      00070     movwf    WAIT
                      00071     call    wait5u
                      00072     endm
                      00073         ;макрос паузы с именем wait. Особен-
                      00074         ;ность этого макроса состоит в том, что
                      00075         ;у  него  имеется  параметр  –  time.  При
                      00076         ;вызове  макроса  значение  параметра
                      00077         ;указывается  после  имени  макроса  в
                      00078         ;виде  целого  десятичного  числа  крат-
                      00079         ;ного  5  (в  данном  примере).  В  теле
                      00080         ;макроса  это  число  подставляется  в
                      00081         ;«переменную» time и далее использу-
                      00082         ;ется вычисленное значение (которое в
                      00083         ;данном случае  выступает  в  роли  кон-
                      00084         ;станты, записываемой в W). Вместе с
                      00085         ;процедурой  wait5u  длительность  за-
                      00086         ;держки,  обеспечиваемая  макросом
                      00087         ;равна time микросекунд
                      00088 
                      00089     org 0x0000
0000   0183           00090     clrf STATUS
0001   3000           00091     movlw 0x00
0002   008A           00092     movwf PCLATH
0003   2???           00093     goto begin
                      00094         ;выбор нулевой страницы памяти ко-
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095         ;манд и размещение на ней откомпили-
                      00096         ;рованного кода
                      00097 
0004                  00098 begin
0004   1683           00099     bank1  ; выбор первого банка памяти. Для вы-
                      00100         ;зова используется метка bank1, объяв-
                      00101         ;ленная выше директивой #define
0005   308F           00102     movlw 0x8F
0006   0081           00103     movwf OPTION_REG
0007   0064           00104     clrwdt
                      00105         ;установка  максимального  времени
                      00106         ;срабатывания  сторожевого  таймера  и
                      00107         ;его сброс
0008   018B           00108     clrf INTCON
0009   018C           00109     clrf PIE1
000A   018D           00110     clrf PIE2
                      00111         ;отключение  прерываний  и  их  обработки
000B   3000           00112     movlw .0
000C   0086           00113     movwf TRISB
000D   0087           00114     movwf TRISC
000E   0089           00115     movwf TRISE
                      00116         ; конфигурирование  портов  В, С, Е
000F   30F8           00117     movlw b'11111000' 
0010   0085           00118     movwf TRISA 
0011   3000           00119     movlw b'00000000'
0012   0088           00120     movwf TRISD
0013   300F           00121     movlw b'00001111'
0014   0081           00122     movwf OPTION_REG
                      00123         ;конфигурирование  RD0  как  входа
                      00124         ;для  установки  на  нем  «1»  в  качестве
                      00125         ;исходного  состояния  интерфейса  «1-Wire»
0015   019F           00126     clrf ADCON1 
0016   149F           00127     bsf ADCON1,0x01 
0017   151F           00128     bsf ADCON1,0x02 
0018   1283           00129     bank0
0019   01BB           00130     clrf Key1    
001A   01BC           00131     clrf Key2       
001B   01BD           00132     clrf Key3       
001C   01BE           00133     clrf Key4              
001D   01C3           00134     clrf Key9               
001E   0187           00135     clrf PORTC
001F   0188           00136     clrf PORTD
                      00137 ; подготовка к передаче команд на контроллер
                      00138 ;HD путем установки RC0=0
0020   3001           00139     movlw 0x01
0021   2???           00140     call write
0022   300F           00141     movlw 0x0f
0023   2???           00142     call delay
                      00143 ; передача команды Clear  Display для очистки
                      00144 ;дисплея и установки счетчика адреса видеопа-
                      00145 ;мяти  на  нулевой  адрес  (первое  знакоместо  в
                      00146 ;верхней строке), с необходимой задержкой
0024   0064           00147     clrwdt
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   3038           00148     movlw 0x38
0026   2???           00149     call write
0027   300F           00150     movlw 0x0f
0028   2???           00151     call delay
                      00152 
                      00153 ; передача команды Function Set для установки
                      00154 ;режима  2-х  строчного  индикатора,  размера
                      00155 ;знакоместа 5х7 и 8 разрядной шины данных
0029   3006           00156     movlw 0x06
002A   2???           00157     call write
002B   300F           00158     movlw 0x0f
002C   2???           00159     call delay
                      00160 ;передача  команды  Entry  Mode  Set  для  уста-
                      00161 ;новки режима увеличения счетчика адреса ви-
                      00162 ;деопамяти, после каждой записи символа в нее,
                      00163 ;при неподвижности видеопамяти относительно
                      00164 ;индикатора
002D   300C           00165     movlw 0x0c
002E   2???           00166     call write
002F   300F           00167     movlw 0x0f
0030   2???           00168     call delay
                      00169 ;  передача  команды  Display  ON/OFF  control
                      00170 ;для включения дисплея с отключенным курсо-
                      00171 ;ром.  На  этом  этап инициализации дисплея за-
                      00172 ;кончен.
0031   3030           00173     movlw       0x30
0032   00B0           00174     movwf       TIME_HH1
0033   00B1           00175     movwf       TIME_HH2
0034   00B2           00176     movwf       TIME_MM1
0035   00B3           00177     movwf       TIME_MM2
0036   00B4           00178     movwf       TIME_SS1
0037   00B5           00179     movwf       TIME_SS2
0038   00B7           00180     movwf       ALARM_HH1
0039   00B8           00181     movwf       ALARM_HH2
003A   00B9           00182     movwf       ALARM_MM1
003B   00BA           00183     movwf       ALARM_MM2
003C   3000           00184     movlw       .0
003D   00B6           00185     movwf       DAY
003E   3000           00186     movlw       b'00000000'
003F   00D1           00187     movwf       Blink
                      00188 
0040                  00189 START
0040   0831           00190     movfw TIME_HH2              ; записываем значения постоянныx переменных в  временныe 
0041   00C6           00191     movwf TEMP_TIME_HH2         
0042   0830           00192     movfw TIME_HH1              
0043   00C5           00193     movwf TEMP_TIME_HH1
0044   0833           00194     movfw TIME_MM2              
0045   00C8           00195     movwf TEMP_TIME_MM2
0046   0832           00196     movfw TIME_MM1              
0047   00C7           00197     movwf TEMP_TIME_MM1
0048   0835           00198     movfw TIME_SS2              
0049   00CA           00199     movwf TEMP_TIME_SS2
004A   0834           00200     movfw TIME_SS1              
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004B   00C9           00201     movwf TEMP_TIME_SS1
004C   0836           00202     movfw DAY
004D   00CB           00203     movwf TEMP_DAY
004E   3000           00204     movlw 0x00
004F   00D0           00205     movwf NumPressKey           ; NPK каждый раз устанавливаем в начальное значение
0050   0837           00206     movfw       ALARM_HH1
0051   00CC           00207     movwf       TEMP_ALARM_HH1
0052   0838           00208     movfw       ALARM_HH2
0053   00CD           00209     movwf       TEMP_ALARM_HH2
0054   0839           00210     movfw       ALARM_MM1
0055   00CE           00211     movwf       TEMP_ALARM_MM1
0056   083A           00212     movfw       ALARM_MM2
0057   00CF           00213     movwf       TEMP_ALARM_MM2
                      00214     
0058   2???           00215     call Keyboard               ; читаем клавиатуру
0059   183B           00216     btfsc Key1,0                ; проверка нажатия клавиши "1",  если нажата, то переходим 
005A   2???           00217     call time_plus_blink        ; к изменению времени, нет - тогда проверяем клавишу 2
005B   183C           00218     btfsc Key2,0                ; проверка нажатия клавиши "2",  если нажата, то переходим 
005C   2???           00219     call day_plus_blink         ; к изменению дня недели, нет - тогда проверяем клавишу 3
005D   183D           00220     btfsc Key3,0                ; проверка нажатия клавиши "3",  если нажата, то переходим 
005E   2???           00221     call alarm_plus_blink               ; к изменению будильника, нет - тогда едем дальше
                      00222         
005F   2???           00223     call LCD_one                ;Отрисовка первой строки                
                      00224 
                      00225         ;Счет десятков секунд (0-6) - TIME_SS1
0060   0AB4           00226     incf TIME_SS1,1
0061   303A           00227     movlw 0x3A                  ; if !=10
0062   0634           00228     xorwf TIME_SS1, w;
0063   1D03           00229     btfss STATUS, 0x02
0064   2???           00230     goto end_clock
                      00231         ;обнуление TIME_MM1
0065   3030           00232     movlw 0x30
0066   00B4           00233     movwf       TIME_SS1
                      00234 
                      00235         ;Счет десятков секунд (0-6) - TIME_SS2
0067   0AB5           00236     incf TIME_SS2,1
0068   3036           00237     movlw 0x36                  ; if !=6
0069   0635           00238     xorwf TIME_SS2, w;
006A   1D03           00239     btfss STATUS, 0x02
006B   2???           00240     goto end_clock
                      00241         ;обнуление TIME_MM2
006C   3030           00242     movlw 0x30
006D   00B5           00243     movwf       TIME_SS2
                      00244         
                      00245         ;Счет десятков минут (0-6) - TIME_MM1
006E   0AB2           00246     incf TIME_MM1,1
006F   303A           00247     movlw 0x3A                  ; if !=10
0070   0632           00248     xorwf TIME_MM1, w;
0071   1D03           00249     btfss STATUS, 0x02
0072   2???           00250     goto end_clock
                      00251         ;обнуление TIME_MM1
0073   3030           00252     movlw 0x30
0074   00B2           00253     movwf       TIME_MM1
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00254 
                      00255         ;Счет десятков минут (0-6) - TIME_MM2
0075   0AB3           00256     incf TIME_MM2,1
0076   3036           00257     movlw 0x36                  ; if !=6
0077   0633           00258     xorwf TIME_MM2, w;
0078   1D03           00259     btfss STATUS, 0x02
0079   2???           00260     goto end_clock
                      00261         ;обнуление TIME_MM2
007A   3030           00262     movlw 0x30
007B   00B3           00263     movwf       TIME_MM2
                      00264 
                      00265         ;Счет десятков единиц часов - TIME_НН2, TIME_НН1
007C   0AB0           00266     incf TIME_HH1,1
007D   3034           00267     movlw 0x34                  ; if !=4
007E   0630           00268     xorwf TIME_HH1, w;
007F   1D03           00269     btfss STATUS, 0x02
0080   2???           00270     goto ten_clock
0081   3032           00271     movlw 0x32                  ; if !=2
0082   0631           00272     xorwf TIME_HH2, w;
0083   1D03           00273     btfss STATUS, 0x02
0084   2???           00274     goto ten_clock
0085   3030           00275     movlw 0x30
0086   00B0           00276     movwf       TIME_HH1
0087   00B1           00277     movwf       TIME_HH2
0088   0AB6           00278     incf    DAY,1
0089   3007           00279     movlw       .7                      ; inc переменной День
008A   0636           00280     xorwf DAY, w;
008B   1D03           00281     btfss STATUS, 0x02                  ; Обнуление переменной при достижении воскресенья, 
008C   2???           00282     goto end_clock                      ; что бы при 00:00:00 перейти в понедельник
008D   3000           00283     movlw       .0
008E   00B6           00284     movwf       DAY
                      00285 
                      00286         
008F                  00287 ten_clock
008F   303A           00288     movlw 0x3A                  ; if !=10 
0090   0630           00289     xorwf TIME_HH1, w;          ; подпрограмма для работы с форматом 24 часа
0091   1D03           00290     btfss STATUS, 0x02          ; т.к. 18 часов может быть, а 28 нет, то надо
0092   2???           00291     goto end_clock              ; ограничить единицы при десятках = 2
Message[305]: Using default destination of 1 (file).
0093   0AB1           00292     incf    TIME_HH2
0094   3030           00293     movlw 0x30
0095   00B0           00294     movwf       TIME_HH1
                      00295         
0096                  00296 end_clock
0096   0064           00297     clrwdt
                      00298 
0097   30FF           00299     movlw 0xff
0098   2???           00300     call delay ;задержка крч
0099   30FF           00301     movlw 0xff
009A   2???           00302     call delay ;задержка крч
009B   30FF           00303     movlw 0xff
009C   2???           00304     call delay ;задержка крч
                      00305 
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009D   2???           00306     call LCD_two                ;Отрисовка второй строки
                      00307     
                      00308     ; ТУТ ОБРАБОТКА БУДИЛЬНИКА БУДЕТ
                      00309     
009E   2???           00310     goto START          ; конец основного цикла (должен быть = 1сек)
                      00311 
                      00312     ;--------------------------------------------------------
                      00313     ;--------------------------------------------------------
                      00314     
                      00315      ; Процедура типа switch для выбора дня недели
Message[305]: Using default destination of 1 (file).
009F   0782           00316 DEC addwf PCL
00A0   2???           00317     goto monday
00A1   2???           00318     goto tuesday
00A2   2???           00319     goto wednesday      
00A3   2???           00320     goto thursday    
00A4   2???           00321     goto friday         
00A5   2???           00322     goto saturday               
00A6   2???           00323     goto sunday         
00A7   0008           00324     return
                      00325 ;Отрисовка дней недели
00A8                  00326 monday                      ;понедельник
00A8   304D           00327     movlw 'M'
00A9   2???           00328     call write
00AA   304F           00329     movlw 'O'
00AB   2???           00330     call write
00AC   304E           00331     movlw 'N'
00AD   2???           00332     call write
00AE   2???           00333     goto exday
00AF                  00334 tuesday                     ;вторник
00AF   3054           00335     movlw 'T'
00B0   2???           00336     call write
00B1   3055           00337     movlw 'U'
00B2   2???           00338     call write
00B3   3045           00339     movlw 'E'
00B4   2???           00340     call write
00B5   2???           00341     goto exday
00B6                  00342 wednesday                   ;среда
00B6   3057           00343     movlw 'W'
00B7   2???           00344     call write
00B8   3045           00345     movlw 'E'
00B9   2???           00346     call write
00BA   3044           00347     movlw 'D'
00BB   2???           00348     call write
00BC   2???           00349     goto exday
00BD                  00350 thursday                    ;четверг
00BD   3054           00351     movlw 'T'
00BE   2???           00352     call write
00BF   3048           00353     movlw 'H'
00C0   2???           00354     call write
00C1   3055           00355     movlw 'U'
00C2   2???           00356     call write
00C3   2???           00357     goto exday
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C4                  00358 friday                      ;пятница
00C4   3046           00359     movlw 'F'
00C5   2???           00360     call write
00C6   3052           00361     movlw 'R'
00C7   2???           00362     call write
00C8   3049           00363     movlw 'I'
00C9   2???           00364     call write
00CA   2???           00365     goto exday
00CB                  00366 saturday                    ;суббота
00CB   3053           00367     movlw 'S'
00CC   2???           00368     call write
00CD   3041           00369     movlw 'A'
00CE   2???           00370     call write
00CF   3054           00371     movlw 'T'
00D0   2???           00372     call write
00D1   2???           00373     goto exday
00D2                  00374 sunday                      ;воскресенье
00D2   3053           00375     movlw 'S'
00D3   2???           00376     call write
00D4   3055           00377     movlw 'U'
00D5   2???           00378     call write
00D6   304E           00379     movlw 'N'
00D7   2???           00380     call write
00D8                  00381 exday
00D8   0008           00382     return
                      00383 
                      00384     ;--------------------------------------------------------
                      00385     
00D9                  00386 time_plus_blink                 ; инкремент переменной выбора и переход к изменению времени
00D9   2???           00387     call Keyboard               ; читаем клавиатуру
00DA   1CBB           00388     btfss Key1,1
00DB   2???           00389     goto time_plus_blink
00DC   0AD0           00390     incf NumPressKey,1
00DD   2???           00391     goto change_time
00DE   0008           00392     return
                      00393     
00DF                  00394 day_plus_blink                  ; инкремент переменной выбора и переход к изменению времени
00DF   3008           00395     movlw 0x8
00E0   00D0           00396     movwf NumPressKey
00E1   2???           00397     goto change_day
00E2   0008           00398     return
                      00399     
00E3                  00400 alarm_plus_blink                        ; инкремент переменной выбора и переход к изменению времени
00E3   3009           00401     movlw 0x9
00E4   00D0           00402     movwf NumPressKey
00E5   2???           00403     goto change_alarm
00E6   0008           00404     return
                      00405     ;--------------------------------------------------------
                      00406     
00E7                  00407 write    ; процедура записи байта к контроллер HD
00E7   1303           00408     bcf STATUS, RP1
00E8   1283           00409     bcf STATUS, RP0
00E9   0086           00410     movwf PORTB
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   1507           00411     bsf PORTC, 2
00EB   3001           00412     movlw 0x01
00EC   2???           00413     call delay
00ED   1107           00414     bcf PORTC, 2
00EE   0008           00415     return
                      00416     
                      00417         ; перед вызовом этой процедуры в W помеща-
                      00418         ;ется байт, который надо записать в HD. Далее
                      00419         ;он передается в PORTB и формируется отрица-
                      00420         ;тельный перепад на RC2, путем предваритель-
                      00421         ;ной  его  установки  в  «1»,  удержания  этого
                      00422         ;уровня в течение некоторого времени (опреде-
                      00423         ;ляемого временем задержки delay  при  W=1) и
                      00424         ;сброса его в «0».
                      00425 
                      00426         ;  процедура  задержки,  время  которой  можно
                      00427         ;регулировать, задавая число в W
00EF                  00428 delay
00EF   1303           00429     bcf   STATUS, RP1
00F0   1283           00430     bcf   STATUS, RP0
00F1   00A7           00431     movwf   fCOUNTER2
00F2   01A6           00432     clrf    fCOUNTER
                      00433     
00F3                  00434 BD_Loop
00F3   0064           00435     clrwdt
00F4   0BA6           00436     decfsz  fCOUNTER, f
00F5   2???           00437     goto    BD_Loop
00F6   0BA7           00438     decfsz  fCOUNTER2, f
00F7   2???           00439     goto    BD_Loop
00F8   0008           00440     return
                      00441 
                      00442     ;==========================================
                      00443     
00F9                  00444 LCD_one
00F9   1007           00445     bcf PORTC, 0
00FA   3080           00446     movlw b'10000000'   ; установка адреса
00FB   2???           00447     call write
00FC   1407           00448     bsf PORTC,0
                      00449     ;Отрисовка первой строки
                      00450     ; Отрисовка Н2
00FD   2???           00451     call paintH2
                      00452     ; Отрисовка Н1
00FE   2???           00453     call paintH1
00FF   303A           00454     movlw ':'
0100   2???           00455     call write
                      00456     ; Отрисовка М2
0101   2???           00457     call paintM2
                      00458     ; Отрисовка М1
0102   2???           00459     call paintM1
0103   303A           00460     movlw ':'
0104   2???           00461     call write
                      00462     ; Отрисовка S2
0105   2???           00463     call paintS2
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00464     ; Отрисовка S1
0106   2???           00465     call paintS1
0107   3020           00466     movlw ' '
0108   2???           00467     call write
0109   3020           00468     movlw ' '
010A   2???           00469     call write
010B   2???           00470     call printDay
                      00471 
010C   0008           00472     return
                      00473     
                      00474     ;==========================================
                      00475     
                      00476     ; Собственно механизм последовательного моргания при настройке времени
010D                  00477 paintH2
010D   3001           00478     movlw 0x1                   ; если NumPressKey = 0, то вызываем
010E   0650           00479     xorwf NumPressKey, w;       
010F   1D03           00480     btfss STATUS, 0x02          
0110   2???           00481     goto blink_on_H2
0111   0AD1           00482     incf Blink,1
0112   1C51           00483     btfss Blink, 0
0113   2???           00484     goto blink_on_H2
0114   2???           00485     goto blink_off_H2
0115                  00486 blink_off_H2
0115   3020           00487     movlw ' '
0116   2???           00488     call write
0117   2???           00489     goto return_H2
0118                  00490 blink_on_H2
0118   0831           00491     movfw TIME_HH2
0119   2???           00492     call write
011A                  00493 return_H2    
011A   0008           00494     return
                      00495     ;-----------
011B                  00496 paintH1
011B   3002           00497     movlw 0x2                   ; если NumPressKey = 0, то вызываем
011C   0650           00498     xorwf NumPressKey, w;       
011D   1D03           00499     btfss STATUS, 0x02          
011E   2???           00500     goto blink_on_H1
011F   0AD1           00501     incf Blink,1
0120   1C51           00502     btfss Blink, 0
0121   2???           00503     goto blink_on_H1
0122   2???           00504     goto blink_off_H1
0123                  00505 blink_off_H1
0123   3020           00506     movlw ' '
0124   2???           00507     call write
0125   2???           00508     goto return_H1
0126                  00509 blink_on_H1
0126   0830           00510     movfw TIME_HH1
0127   2???           00511     call write
0128                  00512 return_H1
0128   0008           00513     return
                      00514     ;------------
0129                  00515 paintM2
0129   3003           00516     movlw 0x3                   ; если NumPressKey = 0, то вызываем
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012A   0650           00517     xorwf NumPressKey, w;       
012B   1D03           00518     btfss STATUS, 0x02          
012C   2???           00519     goto blink_on_M2
012D   0AD1           00520     incf Blink,1
012E   1C51           00521     btfss Blink, 0
012F   2???           00522     goto blink_on_M2
0130   2???           00523     goto blink_off_M2
0131                  00524 blink_off_M2
0131   3020           00525     movlw ' '
0132   2???           00526     call write
0133   2???           00527     goto return_M2
0134                  00528 blink_on_M2
0134   0833           00529     movfw TIME_MM2
0135   2???           00530     call write
0136                  00531 return_M2
0136   0008           00532     return
                      00533     ;------------
0137                  00534 paintM1
0137   3004           00535     movlw 0x4                   ; если NumPressKey = 0, то вызываем
0138   0650           00536     xorwf NumPressKey, w;       
0139   1D03           00537     btfss STATUS, 0x02          
013A   2???           00538     goto blink_on_M1
013B   0AD1           00539     incf Blink,1
013C   1C51           00540     btfss Blink, 0
013D   2???           00541     goto blink_on_M1
013E   2???           00542     goto blink_off_M1
013F                  00543 blink_off_M1
013F   3020           00544     movlw ' '
0140   2???           00545     call write
0141   2???           00546     goto return_M1
0142                  00547 blink_on_M1
0142   0832           00548     movfw TIME_MM1
0143   2???           00549     call write
0144                  00550 return_M1
0144   0008           00551     return
                      00552     ;------------
0145                  00553 paintS2
0145   3005           00554     movlw 0x5                   ; если NumPressKey = 0, то вызываем
0146   0650           00555     xorwf NumPressKey, w;       
0147   1D03           00556     btfss STATUS, 0x02          
0148   2???           00557     goto blink_on_S2
0149   0AD1           00558     incf Blink,1
014A   1C51           00559     btfss Blink, 0
014B   2???           00560     goto blink_on_S2
014C   2???           00561     goto blink_off_S2
014D                  00562 blink_off_S2
014D   3020           00563     movlw ' '
014E   2???           00564     call write
014F   2???           00565     goto return_S2
0150                  00566 blink_on_S2
0150   0835           00567     movfw TIME_SS2
0151   2???           00568     call write
0152                  00569 return_S2
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0152   0008           00570     return
                      00571     ;------------
0153                  00572 paintS1
0153   3006           00573     movlw 0x6                   ; если NumPressKey = 0, то вызываем
0154   0650           00574     xorwf NumPressKey, w;       
0155   1D03           00575     btfss STATUS, 0x02          
0156   2???           00576     goto blink_on_S1
0157   0AD1           00577     incf Blink,1
0158   1C51           00578     btfss Blink, 0
0159   2???           00579     goto blink_on_S1
015A   2???           00580     goto blink_off_S1
015B                  00581 blink_off_S1
015B   3020           00582     movlw ' '
015C   2???           00583     call write
015D   2???           00584     goto return_S1
015E                  00585 blink_on_S1
015E   0834           00586     movfw TIME_SS1
015F   2???           00587     call write
0160                  00588 return_S1
0160   0008           00589     return
                      00590     ;-----------
0161                  00591 printDay
0161   3008           00592     movlw 0x8                   ; если NumPressKey = 0, то вызываем
0162   0650           00593     xorwf NumPressKey, w;       
0163   1D03           00594     btfss STATUS, 0x02          
0164   2???           00595     goto blink_on_day
0165   0AD1           00596     incf Blink,1
0166   1C51           00597     btfss Blink, 0
0167   2???           00598     goto blink_on_day
0168   2???           00599     goto blink_off_day
0169                  00600 blink_off_day
0169   3020           00601     movlw ' '
016A   2???           00602     call write
016B   3020           00603     movlw ' '
016C   2???           00604     call write
016D   3020           00605     movlw ' '
016E   2???           00606     call write
016F   2???           00607     goto return_DAY
0170                  00608 blink_on_day
0170   0836           00609     movfw DAY                           
0171   2???           00610     call DEC
0172                  00611 return_DAY
0172   0008           00612     return
                      00613     ;==========================================   
                      00614     
0173                  00615 LCD_two
0173   1007           00616     bcf PORTC, 0
0174   30C4           00617     movlw b'11000100'
0175   2???           00618     call write
                      00619 ; Установка RC0=0, для последующей передачи
                      00620 ;команды  на  контроллер  HD.  Передается  ко-
                      00621 ;манда Set DDRAM address,  устанавливающая
                      00622 ;счетчик  адреса  видеопамяти  на  начало  2-ой
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00623 ;строки:  ячейку  с  адресом  (0х40  =  0100  0000).
                      00624 ;Это  необходимо  для  вывода  фразы  «TEM-
                      00625 ;PERATURA =» на второй строке индикатора.
                      00626 
0176   1407           00627     bsf PORTC,0  ; установка RC0=1, для последующей передачи
                      00628 ;кодов символов второй строки на дисплей. Об-
                      00629 ;ратите внимание на то, что нигде не требуется
                      00630 ;изменения  банков  памяти: т.к. все регистры, с
                      00631 ;которыми работает ПО, находятся в 0-ом бан-
                      00632 ;ке.
0177   3041           00633     movlw 'A'
0178   2???           00634     call write
0179   304C           00635     movlw 'L'
017A   2???           00636     call write
017B   3041           00637     movlw 'A'
017C   2???           00638     call write
017D   3052           00639     movlw 'R'
017E   2???           00640     call write
017F   304D           00641     movlw 'M'
0180   2???           00642     call write
                      00643     
0181   3020           00644     movlw ' '
0182   2???           00645     call write
0183   3020           00646     movlw ' '
0184   2???           00647     call write
                      00648     
0185   2???           00649     call paintH2_A
0186   2???           00650     call paintH1_A
0187   303A           00651     movlw ':'
0188   2???           00652     call write
0189   2???           00653     call paintM2_A
018A   2???           00654     call paintM1_A
018B   0008           00655     return
                      00656  
                      00657     ;------------------------------------------
018C                  00658 paintH2_A
018C   300A           00659     movlw 0xa                   ; если NumPressKey = 0, то вызываем
018D   0650           00660     xorwf NumPressKey, w;       
018E   1D03           00661     btfss STATUS, 0x02          
018F   2???           00662     goto blink_on_H2_A
0190   0AD1           00663     incf Blink,1
0191   1C51           00664     btfss Blink, 0
0192   2???           00665     goto blink_on_H2_A
0193   2???           00666     goto blink_off_H2_A
0194                  00667 blink_off_H2_A
0194   3020           00668     movlw ' '
0195   2???           00669     call write
0196   2???           00670     goto return_A_H2
0197                  00671 blink_on_H2_A
0197   0838           00672     movfw ALARM_HH2
0198   2???           00673     call write
0199                  00674 return_A_H2
0199   0008           00675     return
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00676     ;-----------
019A                  00677 paintH1_A
019A   300B           00678     movlw 0xb                   ; если NumPressKey = 0, то вызываем
019B   0650           00679     xorwf NumPressKey, w;       
019C   1D03           00680     btfss STATUS, 0x02          
019D   2???           00681     goto blink_on_H1_A
019E   0AD1           00682     incf Blink,1
019F   1C51           00683     btfss Blink, 0
01A0   2???           00684     goto blink_on_H1_A
01A1   2???           00685     goto blink_off_H1_A
01A2                  00686 blink_off_H1_A
01A2   3020           00687     movlw ' '
01A3   2???           00688     call write
01A4   2???           00689     goto return_A_H1
01A5                  00690 blink_on_H1_A
01A5   0837           00691     movfw ALARM_HH1
01A6   2???           00692     call write
01A7                  00693 return_A_H1
01A7   0008           00694     return
                      00695     ;------------
01A8                  00696 paintM2_A
01A8   300C           00697     movlw 0xc                   ; если NumPressKey = 0, то вызываем
01A9   0650           00698     xorwf NumPressKey, w;       
01AA   1D03           00699     btfss STATUS, 0x02          
01AB   2???           00700     goto blink_on_M2_A
01AC   0AD1           00701     incf Blink,1
01AD   1C51           00702     btfss Blink, 0
01AE   2???           00703     goto blink_on_M2_A
01AF   2???           00704     goto blink_off_M2_A
01B0                  00705 blink_off_M2_A
01B0   3020           00706     movlw ' '
01B1   2???           00707     call write
01B2   2???           00708     goto return_A_M2
01B3                  00709 blink_on_M2_A
01B3   083A           00710     movfw ALARM_MM2
01B4   2???           00711     call write
01B5                  00712 return_A_M2
01B5   0008           00713     return
                      00714     ;------------
01B6                  00715 paintM1_A
01B6   300D           00716     movlw 0xd                   ; если NumPressKey = 0, то вызываем
01B7   0650           00717     xorwf NumPressKey, w;       
01B8   1D03           00718     btfss STATUS, 0x02          
01B9   2???           00719     goto blink_on_M1_A
01BA   0AD1           00720     incf Blink,1
01BB   1C51           00721     btfss Blink, 0
01BC   2???           00722     goto blink_on_M1_A
01BD   2???           00723     goto blink_off_M1_A
01BE                  00724 blink_off_M1_A
01BE   3020           00725     movlw ' '
01BF   2???           00726     call write
01C0   2???           00727     goto return_A_M1
01C1                  00728 blink_on_M1_A
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C1   0839           00729     movfw ALARM_MM1
01C2   2???           00730     call write
01C3                  00731 return_A_M1
01C3   0008           00732     return
                      00733     ;==========================================
                      00734      
                      00735     
01C4                  00736 Keyboard                    ; драйвер клавиатуры для клавиш 1-4, 9
01C4   1283           00737     bcf STATUS, RP0         ; переход в нулевой банк, для нормального вызова функции из тела программы
01C5   1303           00738     bcf STATUS, RP1
01C6   01BB           00739     clrf Key1               ; обнуление кодов клавиш
01C7   01BC           00740     clrf Key2 
01C8   01BD           00741     clrf Key3
01C9   01BE           00742     clrf Key4  
01CA   01C3           00743     clrf Key9  
01CB                  00744 col1                        ; сканируем первый столбец, где нам нужны клавиши 1, 4
01CB   1405           00745     bsf PORTA,0             ; подача питания
01CC   1085           00746     bcf PORTA,1
01CD   1105           00747     bcf PORTA,2 
                      00748     ;movlw .24
                      00749     ;call small_delay
01CE   0805           00750     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
01CF   3938           00751     andlw 0x38
01D0   1903           00752     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col2
01D1   2???           00753     goto col2               ; для сканирования второго столбца клавиатуры. Если Z=0, то пропускаем строк
                            у
                      00754     ;movlw .250
                      00755     ;call small_delay  
01D2   1985           00756     btfsc PORTA,3           ; определяем нажатия клавиши "1", проводя опрос первой строки
01D3   0ABB           00757     incf Key1,F
01D4   1A05           00758     btfsc PORTA,4           ; определяем нажатия клавиши "4", проводя опрос второй строки
01D5   0ABE           00759     incf Key4,F
                      00760     
01D6                  00761 col2                        ; сканируем второй столбец, где нам нужна клавиша 2
01D6   1005           00762     bcf PORTA,0             ; подача питания
01D7   1485           00763     bsf PORTA,1
01D8   1105           00764     bcf PORTA,2 
                      00765     ;movlw .24
                      00766     ;sd
01D9   0805           00767     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
01DA   3938           00768     andlw 0x38
01DB   1903           00769     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) переходим на метку col3
01DC   2???           00770     goto col3               ; для сканирования третьего столбца клавиатуры. Если Z=0, то пропускаем стро
                            ку
                      00771     ;movlw .250
                      00772     ;sd
01DD   1985           00773     btfsc PORTA,3           ; определяем нажатия клавиши "2", проводя опрос первой строки
01DE   0ABC           00774     incf Key2,F
01DF                  00775 col3                ; сканируем третий столбец, где нам нужна клавиша 3
01DF   1005           00776     bcf PORTA,0             ; подача питания
01E0   1085           00777     bcf PORTA,1
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E1   1505           00778     bsf PORTA,2
                      00779     ;movlw .24
                      00780     ;sd
01E2   0805           00781     movf PORTA,W            ; читаем порт А в W и выполняем поразрядное умножение битов порта на число 0
                            011 1000.
01E3   3938           00782     andlw 0x38
01E4   1903           00783     btfsc STATUS,Z          ; если Z=1 (т.е. не нажата ни одна из кнопок) выходим из функции
01E5   2???           00784     goto end_keyb           ; если Z=0, то пропускаем строку
                      00785     ;movlw .250
                      00786     ;sd
01E6   1985           00787     btfsc PORTA,3           ; определяем нажатия клавиши "3", проводя опрос первой строки
01E7   0ABD           00788     incf Key3,F
01E8   1A85           00789     btfsc PORTA,5           ; определяем нажатия клавиши "9", проводя опрос третей строки
01E9   0AC3           00790     incf Key9,F
                      00791  
01EA                  00792 end_keyb 
01EA   0008           00793     return                  ; выход из функции
                      00794     
                      00795 ;==============================================
                      00796 
01EB                  00797 change_time                 ; функция изменения времени
01EB   2???           00798     call Keyboard           ; спрашиваем клавиатуру
01EC   183B           00799     btfsc Key1,0
01ED   2???           00800     call correct_T_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
01EE   183C           00801     btfsc Key2,0
01EF   2???           00802     call correct_T_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
01F0   183D           00803     btfsc Key3,0
01F1   2???           00804     goto save_T             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
                            роисходит сохранение результата и выход в основной цикл
01F2   183E           00805     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
01F3   2???           00806     goto change_HMS
                      00807     
01F4   2???           00808     call LCD_one
01F5   2???           00809     goto change_time
                      00810     
                      00811     ;----------------------------------------
                      00812     
01F6                  00813 correct_T_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
01F6   30FF           00814     movlw 0xff
01F7   2???           00815     call delay                  ; задержка крч
01F8   30FF           00816     movlw 0xff
01F9   2???           00817     call delay                  ; задержка крч                      
01FA   3001           00818     movlw 0x1                   ; если NumPressKey = 0, то вызываем
01FB   0650           00819     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
01FC   1903           00820     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
01FD   2???           00821     call correct_H2
                      00822     
01FE   3002           00823     movlw 0x2                   ; если NumPressKey = 1, то вызываем
01FF   0650           00824     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0200   1903           00825     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0201   2???           00826     call correct_H1
                      00827 
0202   3003           00828     movlw 0x3                   ; если NumPressKey = 2, то вызываем
0203   0650           00829     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0204   1903           00830     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0205   2???           00831     call correct_M2
                      00832     
0206   3004           00833     movlw 0x4                   ; если NumPressKey = 3, то вызываем
0207   0650           00834     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0208   1903           00835     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0209   2???           00836     call correct_M1
                      00837     
020A   3005           00838     movlw 0x5                   ; если NumPressKey = 4, то вызываем
020B   0650           00839     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
020C   1903           00840     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
020D   2???           00841     call correct_S2
                      00842     
020E   3006           00843     movlw 0x6                   ; если NumPressKey = 5, то вызываем
020F   0650           00844     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0210   1903           00845     btfsc STATUS, 0x02          ; если нет, выходим из функции
0211   2???           00846     call correct_S1
                      00847     
0212   0008           00848     return
                      00849     
                      00850     ;----------------------------------------
                      00851     
0213                  00852 correct_H2                      ; функцию коррекции переменной H2.
0213   0AB1           00853     incf TIME_HH2,1     ; инкремент временной переменной для Н2
0214   3033           00854     movlw 0x33                  ; if !=3, переходим обратно в функцию
0215   0631           00855     xorwf TIME_HH2, w   ; correct_T_plus и проверяем там следующее условие
0216   1D03           00856     btfss STATUS, 0x02
0217   2???           00857     goto return_COR_H2
0218   3030           00858     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
0219   00B1           00859     movwf       TIME_HH2
021A                  00860 return_COR_H2
021A   0008           00861     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      00862     
021B                  00863 correct_H1                      ; функцию коррекции переменной H1.
021B   0AB0           00864     incf TIME_HH1,1     ; инкремент временной переменной для Н1
021C   3032           00865     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
021D   0631           00866     xorwf TIME_HH2, w   ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      00867                                 ; ограничить единицы при десятках = 2   
021E   1903           00868     btfsc STATUS, 0x02
021F   2???           00869     goto three_H1                       
0220   303A           00870     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
0221   0630           00871 t1  xorwf TIME_HH1, w   
0222   1D03           00872     btfss STATUS, 0x02
0223   2???           00873     goto return_COR_H1
0224   3030           00874     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
0225   00B0           00875     movwf       TIME_HH1
0226                  00876 return_COR_H1
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0226   0008           00877     return
                      00878     
0227                  00879 three_H1
0227   3034           00880     movlw 0x34                  ; предел для обнуления при переменной = 2
0228   2???           00881     goto t1                     ; возврат к метке t1 для продолжения корректной работы
                      00882     
0229                  00883 correct_M2                      ; функцию коррекции переменной M2.
0229   0AB3           00884     incf TIME_MM2,1
022A   3036           00885     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
022B   0633           00886     xorwf TIME_MM2, w;
022C   1D03           00887     btfss STATUS, 0x02
022D   2???           00888     goto return_COR_M2
022E   3030           00889     movlw       0x30
022F   00B3           00890     movwf       TIME_MM2
0230                  00891 return_COR_M2
0230   0008           00892     return
                      00893     
0231                  00894 correct_M1                      ; функцию коррекции переменной M1.
0231   0AB2           00895     incf TIME_MM1,1
0232   303A           00896     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
0233   0632           00897     xorwf TIME_MM1, w;
0234   1D03           00898     btfss STATUS, 0x02
0235   2???           00899     goto return_COR_M1
0236   3030           00900     movlw       0x30
0237   00B2           00901     movwf       TIME_MM1
0238                  00902 return_COR_M1
0238   0008           00903     return
                      00904     
0239                  00905 correct_S2                      ; функцию коррекции переменной S2.
0239   0AB5           00906     incf TIME_SS2,1
023A   3036           00907     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
023B   0635           00908     xorwf TIME_SS2, w;
023C   1D03           00909     btfss STATUS, 0x02
023D   2???           00910     goto return_COR_S2
023E   3030           00911     movlw       0x30
023F   00B5           00912     movwf       TIME_SS2
0240                  00913 return_COR_S2
0240   0008           00914     return
                      00915     
0241                  00916 correct_S1                      ; функцию коррекции переменной S1.
0241   0AB4           00917     incf TIME_SS1,1
0242   303A           00918     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
0243   0634           00919     xorwf TIME_SS1, w;
0244   1D03           00920     btfss STATUS, 0x02
0245   2???           00921     goto return_COR_S1
0246   3030           00922     movlw       0x30
0247   00B4           00923     movwf       TIME_SS1
0248                  00924 return_COR_S1
0248   0008           00925     return
                      00926     
                      00927     ;----------------------------------------
                      00928     
0249                  00929 correct_T_minus                 ; функция типа switch для ввода отдельных символов(декремент)
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   30FF           00930     movlw 0xff
024A   2???           00931     call delay              ; задержка крч
024B   30FF           00932     movlw 0xff
024C   2???           00933     call delay              ; задержка крч
024D   3001           00934     movlw 0x1                   ; если NumPressKey = 0, то вызываем
024E   0650           00935     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
024F   1903           00936     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0250   2???           00937     call correct_H2_minus
                      00938     
0251   3002           00939     movlw 0x2                   ; если NumPressKey = 1, то вызываем
0252   0650           00940     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0253   1903           00941     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0254   2???           00942     call correct_H1_minus
                      00943 
0255   3003           00944     movlw 0x3                   ; если NumPressKey = 2, то вызываем
0256   0650           00945     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
0257   1903           00946     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0258   2???           00947     call correct_M2_minus
                      00948     
0259   3004           00949     movlw 0x4                   ; если NumPressKey = 3, то вызываем
025A   0650           00950     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
025B   1903           00951     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
025C   2???           00952     call correct_M1_minus
                      00953     
025D   3005           00954     movlw 0x5                   ; если NumPressKey = 4, то вызываем
025E   0650           00955     xorwf NumPressKey, w;       ; функцию коррекции переменной S2.
025F   1903           00956     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0260   2???           00957     call correct_S2_minus
                      00958     
0261   3006           00959     movlw 0x6                   ; если NumPressKey = 5, то вызываем
0262   0650           00960     xorwf NumPressKey, w;       ; функцию коррекции переменной S1.
0263   1903           00961     btfsc STATUS, 0x02          ; если нет, выходим из функции
0264   2???           00962     call correct_S1_minus
                      00963     
0265   0008           00964     return
                      00965     
                      00966     ;----------------------------------------
                      00967     
0266                  00968 correct_H2_minus                ; функцию коррекции переменной H2.
0266   03B1           00969     decf TIME_HH2,1     ; декремент временной переменной для Н2
0267   302F           00970     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
0268   0631           00971     xorwf TIME_HH2, w   ; correct_T_ и проверяем там следующее условие
0269   1D03           00972     btfss STATUS, 0x02
026A   2???           00973     goto return_COR_H2_MIN
026B   3032           00974     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
026C   00B1           00975     movwf       TIME_HH2
026D                  00976 return_COR_H2_MIN
026D   0008           00977     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      00978     
026E                  00979 correct_H1_minus                ; функцию коррекции переменной H1.
026E   03B0           00980     decf TIME_HH1,1     ; декремент временной переменной для Н1
026F   302F           00981     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0270   0630           00982     xorwf TIME_HH1, w   ; correct_T_ и проверяем там следующее условие
                      00983                                         
0271   1D03           00984     btfss STATUS, 0x02
0272   2???           00985     goto return_COR_H1_MIN              
0273   3032           00986     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0274   0631           00987     xorwf TIME_HH2, w   
0275   1903           00988     btfsc STATUS, 0x02
0276   2???           00989     goto three_H1_minus
0277   3039           00990     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
0278   00B0           00991 t2  movwf       TIME_HH1
0279                  00992 return_COR_H1_MIN
0279   0008           00993     return
                      00994     
027A                  00995 three_H1_minus
027A   3033           00996     movlw 0x33                  ; значение для присваивания при Н2 = 2.
027B   2???           00997     goto t2                     ; возврат к метке t2 для продолжения корректной работы
                      00998     
027C                  00999 correct_M2_minus                        ; функцию коррекции переменной M2.
027C   03B3           01000     decf TIME_MM2,1
027D   302F           01001     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
027E   0633           01002     xorwf TIME_MM2, w;
027F   1D03           01003     btfss STATUS, 0x02
0280   2???           01004     goto return_COR_M2_MIN
0281   3035           01005     movlw       0x35
0282   00B3           01006     movwf       TIME_MM2
0283                  01007 return_COR_M2_MIN
0283   0008           01008     return
                      01009     
0284                  01010 correct_M1_minus                        ; функцию коррекции переменной M1.
0284   03B2           01011     decf TIME_MM1,1
0285   302F           01012     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0286   0632           01013     xorwf TIME_MM1, w;
0287   1D03           01014     btfss STATUS, 0x02
0288   2???           01015     goto return_COR_M1_MIN
0289   3039           01016     movlw       0x39
028A   00B2           01017     movwf       TIME_MM1
028B                  01018 return_COR_M1_MIN
028B   0008           01019     return
                      01020     
028C                  01021 correct_S2_minus                        ; функцию коррекции переменной S2.
028C   03B5           01022     decf TIME_SS2,1
028D   302F           01023     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
028E   0635           01024     xorwf TIME_SS2, w;
028F   1D03           01025     btfss STATUS, 0x02
0290   2???           01026     goto return_COR_S2_MIN
0291   3035           01027     movlw       0x35
0292   00B5           01028     movwf       TIME_SS2
0293                  01029 return_COR_S2_MIN
0293   0008           01030     return
                      01031     
0294                  01032 correct_S1_minus                        ; функцию коррекции переменной S1.
0294   03B4           01033     decf TIME_SS1,1
0295   302F           01034     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0296   0634           01035     xorwf TIME_SS1, w;
0297   1D03           01036     btfss STATUS, 0x02
0298   2???           01037     goto return_COR_S1_MIN
0299   3039           01038     movlw       0x39
029A   00B4           01039     movwf       TIME_SS1
029B                  01040 return_COR_S1_MIN
029B   0008           01041     return
                      01042     
                      01043     ;==============================================
                      01044     
029C                  01045 save_T                          ; функция проверки и сохранения времени
029C   30FF           01046     movlw 0xff
029D   2???           01047     call delay                  ; задержка крч
029E   30FF           01048     movlw 0xff
029F   2???           01049     call delay                  ; задержка крч
02A0   3006           01050     movlw 0x6                   ; если происходит переполнение NumPressKey
02A1   0650           01051     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
02A2   1903           01052     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
02A3   2???           01053     goto START                  ; в постоянные
02A4   0AD0           01054     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
02A5   2???           01055     goto change_time            ; его и возвращаемся в функцию изменения времени
                      01056     
02A6                  01057 change_HMS
02A6   0846           01058     movfw TEMP_TIME_HH2         ; записываем значения временных переменных в постоянные (NPK 
02A7   00B1           01059     movwf TIME_HH2              ; необходим для определения ячейки, в которую записываем
02A8   0845           01060     movfw TEMP_TIME_HH1         ; значение)
02A9   00B0           01061     movwf TIME_HH1
02AA   0848           01062     movfw TEMP_TIME_MM2         
02AB   00B3           01063     movwf TIME_MM2
02AC   0847           01064     movfw TEMP_TIME_MM1         
02AD   00B2           01065     movwf TIME_MM1
02AE   084A           01066     movfw TEMP_TIME_SS2         
02AF   00B5           01067     movwf TIME_SS2
02B0   0849           01068     movfw TEMP_TIME_SS1         
02B1   00B4           01069     movwf TIME_SS1
02B2   2???           01070     goto START                  ; возврат в основной цикл
                      01071     
                      01072     ;==============================================
                      01073     ;==============================================
                      01074     ;==============================================
                      01075     
02B3                  01076 change_day                  ; функция изменения дня недели
02B3   2???           01077     call Keyboard
02B4   183B           01078     btfsc Key1,0
02B5   2???           01079     goto plus_day_ch        ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
02B6   183C           01080     btfsc Key2,0
02B7   2???           01081     goto minus_day_ch       ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
02B8   183D           01082     btfsc Key3,0            ; выход из настройки времени в основной цикл без сохранения результата
02B9   2???           01083     goto START
02BA   183E           01084     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
02BB   2???           01085     goto save_day_ch
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01086     
02BC   2???           01087     call LCD_one
                      01088     
02BD   2???           01089     goto change_day
                      01090     
02BE                  01091 plus_day_ch
02BE   30FF           01092     movlw 0xff
02BF   2???           01093     call delay              ; задержка крч
02C0   30FF           01094     movlw 0xff
02C1   2???           01095     call delay              ; задержка крч
02C2   0AB6           01096     incf DAY,1
02C3   3007           01097     movlw .7                    ; inc переменной День
02C4   0636           01098     xorwf DAY, w;
02C5   1D03           01099     btfss STATUS, 0x02          ; is not working 
02C6   2???           01100     goto change_day                     ; 
02C7   3000           01101     movlw .0
02C8   00B6           01102     movwf DAY
02C9   2???           01103     goto change_day
                      01104     
02CA                  01105 minus_day_ch
02CA   30FF           01106     movlw 0xff
02CB   2???           01107     call delay              ; задержка крч
02CC   30FF           01108     movlw 0xff
02CD   2???           01109     call delay              ; задержка крч
02CE   03B6           01110     decf DAY,1
02CF   30FF           01111     movlw .255                  ; inc переменной День
02D0   0636           01112     xorwf DAY, w;
02D1   1D03           01113     btfss STATUS, 0x02          ; is not working 
02D2   2???           01114     goto change_day                     
02D3   3006           01115     movlw .6
02D4   00B6           01116     movwf DAY
02D5   2???           01117     goto change_day
                      01118     
02D6                  01119 save_day_ch
02D6   084B           01120     movfw TEMP_DAY
02D7   00B6           01121     movwf DAY
02D8   2???           01122     goto START
                      01123     
                      01124     ;==============================================
                      01125     ;==============================================
                      01126     ;==============================================
                      01127     
                      01128     ;==============================================
02D9                  01129 change_alarm                
02D9   2???           01130     call Keyboard           ; спрашиваем клавиатуру
02DA   183B           01131     btfsc Key1,0
02DB   2???           01132     call correct_A_plus     ; если нажали кнопку 1 переходим в функцию, которая инкрементирует выбранное
                             число (inc)
02DC   183C           01133     btfsc Key2,0
02DD   2???           01134     call correct_A_minus    ; если нажали кнопку 2 переходим в функцию, которая декрементирует выбранное
                             число (dec)
02DE   183D           01135     btfsc Key3,0
02DF   2???           01136     goto save_A             ; переход к другой цифре путем инкремента NPK, при переполнения переменной п
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            роисходит сохранение результата и выход в основной цикл
02E0   183E           01137     btfsc Key4,0            ; выход из настройки времени в основной цикл без сохранения результата
02E1   2???           01138     goto change_AHMS
                      01139     
02E2   2???           01140     call LCD_two
02E3   2???           01141     goto change_alarm
                      01142     
                      01143     ;----------------------------------------
                      01144     
02E4                  01145 correct_A_plus                  ; функция типа switch для ввода отдельных символов(инкремент или прибавл
                            ение)
02E4   30FF           01146     movlw 0xff
02E5   2???           01147     call delay                  ; задержка крч
02E6   30FF           01148     movlw 0xff
02E7   2???           01149     call delay                  ; задержка крч                      
02E8   300A           01150     movlw 0xa                   ; если NumPressKey = 0, то вызываем
02E9   0650           01151     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
02EA   1903           01152     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02EB   2???           01153     call correct_H2_A
                      01154     
02EC   300B           01155     movlw 0xb           ; если NumPressKey = 1, то вызываем
02ED   0650           01156     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
02EE   1903           01157     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02EF   2???           01158     call correct_H1_A
                      01159 
02F0   300C           01160     movlw 0xc                   ; если NumPressKey = 2, то вызываем
02F1   0650           01161     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
02F2   1903           01162     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02F3   2???           01163     call correct_M2_A
                      01164     
02F4   300D           01165     movlw 0xd                   ; если NumPressKey = 3, то вызываем
02F5   0650           01166     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
02F6   1903           01167     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
02F7   2???           01168     call correct_M1_A
                      01169     
02F8   0008           01170     return
                      01171     
                      01172     ;----------------------------------------
                      01173     
02F9                  01174 correct_H2_A                    ; функцию коррекции переменной H2.
02F9   0AB8           01175     incf ALARM_HH2,1    ; инкремент временной переменной для Н2
02FA   3033           01176     movlw 0x33                  ; if !=3, переходим обратно в функцию
02FB   0638           01177     xorwf ALARM_HH2, w  ; correct_T_plus и проверяем там следующее условие
02FC   1D03           01178     btfss STATUS, 0x02
02FD   2???           01179     goto return_COR_H2_A
02FE   3030           01180     movlw       0x30            ; Если переменная = 3, то обнуляем ее, т.к. в сутках 2 десятка часов
02FF   00B8           01181     movwf       ALARM_HH2
0300                  01182 return_COR_H2_A
0300   0008           01183     return                      ; и идем обратно в correct_T_plus и проверяем там следующее условие
                      01184     
0301                  01185 correct_H1_A                    ; функцию коррекции переменной H1.
0301   0AB7           01186     incf ALARM_HH1,1    ; инкремент временной переменной для Н1
0302   3032           01187     movlw 0x32                  ; if = 2, переходим в функцию three_H1, которая служит для 
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0303   0638           01188     xorwf ALARM_HH2, w  ; корректной задачи времени, т.к. 18 часов может быть, а 28 нет, то надо
                      01189                                 ; ограничить единицы при десятках = 2   
0304   1903           01190     btfsc STATUS, 0x02
0305   2???           01191     goto three_H1_A                     
0306   303A           01192     movlw 0x3a                  ; есди переменная = 0 или = 1, то максимальная единица для обноления - 9
                            .
0307   0637           01193 ta1 xorwf ALARM_HH1, w  
0308   1D03           01194     btfss STATUS, 0x02
0309   2???           01195     goto return_COR_H1_A
030A   3030           01196     movlw       0x30            ; собственно обнуление переменной при достижении 10 или 4 по условию выш
                            е. 
030B   00B7           01197     movwf       ALARM_HH1
030C                  01198 return_COR_H1_A
030C   0008           01199     return
                      01200     
030D                  01201 three_H1_A
030D   3034           01202     movlw 0x34                  ; предел для обнуления при переменной = 2
030E   2???           01203     goto ta1                    ; возврат к метке t1 для продолжения корректной работы
                      01204     
030F                  01205 correct_M2_A                    ; функцию коррекции переменной M2.
030F   0ABA           01206     incf ALARM_MM2,1
0310   3036           01207     movlw 0x36                  ; Работает так же, только обнуление происходит при достижении 6
0311   063A           01208     xorwf ALARM_MM2, w;
0312   1D03           01209     btfss STATUS, 0x02
0313   2???           01210     goto return_COR_M2_A
0314   3030           01211     movlw       0x30
0315   00BA           01212     movwf       ALARM_MM2
0316                  01213 return_COR_M2_A
0316   0008           01214     return
                      01215     
0317                  01216 correct_M1_A                    ; функцию коррекции переменной M1.
0317   0AB9           01217     incf ALARM_MM1,1
0318   303A           01218     movlw 0x3a                  ; Работает так же, только обнуление происходит при достижении 10
0319   0639           01219     xorwf ALARM_MM1, w;
031A   1D03           01220     btfss STATUS, 0x02
031B   2???           01221     goto return_COR_M1_A
031C   3030           01222     movlw       0x30
031D   00B9           01223     movwf       ALARM_MM1
031E                  01224 return_COR_M1_A
031E   0008           01225     return
                      01226     
                      01227     ;----------------------------------------
                      01228     
031F                  01229 correct_A_minus                 ; функция типа switch для ввода отдельных символов(декремент)
031F   30FF           01230     movlw 0xff
0320   2???           01231     call delay              ; задержка крч
0321   30FF           01232     movlw 0xff
0322   2???           01233     call delay              ; задержка крч
0323   300A           01234     movlw 0xa                   ; если NumPressKey = 0, то вызываем
0324   0650           01235     xorwf NumPressKey, w;       ; функцию коррекции переменной Н2.
0325   1903           01236     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0326   2???           01237     call correct_H2_minus_A
                      01238     
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0327   300B           01239     movlw 0xb                   ; если NumPressKey = 1, то вызываем
0328   0650           01240     xorwf NumPressKey, w;       ; функцию коррекции переменной Н1.
0329   1903           01241     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
032A   2???           01242     call correct_H1_minus_A
                      01243 
032B   300C           01244     movlw 0xc                   ; если NumPressKey = 2, то вызываем
032C   0650           01245     xorwf NumPressKey, w;       ; функцию коррекции переменной M2.
032D   1903           01246     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
032E   2???           01247     call correct_M2_minus_A
                      01248     
032F   300D           01249     movlw 0xd                   ; если NumPressKey = 3, то вызываем
0330   0650           01250     xorwf NumPressKey, w;       ; функцию коррекции переменной M1.
0331   1903           01251     btfsc STATUS, 0x02          ; если нет, проверяем следующее условие
0332   2???           01252     call correct_M1_minus_A
                      01253     
0333   0008           01254     return
                      01255     
                      01256     ;----------------------------------------
                      01257     
0334                  01258 correct_H2_minus_A              ; функцию коррекции переменной H2.
0334   03B8           01259     decf ALARM_HH2,1    ; декремент временной переменной для Н2
0335   302F           01260     movlw 0x2f                  ; if !=2f, переходим обратно в функцию
0336   0638           01261     xorwf ALARM_HH2, w  ; correct_T_ и проверяем там следующее условие
0337   1D03           01262     btfss STATUS, 0x02
0338   2???           01263     goto return_COR_H2_A_minus
0339   3032           01264     movlw       0x32            ; Если переменная = 2f, то присваиваем ей значение 2, т.к. в сутках 2 де
                            сятка часов
033A   00B8           01265     movwf       ALARM_HH2
033B                  01266 return_COR_H2_A_minus
033B   0008           01267     return                      ; и идем обратно в correct_T_ и проверяем там следующее условие
                      01268     
033C                  01269 correct_H1_minus_A              ; функцию коррекции переменной H1.
033C   03B7           01270     decf ALARM_HH1,1    ; декремент временной переменной для Н1
033D   302F           01271     movlw 0x2f                  ; if != 2f, переходим обратно в функцию 
033E   0637           01272     xorwf ALARM_HH1, w  ; correct_T_ и проверяем там следующее условие
                      01273                                         
033F   1D03           01274     btfss STATUS, 0x02
0340   2???           01275     goto return_COR_H1_A_minus          
0341   3032           01276     movlw 0x32                  ; есди переменная = 2, то при достижении 2f будем присваивать Н1 = 3.
0342   0638           01277     xorwf ALARM_HH2, w  
0343   1903           01278     btfsc STATUS, 0x02
0344   2???           01279     goto three_H1_minus_A
0345   3039           01280     movlw       0x39            ; есди переменная != 2, то при достижении 2f будем присваивать Н1 = 9. 
0346   00B7           01281 ta2 movwf       ALARM_HH1
0347                  01282 return_COR_H1_A_minus
0347   0008           01283     return
                      01284     
0348                  01285 three_H1_minus_A
0348   3033           01286     movlw 0x33                  ; значение для присваивания при Н2 = 2.
0349   2???           01287     goto ta2                    ; возврат к метке t2 для продолжения корректной работы
                      01288     
034A                  01289 correct_M2_minus_A                      ; функцию коррекции переменной M2.
034A   03BA           01290     decf ALARM_MM2,1
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034B   302F           01291     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 5
034C   063A           01292     xorwf ALARM_MM2, w;
034D   1D03           01293     btfss STATUS, 0x02
034E   2???           01294     goto return_COR_M2_A_minus
034F   3035           01295     movlw       0x35
0350   00BA           01296     movwf       ALARM_MM2
0351                  01297 return_COR_M2_A_minus
0351   0008           01298     return
                      01299     
0352                  01300 correct_M1_minus_A                      ; функцию коррекции переменной M1.
0352   03B9           01301     decf ALARM_MM1,1
0353   302F           01302     movlw 0x2f                  ; Работает так же, только при достижении 2f присваивается 10
0354   0639           01303     xorwf ALARM_MM1, w;
0355   1D03           01304     btfss STATUS, 0x02
0356   2???           01305     goto return_COR_M1_A_minus
0357   3039           01306     movlw       0x39
0358   00B9           01307     movwf       ALARM_MM1
0359                  01308 return_COR_M1_A_minus
0359   0008           01309     return
                      01310     
                      01311     ;==============================================
                      01312     
035A                  01313 save_A                          ; функция проверки и сохранения времени
035A   30FF           01314     movlw 0xff
035B   2???           01315     call delay                  ; задержка крч
035C   30FF           01316     movlw 0xff
035D   2???           01317     call delay                  ; задержка крч
035E   300E           01318     movlw 0xe                   ; если происходит переполнение NumPressKey
035F   0650           01319     xorwf NumPressKey, w        ; значит время заданно корректно во всех ячейках
0360   1903           01320     btfsc STATUS, 0x02          ; и мы переходим в функцию записи переменных значений
0361   2???           01321     goto START                  ; в постоянные
0362   0AD0           01322     incf NumPressKey,1          ; Если NumPressKey не переполнен, то инкрементируем
0363   2???           01323     goto change_alarm           ; его и возвращаемся в функцию изменения времени
                      01324     
0364                  01325 change_AHMS
0364   084D           01326     movfw TEMP_ALARM_HH2                ; записываем значения временных переменных в постоянные (NPK 
0365   00B8           01327     movwf ALARM_HH2             ; необходим для определения ячейки, в которую записываем
0366   084C           01328     movfw TEMP_ALARM_HH1                ; значение)
0367   00B7           01329     movwf ALARM_HH1
0368   084F           01330     movfw TEMP_ALARM_MM2                
0369   00BA           01331     movwf ALARM_MM2
036A   084E           01332     movfw TEMP_ALARM_MM1                
036B   00B9           01333     movwf ALARM_MM1
036C   2???           01334     goto START                  ; возврат в основной цикл
                      01335     
                      01336     ;==============================================
                      01337     ;==============================================
                      01338     ;==============================================
                      01339                             
                      01340 ;small_delay:                   ; задержка для драйвера
                      01341 ;    movwf fCOUNTER1
                      01342 ;    clrwdt
                      01343 ;    decfsz fCOUNTER1,F
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01344 ;    goto $-2
                      01345 ;    return
                      01346     
Warning[205]: Found directive in column 1. (end)
                      01347 end  ; конец программы
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARM_HH1                         00000037
ALARM_HH2                         00000038
ALARM_MM1                         00000039
ALARM_MM2                         0000003A
BCLIE                             00000003
BCLIF                             00000003
BD_Loop                           000000F3
BF                                00000000
BRGH                              00000002
Blink                             00000051
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DAY                               00000036
DC                                00000001
DEC                               0000009F
DS                                00000002
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Key1                              0000003B
Key2                              0000003C
Key3                              0000003D
Key4                              0000003E
Key5                              0000003F
Key6                              00000040
Key7                              00000041
Key8                              00000042
Key9                              00000043
Keyboard                          000001C4
LCD_one                           000000F9
LCD_two                           00000173
NOT_A                             00000005
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumPressKey                       00000050
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RST                               00000002
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START                             00000040
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_ALARM_HH1                    0000004C
TEMP_ALARM_HH2                    0000004D
TEMP_ALARM_MM1                    0000004E
TEMP_ALARM_MM2                    0000004F
TEMP_DAY                          0000004B
TEMP_TIME_HH1                     00000045
TEMP_TIME_HH2                     00000046
TEMP_TIME_MM1                     00000047
TEMP_TIME_MM2                     00000048
TEMP_TIME_SS1                     00000049
TEMP_TIME_SS2                     0000004A
TIME_HH1                          00000030
TIME_HH2                          00000031
TIME_MM1                          00000032
TIME_MM2                          00000033
TIME_SS1                          00000034
TIME_SS2                          00000035
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WAIT                              00000020
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

alarm_plus_blink                  000000E3
bank0                             bcf STATUS,  RP0
bank1                             bsf STATUS,  RP0
begin                             00000004
blink_off_H1                      00000123
blink_off_H1_A                    000001A2
blink_off_H2                      00000115
blink_off_H2_A                    00000194
blink_off_M1                      0000013F
blink_off_M1_A                    000001BE
blink_off_M2                      00000131
blink_off_M2_A                    000001B0
blink_off_S1                      0000015B
blink_off_S2                      0000014D
blink_off_day                     00000169
blink_on_H1                       00000126
blink_on_H1_A                     000001A5
blink_on_H2                       00000118
blink_on_H2_A                     00000197
blink_on_M1                       00000142
blink_on_M1_A                     000001C1
blink_on_M2                       00000134
blink_on_M2_A                     000001B3
blink_on_S1                       0000015E
blink_on_S2                       00000150
blink_on_day                      00000170
change_AHMS                       00000364
change_HMS                        000002A6
change_alarm                      000002D9
change_day                        000002B3
change_time                       000001EB
col1                              000001CB
col2                              000001D6
col3                              000001DF
correct_A_minus                   0000031F
correct_A_plus                    000002E4
correct_H1                        0000021B
correct_H1_A                      00000301
correct_H1_minus                  0000026E
correct_H1_minus_A                0000033C
correct_H2                        00000213
correct_H2_A                      000002F9
correct_H2_minus                  00000266
correct_H2_minus_A                00000334
correct_M1                        00000231
correct_M1_A                      00000317
correct_M1_minus                  00000284
correct_M1_minus_A                00000352
correct_M2                        00000229
correct_M2_A                      0000030F
correct_M2_minus                  0000027C
correct_M2_minus_A                0000034A
correct_S1                        00000241
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

correct_S1_minus                  00000294
correct_S2                        00000239
correct_S2_minus                  0000028C
correct_T_minus                   00000249
correct_T_plus                    000001F6
day_plus_blink                    000000DF
delay                             000000EF
end_clock                         00000096
end_keyb                          000001EA
exday                             000000D8
fCOUNTER                          00000026
fCOUNTER1                         00000044
fCOUNTER2                         00000027
friday                            000000C4
minus_day_ch                      000002CA
monday                            000000A8
paintH1                           0000011B
paintH1_A                         0000019A
paintH2                           0000010D
paintH2_A                         0000018C
paintM1                           00000137
paintM1_A                         000001B6
paintM2                           00000129
paintM2_A                         000001A8
paintS1                           00000153
paintS2                           00000145
plus_day_ch                       000002BE
printDay                          00000161
return_A_H1                       000001A7
return_A_H2                       00000199
return_A_M1                       000001C3
return_A_M2                       000001B5
return_COR_H1                     00000226
return_COR_H1_A                   0000030C
return_COR_H1_A_minus             00000347
return_COR_H1_MIN                 00000279
return_COR_H2                     0000021A
return_COR_H2_A                   00000300
return_COR_H2_A_minus             0000033B
return_COR_H2_MIN                 0000026D
return_COR_M1                     00000238
return_COR_M1_A                   0000031E
return_COR_M1_A_minus             00000359
return_COR_M1_MIN                 0000028B
return_COR_M2                     00000230
return_COR_M2_A                   00000316
return_COR_M2_A_minus             00000351
return_COR_M2_MIN                 00000283
return_COR_S1                     00000248
return_COR_S1_MIN                 0000029B
return_COR_S2                     00000240
return_COR_S2_MIN                 00000293
return_DAY                        00000172
MPASM 5.75                          MAIN.ASM   10-25-2017  6:09:47         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

return_H1                         00000128
return_H2                         0000011A
return_M1                         00000144
return_M2                         00000136
return_S1                         00000160
return_S2                         00000152
saturday                          000000CB
save_A                            0000035A
save_T                            0000029C
save_day_ch                       000002D6
sunday                            000000D2
t1                                00000221
t2                                00000278
ta1                               00000307
ta2                               00000346
ten_clock                         0000008F
three_H1                          00000227
three_H1_A                        0000030D
three_H1_minus                    0000027A
three_H1_minus_A                  00000348
thursday                          000000BD
time_plus_blink                   000000D9
tuesday                           000000AF
wait                              
wednesday                         000000B6
write                             000000E7

Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :     2 reported,    12 suppressed

